{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Contributing","text":""},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to Apache Iceberg! To learn more about contributing to Apache Iceberg, please refer to the official Iceberg contribution guidelines. These guidelines are intended as helpful suggestions to make the contribution process as seamless as possible, and are not strict rules.</p> <p>If you would like to discuss your proposed change before contributing, we encourage you to visit our Community page. There, you will find various ways to connect with the community, including Slack and our mailing lists. Alternatively, you can open a new issue directly in the GitHub repository.</p> <p>For first-time contributors, feel free to check out our good first issues for an easy way to get started.</p>"},{"location":"#contributing-to-iceberg-c","title":"Contributing to Iceberg C++","text":"<p>The Iceberg C++ Project is hosted on GitHub at https://github.com/apache/iceberg-cpp.</p>"},{"location":"#development-setup","title":"Development Setup","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>CMake 3.25 or higher</li> <li>C++23 compliant compiler (GCC 11+, Clang 14+, MSVC 2022+)</li> <li>Git</li> </ul>"},{"location":"#building-from-source","title":"Building from Source","text":"<p>Clone the repository for local development:</p> <pre><code>git clone https://github.com/apache/iceberg-cpp.git\ncd iceberg-cpp\n</code></pre> <p>Build the core libraries:</p> <pre><code>cmake -S . -B build -G Ninja -DCMAKE_INSTALL_PREFIX=/path/to/install -DICEBERG_BUILD_STATIC=ON -DICEBERG_BUILD_SHARED=ON\ncmake --build build\nctest --test-dir build --output-on-failure\ncmake --install build\n</code></pre> <p>Build with bundled dependencies:</p> <pre><code>cmake -S . -B build -G Ninja -DCMAKE_INSTALL_PREFIX=/path/to/install -DICEBERG_BUILD_BUNDLE=ON\ncmake --build build\nctest --test-dir build --output-on-failure\ncmake --install build\n</code></pre>"},{"location":"#code-standards","title":"Code Standards","text":""},{"location":"#c-coding-standards","title":"C++ Coding Standards","text":"<p>We follow modern C++ best practices:</p> <ul> <li>C++23 Standard: Use C++23 features where appropriate</li> <li>Naming Conventions:</li> <li>Classes: <code>PascalCase</code> (e.g., <code>TableScanBuilder</code>)</li> <li>Functions: <code>snake_case</code> (e.g., <code>find_field_by_name</code>)</li> <li>Variables: <code>snake_case</code> (e.g., <code>file_io</code>)</li> <li>Constants: <code>UPPER_SNAKE_CASE</code> (e.g., <code>MAX_RETRIES</code>)</li> <li>Memory Management: Prefer smart pointers (<code>std::unique_ptr</code>, <code>std::shared_ptr</code>)</li> <li>Error Handling: Use <code>Result&lt;T&gt;</code> types for error propagation</li> <li>Documentation: Use Doxygen-style comments for public APIs</li> </ul>"},{"location":"#api-compatibility","title":"API Compatibility","text":"<p>It is important to keep the C++ public API compatible across versions. Public methods should have no leading underscores and should not be removed without deprecation notice.</p> <p>If you want to remove a method, please add a deprecation notice:</p> <pre><code>[[deprecated(\"This method will be removed in version 2.0.0. Use new_method() instead.\")]]\nvoid old_method();\n</code></pre>"},{"location":"#code-formatting","title":"Code Formatting","text":"<p>We use <code>clang-format</code> for code formatting. The configuration is defined in <code>.clang-format</code> file.</p> <p>Format your code before submitting:</p> <pre><code>clang-format -i src/**/*.{h,cc}\n</code></pre>"},{"location":"#testing","title":"Testing","text":""},{"location":"#running-tests","title":"Running Tests","text":"<p>Run all tests:</p> <pre><code>ctest --test-dir build --output-on-failure\n</code></pre> <p>Run specific test:</p> <pre><code>ctest --test-dir build -R test_name\n</code></pre>"},{"location":"#linting","title":"Linting","text":"<p>Install the python package <code>pre-commit</code> and run once <code>pre-commit install</code>:</p> <pre><code>pip install pre-commit\npre-commit install\n</code></pre> <p>This will setup a git pre-commit-hook that is executed on each commit and will report the linting problems. To run all hooks on all files use <code>pre-commit run -a</code>.</p>"},{"location":"#submitting-changes","title":"Submitting Changes","text":""},{"location":"#git-workflow","title":"Git Workflow","text":"<ol> <li>Fork the repository on GitHub</li> <li>Create a feature branch from <code>main</code>:    <pre><code>git checkout -b feature/your-feature-name\n</code></pre></li> <li>Make your changes following the coding standards</li> <li>Add tests for your changes</li> <li>Run tests to ensure everything passes</li> <li>Commit your changes with a clear commit message</li> <li>Push to your fork and create a Pull Request</li> </ol>"},{"location":"#commit-message-format","title":"Commit Message Format","text":"<p>Use clear, descriptive commit messages:</p> <pre><code>feat: add support for S3 file system\nfix: resolve memory leak in table reader\ndocs: update API documentation\ntest: add unit tests for schema validation\n</code></pre>"},{"location":"#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Create a Pull Request with a clear description</li> <li>Link related issues if applicable</li> <li>Ensure CI passes - all tests must pass</li> <li>Request review from maintainers</li> <li>Address feedback and update the PR as needed</li> <li>Squash commits if requested by reviewers</li> </ol>"},{"location":"#community","title":"Community","text":"<p>The Apache Iceberg community is built on the principles described in the Apache Way and all who engage with the community are expected to be respectful, open, come with the best interests of the community in mind, and abide by the Apache Foundation Code of Conduct.</p>"},{"location":"#getting-help","title":"Getting Help","text":"<ul> <li>Submit Issues: GitHub Issues for bug reports or feature requests</li> <li>Mailing List: dev@iceberg.apache.org for discussions</li> <li>Subscribe</li> <li>Unsubscribe</li> <li>Archives</li> <li>Slack: Apache Iceberg Slack #cpp channel</li> </ul>"},{"location":"#good-first-issues","title":"Good First Issues","text":"<p>New to the project? Check out our good first issues for an easy way to get started.</p>"},{"location":"#release-process","title":"Release Process","text":"<p>Releases are managed by the Apache Iceberg project maintainers. For information about the release process, please refer to the main Iceberg project documentation.</p>"},{"location":"#license","title":"License","text":"<p>Licensed under the Apache License, Version 2.0</p>"},{"location":"releases/","title":"Releases","text":""},{"location":"releases/#releases","title":"Releases","text":"<p>Apache Iceberg C++ releases are available for download from our GitHub releases page.</p>"},{"location":"releases/#latest-release","title":"Latest Release","text":""},{"location":"releases/#apache-iceberg-c-010","title":"Apache Iceberg C++ 0.1.0","text":"<p>Released: September 15, 2024</p> <p>Download: v0.1.0</p>"},{"location":"releases/#whats-new","title":"What's New","text":"<p>This is the first official release of Apache Iceberg C++. This release includes:</p> <ul> <li>Core Libraries: Basic CMake support and iceberg library structure</li> <li>Data Types: Support for primitive types (int, long, string, boolean, etc.)</li> <li>Schema Management: Schema field definitions and schema conversion</li> <li>Table Metadata: Table metadata reading and writing capabilities</li> <li>File I/O: Local file system support using Arrow FileSystem</li> <li>Avro Support: Avro file reading and schema conversion</li> <li>Arrow Integration: Arrow C Data Interface and schema conversion</li> <li>Partitioning: Partition field and partition spec support</li> <li>Sorting: Sort order and sort field definitions</li> <li>Expressions: Basic expression support and literal types</li> <li>Catalog: In-memory catalog implementation</li> <li>Table Scanning: Basic table scan planning</li> <li>Testing: Comprehensive test suite with GoogleTest</li> <li>Documentation: API documentation generation with Doxygen</li> </ul>"},{"location":"releases/#key-features","title":"Key Features","text":"<ul> <li>C++23 Support: Modern C++ features and standards</li> <li>Cross-Platform: Support for Linux, macOS, and Windows</li> <li>Arrow Integration: Seamless integration with Apache Arrow</li> <li>Avro Compatibility: Full Avro file format support</li> <li>Memory Safety: Smart pointer usage and RAII patterns</li> <li>Error Handling: Comprehensive error handling with Result types</li> <li>Performance: Optimized for high-performance data processing</li> </ul>"},{"location":"releases/#installation","title":"Installation","text":"<p>Download the release from GitHub and follow the installation instructions in our Contributing guide.</p>"},{"location":"releases/#breaking-changes","title":"Breaking Changes","text":"<p>This is the first release, so there are no breaking changes from previous versions.</p>"},{"location":"releases/#all-releases","title":"All Releases","text":"<p>For a complete list of all releases, including release notes and download links, visit our GitHub Releases page.</p>"},{"location":"releases/#release-history","title":"Release History","text":"Version Release Date Status Download v0.1.0 September 15, 2024 Latest Download"},{"location":"releases/#release-process","title":"Release Process","text":"<p>Apache Iceberg C++ follows the Apache Software Foundation release process:</p> <ol> <li>Release Candidates: Pre-release versions for testing</li> <li>Community Review: Community feedback and testing period</li> <li>Vote: Apache PMC vote on release approval</li> <li>Release: Official release announcement and distribution</li> </ol>"},{"location":"releases/#download-options","title":"Download Options","text":""},{"location":"releases/#source-code","title":"Source Code","text":"<p>Download the source code from our GitHub releases page:</p> <pre><code># Download latest release\nwget https://github.com/apache/iceberg-cpp/archive/refs/tags/v0.1.0.tar.gz\n\n# Extract and build\ntar -xzf v0.1.0.tar.gz\ncd iceberg-cpp-0.1.0\n</code></pre>"},{"location":"releases/#pre-built-binaries","title":"Pre-built Binaries","text":"<p>Pre-built binaries are available for select platforms. Check the GitHub Releases page for available binary distributions.</p>"},{"location":"releases/#package-managers","title":"Package Managers","text":"<p>We are working on package manager support. Stay tuned for updates on:</p> <ul> <li>Conan package manager</li> <li>vcpkg package manager</li> <li>Homebrew (macOS)</li> <li>APT/YUM (Linux distributions)</li> </ul>"},{"location":"releases/#verification","title":"Verification","text":"<p>All releases are cryptographically signed. Verify the integrity of downloads using the provided checksums and signatures.</p>"},{"location":"releases/#checksums","title":"Checksums","text":"<p>Release checksums are available in the release assets on GitHub.</p>"},{"location":"releases/#gpg-signatures","title":"GPG Signatures","text":"<p>Releases are signed with the Apache Iceberg project GPG key. Verify signatures using:</p> <pre><code># Import the Apache Iceberg GPG key\ngpg --keyserver keyserver.ubuntu.com --recv-keys B5690EEEBB952194\n\n# Verify the signature\ngpg --verify iceberg-cpp-0.1.0.tar.gz.asc iceberg-cpp-0.1.0.tar.gz\n</code></pre>"},{"location":"releases/#support","title":"Support","text":"<p>For questions about releases or to report issues:</p> <ul> <li>GitHub Issues: Report bugs or request features</li> <li>Mailing List: dev@iceberg.apache.org</li> <li>Slack: Apache Iceberg Slack #cpp channel</li> </ul>"},{"location":"releases/#license","title":"License","text":"<p>All releases are licensed under the Apache License, Version 2.0.</p>"}]}