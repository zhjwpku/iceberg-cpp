<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="table__metadata__builder__test_8cc" kind="file" language="C++">
    <compoundname>table_metadata_builder_test.cc</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">gmock/gmock-matchers.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="partition__spec_8h" local="yes">iceberg/partition_spec.h</includes>
    <includes refid="sort__order_8h" local="yes">iceberg/sort_order.h</includes>
    <includes refid="table__metadata_8h" local="yes">iceberg/table_metadata.h</includes>
    <includes refid="table__requirement_8h" local="yes">iceberg/table_requirement.h</includes>
    <includes refid="table__requirements_8h" local="yes">iceberg/table_requirements.h</includes>
    <includes refid="table__update_8h" local="yes">iceberg/table_update.h</includes>
    <includes refid="matchers_8h" local="yes">iceberg/test/matchers.h</includes>
    <incdepgraph>
      <node id="12">
        <label>iceberg/iceberg_export.h</label>
        <link refid="iceberg__export_8h_source"/>
      </node>
      <node id="13">
        <label>iceberg/partition_field.h</label>
        <link refid="partition__field_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iceberg/partition_spec.h</label>
        <link refid="partition__spec_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>iceberg/result.h</label>
        <link refid="result_8h_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>iceberg/snapshot.h</label>
        <link refid="snapshot_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>iceberg/sort_field.h</label>
        <link refid="sort__field_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>iceberg/sort_order.h</label>
        <link refid="sort__order_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iceberg/table_metadata.h</label>
        <link refid="table__metadata_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>iceberg/table_requirement.h</label>
        <link refid="table__requirement_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>iceberg/table_requirements.h</label>
        <link refid="table__requirements_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>iceberg/table_update.h</label>
        <link refid="table__update_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>iceberg/test/matchers.h</label>
        <link refid="matchers_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg/test/table_metadata_builder_test.cc</label>
        <link refid="table__metadata__builder__test_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iceberg/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
      </node>
      <node id="16">
        <label>iceberg/util/formattable.h</label>
        <link refid="formattable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>iceberg/util/macros.h</label>
        <link refid="macros_8h_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>iceberg/util/timepoint.h</label>
        <link refid="timepoint_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>cassert</label>
      </node>
      <node id="25">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="18">
        <label>expected</label>
      </node>
      <node id="19">
        <label>format</label>
      </node>
      <node id="4">
        <label>gmock/gmock-matchers.h</label>
      </node>
      <node id="33">
        <label>gmock/gmock.h</label>
      </node>
      <node id="5">
        <label>gtest/gtest.h</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="8">
        <label>mutex</label>
      </node>
      <node id="9">
        <label>optional</label>
      </node>
      <node id="10">
        <label>span</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="14">
        <label>string_view</label>
      </node>
      <node id="23">
        <label>unordered_map</label>
      </node>
      <node id="30">
        <label>utility</label>
      </node>
      <node id="31">
        <label>variant</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classiceberg_1_1TableMetadataBuilderTest" prot="public">iceberg::TableMetadataBuilderTest</innerclass>
    <innernamespace refid="namespaceiceberg">iceberg</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gmock/gmock-matchers.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="partition__spec_8h" kindref="compound">iceberg/partition_spec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/sort_order.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__metadata_8h" kindref="compound">iceberg/table_metadata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__requirement_8h" kindref="compound">iceberg/table_requirement.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__requirements_8h" kindref="compound">iceberg/table_requirements.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__update_8h" kindref="compound">iceberg/table_update.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/matchers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">iceberg<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions<sp/>to<sp/>reduce<sp/>test<sp/>boilerplate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generate<sp/>requirements<sp/>and<sp/>return<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">std::vector&lt;std::unique_ptr&lt;TableRequirement&gt;&gt;<sp/>GenerateRequirements(</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableUpdate&amp;<sp/>update,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableMetadata*<sp/>base)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>TableUpdateContext<sp/>context(base,<sp/></highlight><highlight class="comment">/*is_replace=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>EXPECT_THAT(update.GenerateRequirements(context),<sp/>IsOk());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>requirements<sp/>=<sp/>context.Build();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>EXPECT_THAT(requirements,<sp/>IsOk());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(requirements.value());</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>fixture<sp/>for<sp/>TableMetadataBuilder<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classiceberg_1_1TableMetadataBuilderTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classiceberg_1_1TableMetadataBuilderTest" kindref="compound">TableMetadataBuilderTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUp()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>base<sp/>metadata<sp/>for<sp/>update<sp/>tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_<sp/>=<sp/>std::make_unique&lt;TableMetadata&gt;();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;format_version<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test-uuid-1234&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;location<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;last_sequence_number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;last_updated_ms<sp/>=<sp/>TimePointMs{std::chrono::milliseconds(1000)};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;last_column_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;default_spec_id<sp/>=<sp/>PartitionSpec::kInitialSpecId;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;last_partition_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;current_snapshot_id<sp/>=<sp/>Snapshot::kInvalidSnapshotId;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;default_sort_order_id<sp/>=<sp/>SortOrder::kInitialSortOrderId;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>base_metadata_-&gt;next_row_id<sp/>=<sp/>TableMetadata::kInitialRowId;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TableMetadata&gt;<sp/>base_metadata_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TableMetadataBuilder<sp/>-<sp/>Basic<sp/>Construction<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">TEST_F(<ref refid="classiceberg_1_1TableMetadataBuilderTest" kindref="compound">TableMetadataBuilderTest</ref>,<sp/>BuildFromEmpty)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1abdcb399788fb9ddce9a41999fe140caf" kindref="member">TableMetadataBuilder::BuildFromEmpty</ref>(2);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>ASSERT_NE(builder,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID(</highlight><highlight class="stringliteral">&quot;new-uuid-5678&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>ASSERT_NE(metadata,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;format_version,<sp/>2);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;last_sequence_number,<sp/>TableMetadata::kInitialSequenceNumber);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;default_spec_id,<sp/>PartitionSpec::kInitialSpecId);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;default_sort_order_id,<sp/>SortOrder::kInitialSortOrderId);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;current_snapshot_id,<sp/>Snapshot::kInvalidSnapshotId);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>BuildFromExisting)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1a1b6f7b6b04c59ef83bc2005ad07af88a" kindref="member">TableMetadataBuilder::BuildFrom</ref>(base_metadata_.get());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>ASSERT_NE(builder,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>ASSERT_NE(metadata,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;format_version,<sp/>2);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;table_uuid,<sp/></highlight><highlight class="stringliteral">&quot;test-uuid-1234&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;location,<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TableMetadataBuilder<sp/>-<sp/>AssignUUID<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>AssignUUIDForNewTable)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1abdcb399788fb9ddce9a41999fe140caf" kindref="member">TableMetadataBuilder::BuildFromEmpty</ref>(2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID(</highlight><highlight class="stringliteral">&quot;new-uuid-5678&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;table_uuid,<sp/></highlight><highlight class="stringliteral">&quot;new-uuid-5678&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>AssignUUIDAndUpdateExisting)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1a1b6f7b6b04c59ef83bc2005ad07af88a" kindref="member">TableMetadataBuilder::BuildFrom</ref>(base_metadata_.get());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID(</highlight><highlight class="stringliteral">&quot;updated-uuid-9999&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;table_uuid,<sp/></highlight><highlight class="stringliteral">&quot;updated-uuid-9999&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>AssignUUIDWithEmptyUUID)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1abdcb399788fb9ddce9a41999fe140caf" kindref="member">TableMetadataBuilder::BuildFromEmpty</ref>(2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>ASSERT_THAT(builder-&gt;Build(),<sp/>HasErrorMessage(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>assign<sp/>empty<sp/>UUID&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>AssignUUIDWithSameUUID)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1a1b6f7b6b04c59ef83bc2005ad07af88a" kindref="member">TableMetadataBuilder::BuildFrom</ref>(base_metadata_.get());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID(</highlight><highlight class="stringliteral">&quot;test-uuid-1234&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Same<sp/>UUID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;table_uuid,<sp/></highlight><highlight class="stringliteral">&quot;test-uuid-1234&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>AssignUUIDWithAutoGenerate)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1abdcb399788fb9ddce9a41999fe140caf" kindref="member">TableMetadataBuilder::BuildFromEmpty</ref>(2);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID();<sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(metadata-&gt;table_uuid.empty());</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>AssignUUIDAndCaseInsensitiveComparison)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>base_metadata_-&gt;table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TEST-UUID-ABCD&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1a1b6f7b6b04c59ef83bc2005ad07af88a" kindref="member">TableMetadataBuilder::BuildFrom</ref>(base_metadata_.get());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID(</highlight><highlight class="stringliteral">&quot;test-uuid-abcd&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Different<sp/>case<sp/>-<sp/>should<sp/>be<sp/>no-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;table_uuid,<sp/></highlight><highlight class="stringliteral">&quot;TEST-UUID-ABCD&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>Original<sp/>case<sp/>preserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TableUpdate<sp/>-<sp/>ApplyTo<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>TableUpdateWithAssignUUID)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1abdcb399788fb9ddce9a41999fe140caf" kindref="member">TableMetadataBuilder::BuildFromEmpty</ref>(2);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>table::AssignUUID<sp/>update(</highlight><highlight class="stringliteral">&quot;apply-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>update.ApplyTo(*builder);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;table_uuid,<sp/></highlight><highlight class="stringliteral">&quot;apply-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TableUpdate<sp/>-<sp/>GenerateRequirements<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">TEST_F(TableMetadataBuilderTest,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableUpdateWithAssignUUIDAndGenerateRequirementsForNewTable)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>table::AssignUUID<sp/>update(</highlight><highlight class="stringliteral">&quot;new-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>requirements<sp/>=<sp/>GenerateRequirements(update,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(requirements.empty());<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>requirements<sp/>for<sp/>new<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">TEST_F(TableMetadataBuilderTest,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableUpdateWithAssignUUIDAndGenerateRequirementsForExistingTable)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>table::AssignUUID<sp/>update(</highlight><highlight class="stringliteral">&quot;new-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>requirements<sp/>=<sp/>GenerateRequirements(update,<sp/>base_metadata_.get());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>EXPECT_EQ(requirements.size(),<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>generate<sp/>AssertUUID<sp/>requirement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">TEST_F(TableMetadataBuilderTest,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TableUpdateWithAssignUUIDAndGenerateRequirementsWithEmptyUUID)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>base_metadata_-&gt;table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>table::AssignUUID<sp/>update(</highlight><highlight class="stringliteral">&quot;new-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>requirements<sp/>=<sp/>GenerateRequirements(update,<sp/>base_metadata_.get());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(requirements.empty());<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>requirement<sp/>when<sp/>base<sp/>has<sp/>no<sp/>UUID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TableRequirement<sp/>-<sp/>Validate<sp/>Tests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>TableRequirementAssertUUIDSuccess)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>table::AssertUUID<sp/>requirement(</highlight><highlight class="stringliteral">&quot;test-uuid-1234&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>ASSERT_THAT(requirement.Validate(base_metadata_.get()),<sp/>IsOk());</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>TableRequirementAssertUUIDMismatch)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>table::AssertUUID<sp/>requirement(</highlight><highlight class="stringliteral">&quot;wrong-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>requirement.Validate(base_metadata_.get());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>EXPECT_THAT(status,<sp/>IsError(ErrorKind::kCommitFailed));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>EXPECT_THAT(status,<sp/>HasErrorMessage(</highlight><highlight class="stringliteral">&quot;UUID<sp/>does<sp/>not<sp/>match&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>TableRequirementAssertUUIDNullBase)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>table::AssertUUID<sp/>requirement(</highlight><highlight class="stringliteral">&quot;any-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>requirement.Validate(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>EXPECT_THAT(status,<sp/>IsError(ErrorKind::kCommitFailed));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>EXPECT_THAT(status,<sp/>HasErrorMessage(</highlight><highlight class="stringliteral">&quot;metadata<sp/>is<sp/>missing&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>TableRequirementAssertUUIDCaseInsensitive)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>base_metadata_-&gt;table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TEST-UUID-1234&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>table::AssertUUID<sp/>requirement(</highlight><highlight class="stringliteral">&quot;test-uuid-1234&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>ASSERT_THAT(requirement.Validate(base_metadata_.get()),<sp/>IsOk());</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Integration<sp/>Tests<sp/>-<sp/>End-to-End<sp/>Workflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>IntegrationCreateTableWithUUID)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1abdcb399788fb9ddce9a41999fe140caf" kindref="member">TableMetadataBuilder::BuildFromEmpty</ref>(2);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>builder-&gt;AssignUUID(</highlight><highlight class="stringliteral">&quot;integration-test-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;table_uuid,<sp/></highlight><highlight class="stringliteral">&quot;integration-test-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>EXPECT_EQ(metadata-&gt;format_version,<sp/>2);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">TEST_F(TableMetadataBuilderTest,<sp/>IntegrationOptimisticConcurrencyControl)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>table::AssignUUID<sp/>update(</highlight><highlight class="stringliteral">&quot;new-uuid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>and<sp/>validate<sp/>requirements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>requirements<sp/>=<sp/>GenerateRequirements(update,<sp/>base_metadata_.get());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>req<sp/>:<sp/>requirements)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val_status<sp/>=<sp/>req-&gt;Validate(base_metadata_.get());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(val_status,<sp/>IsOk())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Requirement<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>update<sp/>and<sp/>build</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/><ref refid="classiceberg_1_1TableMetadataBuilder_1a1b6f7b6b04c59ef83bc2005ad07af88a" kindref="member">TableMetadataBuilder::BuildFrom</ref>(base_metadata_.get());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>update.ApplyTo(*builder);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>ICEBERG_UNWRAP_OR_FAIL(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata,<sp/>builder-&gt;Build());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>ASSERT_NE(metadata,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>iceberg</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="iceberg/test/table_metadata_builder_test.cc"/>
  </compounddef>
</doxygen>
