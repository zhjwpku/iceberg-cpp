<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="avro__data__test_8cc" kind="file" language="C++">
    <compoundname>avro_data_test.cc</compoundname>
    <includes local="no">ranges</includes>
    <includes local="no">arrow/c/bridge.h</includes>
    <includes local="no">arrow/json/from_string.h</includes>
    <includes local="no">arrow/util/decimal.h</includes>
    <includes local="no">avro/Compiler.hh</includes>
    <includes local="no">avro/Generic.hh</includes>
    <includes local="no">avro/Node.hh</includes>
    <includes local="no">avro/Types.hh</includes>
    <includes local="no">gmock/gmock.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="avro__data__util__internal_8h" local="yes">iceberg/avro/avro_data_util_internal.h</includes>
    <includes refid="avro__schema__util__internal_8h" local="yes">iceberg/avro/avro_schema_util_internal.h</includes>
    <includes refid="schema_8h" local="yes">iceberg/schema.h</includes>
    <includes refid="schema__internal_8h" local="yes">iceberg/schema_internal.h</includes>
    <includes refid="schema__util_8h" local="yes">iceberg/schema_util.h</includes>
    <includes refid="matchers_8h" local="yes">iceberg/test/matchers.h</includes>
    <includes refid="type_8h" local="yes">iceberg/type.h</includes>
    <incdepgraph>
      <node id="12">
        <label>iceberg/avro/avro_data_util_internal.h</label>
        <link refid="avro__data__util__internal_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>iceberg/avro/avro_schema_util_internal.h</label>
        <link refid="avro__schema__util__internal_8h_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>iceberg/expression/literal.h</label>
        <link refid="literal_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iceberg/iceberg_export.h</label>
        <link refid="iceberg__export_8h_source"/>
      </node>
      <node id="49">
        <label>iceberg/name_mapping.h</label>
        <link refid="name__mapping_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>iceberg/result.h</label>
        <link refid="result_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>iceberg/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>iceberg/schema_field.h</label>
        <link refid="schema__field_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>iceberg/schema_internal.h</label>
        <link refid="schema__internal_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iceberg/schema_util.h</label>
        <link refid="schema__util_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg/test/avro_data_test.cc</label>
        <link refid="avro__data__test_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>iceberg/test/matchers.h</label>
        <link refid="matchers_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>iceberg/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>iceberg/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
      </node>
      <node id="42">
        <label>iceberg/util/decimal.h</label>
        <link refid="decimal_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>iceberg/util/formattable.h</label>
        <link refid="formattable_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iceberg/util/int128.h</label>
        <link refid="int128_8h"/>
      </node>
      <node id="36">
        <label>iceberg/util/lazy.h</label>
        <link refid="lazy_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>iceberg/util/macros.h</label>
        <link refid="macros_8h_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>iceberg/util/string_util.h</label>
        <link refid="string__util_8h_source"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>iceberg/util/uuid.h</label>
        <link refid="uuid_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>array</label>
      </node>
      <node id="13">
        <label>arrow/array/builder_base.h</label>
      </node>
      <node id="3">
        <label>arrow/c/bridge.h</label>
      </node>
      <node id="4">
        <label>arrow/json/from_string.h</label>
      </node>
      <node id="5">
        <label>arrow/util/decimal.h</label>
      </node>
      <node id="6">
        <label>avro/Compiler.hh</label>
      </node>
      <node id="7">
        <label>avro/Generic.hh</label>
      </node>
      <node id="14">
        <label>avro/GenericDatum.hh</label>
      </node>
      <node id="8">
        <label>avro/Node.hh</label>
      </node>
      <node id="9">
        <label>avro/Types.hh</label>
      </node>
      <node id="41">
        <label>cassert</label>
      </node>
      <node id="21">
        <label>compare</label>
      </node>
      <node id="37">
        <label>concepts</label>
      </node>
      <node id="28">
        <label>cstdint</label>
      </node>
      <node id="24">
        <label>expected</label>
      </node>
      <node id="25">
        <label>format</label>
      </node>
      <node id="38">
        <label>functional</label>
      </node>
      <node id="10">
        <label>gmock/gmock.h</label>
      </node>
      <node id="11">
        <label>gtest/gtest.h</label>
      </node>
      <node id="43">
        <label>iosfwd</label>
      </node>
      <node id="16">
        <label>memory</label>
      </node>
      <node id="39">
        <label>mutex</label>
      </node>
      <node id="55">
        <label>nanoarrow/nanoarrow.h</label>
      </node>
      <node id="29">
        <label>optional</label>
      </node>
      <node id="2">
        <label>ranges</label>
      </node>
      <node id="30">
        <label>span</label>
      </node>
      <node id="48">
        <label>stack</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="33">
        <label>string_view</label>
      </node>
      <node id="44">
        <label>type_traits</label>
      </node>
      <node id="31">
        <label>unordered_map</label>
      </node>
      <node id="50">
        <label>unordered_set</label>
      </node>
      <node id="18">
        <label>variant</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="structiceberg_1_1avro_1_1AppendDatumParam" prot="public">iceberg::avro::AppendDatumParam</innerclass>
    <innerclass refid="classiceberg_1_1avro_1_1AppendDatumToBuilderTest" prot="public">iceberg::avro::AppendDatumToBuilderTest</innerclass>
    <innerclass refid="structiceberg_1_1avro_1_1ExtractDatumParam" prot="public">iceberg::avro::ExtractDatumParam</innerclass>
    <innerclass refid="classiceberg_1_1avro_1_1ExtractDatumFromArrayTest" prot="public">iceberg::avro::ExtractDatumFromArrayTest</innerclass>
    <innerclass refid="structiceberg_1_1avro_1_1RoundTripParam" prot="public">iceberg::avro::RoundTripParam</innerclass>
    <innerclass refid="classiceberg_1_1avro_1_1AvroRoundTripConversionTest" prot="public">iceberg::avro::AvroRoundTripConversionTest</innerclass>
    <innernamespace refid="namespaceiceberg">iceberg</innernamespace>
    <innernamespace refid="namespaceiceberg_1_1avro">iceberg::avro</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/c/bridge.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/json/from_string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/util/decimal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/Compiler.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/Generic.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/Node.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/Types.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gmock/gmock.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/avro/avro_data_util_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/avro/avro_schema_util_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">iceberg/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/schema_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/schema_util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/matchers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">iceberg/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">iceberg::avro<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="structiceberg_1_1avro_1_1AppendDatumParam" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiceberg_1_1avro_1_1AppendDatumParam" kindref="compound">AppendDatumParam</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Type&gt;<sp/>projected_type;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Type&gt;<sp/>source_type;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::function&lt;void(::avro::GenericDatum&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>value_setter;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>std::string<sp/>expected_json;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">std::vector&lt;::avro::GenericDatum&gt;<sp/>CreateTestData(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>::avro::NodePtr&amp;<sp/>avro_node,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(::avro::GenericDatum&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;&amp;<sp/>value_setter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>value_setter(avro_datum,<sp/>i);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>avro_data;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VerifyAppendDatumToBuilder(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Schema&amp;<sp/>projected_schema,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>::avro::NodePtr&amp;<sp/>avro_node,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;::avro::GenericDatum&gt;&amp;<sp/>avro_data,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/>expected_array_json)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>1<sp/>to<sp/>1<sp/>projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>projection_result<sp/>=<sp/>Project(projected_schema,<sp/>avro_node,<sp/></highlight><highlight class="comment">/*prune_source=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>ASSERT_THAT(projection_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>projection<sp/>=<sp/>std::move(projection_result.value());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>arrow<sp/>schema<sp/>and<sp/>array<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(projected_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>::arrow::MakeBuilder(arrow_struct_type).ValueOrDie();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>AppendDatumToBuilder<sp/>repeatedly<sp/>to<sp/>append<sp/>the<sp/>datum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>avro_datum<sp/>:<sp/>avro_data)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(AppendDatumToBuilder(avro_node,<sp/>avro_datum,<sp/>projection,<sp/>projected_schema,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.get()),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsOk());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>array<sp/>=<sp/>builder-&gt;Finish().ValueOrDie();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_array<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,<sp/>expected_array_json)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ValueOrDie();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(array-&gt;Equals(*expected_array))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;array:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>array-&gt;ToString()</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nexpected_array:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>expected_array-&gt;ToString();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classiceberg_1_1avro_1_1AppendDatumToBuilderTest" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classiceberg_1_1avro_1_1AppendDatumToBuilderTest" kindref="compound">AppendDatumToBuilderTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::TestWithParam&lt;AppendDatumParam&gt;<sp/>{};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">TEST_P(<ref refid="classiceberg_1_1avro_1_1AppendDatumToBuilderTest" kindref="compound">AppendDatumToBuilderTest</ref>,<sp/><ref refid="classiceberg_1_1PrimitiveType" kindref="compound">PrimitiveType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>test_case<sp/>=<sp/>GetParam();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1Schema" kindref="compound">Schema</ref><sp/>projected_schema({<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="comment">/*name=*/</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>test_case.projected_type)});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1Schema" kindref="compound">Schema</ref><sp/>source_schema({<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="comment">/*name=*/</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>test_case.source_type)});</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>EXPECT_THAT(ToAvroNodeVisitor{}.Visit(source_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>avro_data<sp/>=<sp/>CreateTestData(avro_node,<sp/>test_case.value_setter);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyAppendDatumToBuilder(projected_schema,<sp/>avro_node,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avro_data,<sp/>test_case.expected_json));</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>test<sp/>cases<sp/>for<sp/>all<sp/>primitive<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;AppendDatumParam&gt;<sp/>kPrimitiveTestCases<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Boolean&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1gafb5f5aec1d1d6218809ee512e2f87e83" kindref="member">iceberg::boolean</ref>(),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1gafb5f5aec1d1d6218809ee512e2f87e83" kindref="member">iceberg::boolean</ref>(),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;()<sp/>=</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>true},<sp/>{&quot;a&quot;:<sp/>false},<sp/>{&quot;a&quot;:<sp/>true}])&quot;,</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Int&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>i<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0},<sp/>{&quot;a&quot;:<sp/>100},<sp/>{&quot;a&quot;:<sp/>200}])&quot;,</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Long&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>(),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>(),</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;int64_t&gt;()<sp/>=</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>1000000LL;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0},<sp/>{&quot;a&quot;:<sp/>1000000},<sp/>{&quot;a&quot;:<sp/>2000000}])&quot;,</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Float&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1gab54ddf6ad9419b772fbde66891733212" kindref="member">iceberg::float32</ref>(),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1gab54ddf6ad9419b772fbde66891733212" kindref="member">iceberg::float32</ref>(),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;()<sp/>=<sp/>i<sp/>*<sp/>3.14f;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0.0},<sp/>{&quot;a&quot;:<sp/>3.14},<sp/>{&quot;a&quot;:<sp/>6.28}])&quot;,</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Double&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga8457285a5fea3eda5b3f4289bce62ecb" kindref="member">iceberg::float64</ref>(),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga8457285a5fea3eda5b3f4289bce62ecb" kindref="member">iceberg::float64</ref>(),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;()<sp/>=</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>1.234567890;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0.0},<sp/>{&quot;a&quot;:<sp/>1.234567890},<sp/>{&quot;a&quot;:<sp/>2.469135780}])&quot;,</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;String&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>(),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>(),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;std::string&gt;()<sp/>=</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;test_string_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;test_string_0&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;test_string_1&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;test_string_2&quot;}])&quot;,</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Binary&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga33cd0c2e979eebcccc89cdbcd3f6af99" kindref="member">iceberg::binary</ref>(),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga33cd0c2e979eebcccc89cdbcd3f6af99" kindref="member">iceberg::binary</ref>(),</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fieldAt(0)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value&lt;std::vector&lt;uint8_t&gt;&gt;()<sp/>=<sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>i),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>+<sp/>i),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal"><sp/>+<sp/>i)};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;abc&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;bcd&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;cde&quot;}])&quot;,</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Fixed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">iceberg::fixed</ref>(4),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">iceberg::fixed</ref>(4),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fieldAt(0)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value&lt;::avro::GenericFixed&gt;()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value()<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>i),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>+<sp/>i),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal"><sp/>+<sp/>i),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>+<sp/>i)};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;abcd&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;bcde&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;cdef&quot;}])&quot;,</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/>&quot;UUID&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/>iceberg::uuid(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/>iceberg::uuid(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/>int<sp/>i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fieldAt(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value&lt;::avro::GenericFixed&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value()<sp/>=<sp/>{&apos;a&apos;,<sp/>&apos;b&apos;,<sp/>&apos;c&apos;,<sp/>&apos;d&apos;,<sp/>&apos;e&apos;,<sp/>&apos;f&apos;,<sp/>&apos;g&apos;,<sp/>&apos;h&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;i&apos;,<sp/>&apos;j&apos;,<sp/>&apos;k&apos;,<sp/>&apos;l&apos;,<sp/>&apos;m&apos;,<sp/>&apos;n&apos;,<sp/>&apos;o&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;uint8_t&gt;(i)};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R&quot;([{&quot;a&quot;:<sp/>&quot;abcdefghijklmnop&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;bcdefghijklmnopq&quot;},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{&quot;a&quot;:<sp/>&quot;cdefghijklmnopqr&quot;}])&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>},</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Decimal&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">iceberg::decimal</ref>(10,<sp/>2),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">iceberg::decimal</ref>(10,<sp/>2),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>decimal_value<sp/>=<sp/>i<sp/>*<sp/>1000<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref><sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;()</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fieldAt(0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value&lt;::avro::GenericFixed&gt;()</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>byte<sp/>array<sp/>must<sp/>contain<sp/>the<sp/>two&apos;s-complement<sp/>representation<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>unscaled<sp/>integer<sp/>value<sp/>in<sp/>big-endian<sp/>byte<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t&amp;<sp/>rvalue<sp/>:<sp/>std::ranges::reverse_view(<ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>))<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvalue<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(decimal_value<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal_value<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;0.00&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;10.01&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;20.02&quot;}])&quot;,</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Date&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga377ecf647b08303fd9f87c31b1519dbf" kindref="member">iceberg::date</ref>(),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga377ecf647b08303fd9f87c31b1519dbf" kindref="member">iceberg::date</ref>(),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Date<sp/>as<sp/>days<sp/>since<sp/>epoch<sp/>(1970-01-01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>1970-01-01,<sp/>1<sp/>=<sp/>1970-01-02,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;int32_t&gt;()<sp/>=</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18000<sp/>+<sp/>i;<sp/><sp/></highlight><highlight class="comment">//<sp/>~2019-04-11<sp/>+<sp/>i<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>18000},<sp/>{&quot;a&quot;:<sp/>18001},<sp/>{&quot;a&quot;:<sp/>18002}])&quot;,</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga7048c118c821d9aba4c08f3f23262b0f" kindref="member">iceberg::time</ref>(),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga7048c118c821d9aba4c08f3f23262b0f" kindref="member">iceberg::time</ref>(),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>as<sp/>microseconds<sp/>since<sp/>midnight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12:30:45.123456<sp/>+<sp/>i<sp/>seconds<sp/>=<sp/>45045123456<sp/>+<sp/>i*1000000<sp/>microseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;int64_t&gt;()<sp/>=</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>45045123456LL<sp/>+<sp/>i<sp/>*<sp/>1000000LL;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>45045123456},<sp/>{&quot;a&quot;:<sp/>45046123456},<sp/>{&quot;a&quot;:<sp/>45047123456}])&quot;,</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Timestamp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga98107734ef37f6f3b36b9fa3a6e30fe9" kindref="member">iceberg::timestamp</ref>(),</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga98107734ef37f6f3b36b9fa3a6e30fe9" kindref="member">iceberg::timestamp</ref>(),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;int64_t&gt;()<sp/>=</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*<sp/>1000000LL;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0},<sp/>{&quot;a&quot;:<sp/>1000000},<sp/>{&quot;a&quot;:<sp/>2000000}])&quot;,</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TimestampTz&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/>std::make_shared&lt;TimestampTzType&gt;(),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/>std::make_shared&lt;TimestampTzType&gt;(),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;int64_t&gt;()<sp/>=</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1672531200000000LL<sp/>+<sp/>i<sp/>*<sp/>1000000LL;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>1672531200000000},<sp/>{&quot;a&quot;:<sp/>1672531201000000},<sp/>{&quot;a&quot;:<sp/>1672531202000000}])&quot;,</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;IntToLongPromotion&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>(),</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>i<sp/>*<sp/>100;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0},<sp/>{&quot;a&quot;:<sp/>100},<sp/>{&quot;a&quot;:<sp/>200}])&quot;,</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;FloatToDoublePromotion&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1ga8457285a5fea3eda5b3f4289bce62ecb" kindref="member">iceberg::float64</ref>(),</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1gab54ddf6ad9419b772fbde66891733212" kindref="member">iceberg::float32</ref>(),</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datum.value&lt;::avro::GenericRecord&gt;().fieldAt(0).value&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;()<sp/>=<sp/>i<sp/>*<sp/>1.0f;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0.0},<sp/>{&quot;a&quot;:<sp/>1.0},<sp/>{&quot;a&quot;:<sp/>2.0}])&quot;,</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DecimalPrecisionPromotion&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projected_type<sp/>=<sp/><ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">iceberg::decimal</ref>(10,<sp/>2),</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_type<sp/>=<sp/><ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">iceberg::decimal</ref>(6,<sp/>2),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_setter<sp/>=</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>decimal_value<sp/>=<sp/>i<sp/>*<sp/>1000<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref><sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;()</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fieldAt(0)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value&lt;::avro::GenericFixed&gt;()</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t&amp;<sp/>rvalue<sp/>:<sp/>std::ranges::reverse_view(<ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>))<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvalue<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(decimal_value<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decimal_value<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;0.00&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;10.01&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;20.02&quot;}])&quot;,</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral">INSTANTIATE_TEST_SUITE_P(AllPrimitiveTypes,<sp/>AppendDatumToBuilderTest,</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ValuesIn(kPrimitiveTestCases),</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::testing::TestParamInfo&lt;AppendDatumParam&gt;&amp;<sp/>info)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info.param.name;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">TEST(AppendDatumToBuilderTest,<sp/>StructWithTwoFields)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>record.fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>record.fieldAt(1).value&lt;std::string&gt;()<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_node,<sp/>avro_data,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;id&quot;:<sp/>42,<sp/>&quot;name&quot;:<sp/>&quot;test&quot;}])&quot;));</highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>NestedStruct)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;person&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>id<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>record.fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>nested<sp/>person<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>person_record<sp/>=<sp/>record.fieldAt(1).value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>person_record.fieldAt(0).value&lt;std::string&gt;()<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Person&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>person_record.fieldAt(1).value&lt;int32_t&gt;()<sp/>=<sp/>25<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Person0&quot;,<sp/>&quot;age&quot;:<sp/>25}},</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Person1&quot;,<sp/>&quot;age&quot;:<sp/>26}}</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_node,<sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>ListOfIntegers)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;numbers&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()))),</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>array<sp/>with<sp/>values<sp/>[i*10,<sp/>i*10+1,<sp/>i*10+2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>array<sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericArray&gt;();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>element(avro_node-&gt;leafAt(0)-&gt;leafAt(0));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>element.value&lt;int32_t&gt;()<sp/>=<sp/>i<sp/>*<sp/>10<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array.value().push_back(element);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[0,<sp/>1,<sp/>2]},</highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[10,<sp/>11,<sp/>12]}</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_node,<sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>ListOfStructs)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;people&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})))),</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>array<sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericArray&gt;();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>element(avro_node-&gt;leafAt(0)-&gt;leafAt(0));</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>person_record<sp/>=<sp/>element.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>person_record.fieldAt(0).value&lt;std::string&gt;()<sp/>=</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Person&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(j);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>person_record.fieldAt(1).value&lt;int32_t&gt;()<sp/>=<sp/>20<sp/>+<sp/>i<sp/>*<sp/>10<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array.value().push_back(element);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="472"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;people&quot;:<sp/>[</highlight></codeline>
<codeline lineno="473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person0_0&quot;,<sp/>&quot;age&quot;:<sp/>20},</highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person0_1&quot;,<sp/>&quot;age&quot;:<sp/>21}</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>]},</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;people&quot;:<sp/>[</highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person1_0&quot;,<sp/>&quot;age&quot;:<sp/>30},</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person1_1&quot;,<sp/>&quot;age&quot;:<sp/>31}</highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>]}</highlight></codeline>
<codeline lineno="480"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="481"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_node,<sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>MapStringToInt)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;scores&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()))),</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="group__type-factories_1ga4d0b2254f39850e311ffed558e1bac7b" kindref="member">map</ref><sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericMap&gt;();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>map_container<sp/>=<sp/><ref refid="group__type-factories_1ga4d0b2254f39850e311ffed558e1bac7b" kindref="member">map</ref>.value();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>map_container.emplace_back(</highlight><highlight class="stringliteral">&quot;score_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i<sp/>*<sp/>2),</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::avro::GenericDatum(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(100<sp/>+<sp/>i<sp/>*<sp/>10)));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>map_container.emplace_back(</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;score_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i<sp/>*<sp/>2<sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::avro::GenericDatum(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(100<sp/>+<sp/>i<sp/>*<sp/>10<sp/>+<sp/>5)));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[[&quot;score_0&quot;,<sp/>100],<sp/>[&quot;score_1&quot;,<sp/>105]]},</highlight></codeline>
<codeline lineno="516"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[[&quot;score_2&quot;,<sp/>110],<sp/>[&quot;score_3&quot;,<sp/>115]]}</highlight></codeline>
<codeline lineno="517"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_node,<sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>MapIntToStringAsArray)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="524"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="525"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;names&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()))),</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>array<sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericArray&gt;();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>kv_pair(avro_node-&gt;leafAt(0)-&gt;leafAt(0));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv_record<sp/>=<sp/>kv_pair.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kv_record.fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>i<sp/>*<sp/>10<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kv_record.fieldAt(1).value&lt;std::string&gt;()<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;name_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i<sp/>*<sp/>10<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array.value().push_back(kv_pair);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="552"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;names&quot;:<sp/>[[0,<sp/>&quot;name_0&quot;],<sp/>[1,<sp/>&quot;name_1&quot;]]},</highlight></codeline>
<codeline lineno="553"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;names&quot;:<sp/>[[10,<sp/>&quot;name_10&quot;],<sp/>[11,<sp/>&quot;name_11&quot;]]}</highlight></codeline>
<codeline lineno="554"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="556"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_node,<sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="557"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="558"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="559"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>MapStringToStruct)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="561"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="562"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;users&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;email&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})))),</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_node);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="group__type-factories_1ga4d0b2254f39850e311ffed558e1bac7b" kindref="member">map</ref><sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericMap&gt;();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>map_container<sp/>=<sp/><ref refid="group__type-factories_1ga4d0b2254f39850e311ffed558e1bac7b" kindref="member">map</ref>.value();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>struct_value(avro_node-&gt;leafAt(0)-&gt;leafAt(1));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>struct_record<sp/>=<sp/>struct_value.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>struct_record.fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>1000<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>struct_record.fieldAt(1).value&lt;std::string&gt;()<sp/>=</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;user&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;@example.com&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>map_container.emplace_back(</highlight><highlight class="stringliteral">&quot;user_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i),<sp/>std::move(struct_value));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;users&quot;:<sp/>[[&quot;user_0&quot;,<sp/>{&quot;id&quot;:<sp/>1000,<sp/>&quot;email&quot;:<sp/>&quot;user0@example.com&quot;}]]},</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;users&quot;:<sp/>[[&quot;user_1&quot;,<sp/>{&quot;id&quot;:<sp/>1001,<sp/>&quot;email&quot;:<sp/>&quot;user1@example.com&quot;}]]}</highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="599"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="600"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_node,<sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="601"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="602"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="603"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>StructWithMissingOptionalField)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="605"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),<sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>in<sp/>Avro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;email&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),<sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>in<sp/>Avro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Avro<sp/>schema<sp/>that<sp/>only<sp/>has<sp/>id<sp/>and<sp/>name<sp/>fields<sp/>(missing<sp/>age<sp/>and<sp/>email)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>std::string<sp/>avro_schema_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;({</highlight></codeline>
<codeline lineno="615"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;record&quot;,</highlight></codeline>
<codeline lineno="616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;person&quot;,</highlight></codeline>
<codeline lineno="617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;fields&quot;:<sp/>[</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;id&quot;,<sp/>&quot;type&quot;:<sp/>&quot;int&quot;,<sp/>&quot;field-id&quot;:<sp/>1},</highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;name&quot;,<sp/>&quot;type&quot;:<sp/>&quot;string&quot;,<sp/>&quot;field-id&quot;:<sp/>2}</highlight></codeline>
<codeline lineno="620"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="621"><highlight class="stringliteral"><sp/><sp/>})&quot;;</highlight></codeline>
<codeline lineno="622"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>avro_schema<sp/>=<sp/>::avro::compileJsonSchemaFromString(avro_schema_json);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_schema.root());</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>record.fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>record.fieldAt(1).value&lt;std::string&gt;()<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Person&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="634"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;name&quot;:<sp/>&quot;Person0&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;email&quot;:<sp/>null},</highlight></codeline>
<codeline lineno="635"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;name&quot;:<sp/>&quot;Person1&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;email&quot;:<sp/>null}</highlight></codeline>
<codeline lineno="636"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="637"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_schema.root(),</highlight></codeline>
<codeline lineno="638"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="639"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="640"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="641"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>NestedStructWithMissingOptionalFields)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="643"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;person&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),<sp/><sp/></highlight><highlight class="comment">//<sp/>Missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;phone&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),<sp/><sp/></highlight><highlight class="comment">//<sp/>Missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;department&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),<sp/><sp/></highlight><highlight class="comment">//<sp/>Missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Avro<sp/>schema<sp/>with<sp/>only<sp/>id,<sp/>person.name<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>std::string<sp/>avro_schema_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;({</highlight></codeline>
<codeline lineno="659"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;record&quot;,</highlight></codeline>
<codeline lineno="660"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;employee&quot;,</highlight></codeline>
<codeline lineno="661"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;fields&quot;:<sp/>[</highlight></codeline>
<codeline lineno="662"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;id&quot;,<sp/>&quot;type&quot;:<sp/>&quot;int&quot;,<sp/>&quot;field-id&quot;:<sp/>1},</highlight></codeline>
<codeline lineno="663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;person&quot;,<sp/>&quot;type&quot;:<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;record&quot;,</highlight></codeline>
<codeline lineno="665"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;person_info&quot;,</highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;fields&quot;:<sp/>[</highlight></codeline>
<codeline lineno="667"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;name&quot;,<sp/>&quot;type&quot;:<sp/>&quot;string&quot;,<sp/>&quot;field-id&quot;:<sp/>3}</highlight></codeline>
<codeline lineno="668"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="669"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>&quot;field-id&quot;:<sp/>2}</highlight></codeline>
<codeline lineno="670"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="671"><highlight class="stringliteral"><sp/><sp/>})&quot;;</highlight></codeline>
<codeline lineno="672"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>avro_schema<sp/>=<sp/>::avro::compileJsonSchemaFromString(avro_schema_json);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_schema.root());</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>record.fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/>i<sp/>+<sp/>100;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>person_record<sp/>=<sp/>record.fieldAt(1).value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>person_record.fieldAt(0).value&lt;std::string&gt;()<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Employee&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="688"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>100,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Employee0&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;phone&quot;:<sp/>null},<sp/>&quot;department&quot;:<sp/>null},</highlight></codeline>
<codeline lineno="689"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>101,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Employee1&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;phone&quot;:<sp/>null},<sp/>&quot;department&quot;:<sp/>null}</highlight></codeline>
<codeline lineno="690"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="691"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_schema.root(),</highlight></codeline>
<codeline lineno="692"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="693"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="694"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="695"><highlight class="stringliteral">TEST(AppendDatumToBuilderTest,<sp/>ListWithMissingOptionalElementFields)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="stringliteral"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="697"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="698"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;people&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>()),<sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>in<sp/>Avro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;email&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">iceberg::string</ref>()),<sp/><sp/></highlight><highlight class="comment">//<sp/>Missing<sp/>in<sp/>Avro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})))),</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>Avro<sp/>schema<sp/>with<sp/>list<sp/>of<sp/>structs<sp/>that<sp/>only<sp/>have<sp/>name<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>std::string<sp/>avro_schema_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;({</highlight></codeline>
<codeline lineno="712"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;record&quot;,</highlight></codeline>
<codeline lineno="713"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;people_list&quot;,</highlight></codeline>
<codeline lineno="714"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;fields&quot;:<sp/>[</highlight></codeline>
<codeline lineno="715"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;people&quot;,<sp/>&quot;type&quot;:<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;array&quot;,</highlight></codeline>
<codeline lineno="717"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;items&quot;:<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;record&quot;,</highlight></codeline>
<codeline lineno="719"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;person&quot;,</highlight></codeline>
<codeline lineno="720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;fields&quot;:<sp/>[</highlight></codeline>
<codeline lineno="721"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;name&quot;,<sp/>&quot;type&quot;:<sp/>&quot;string&quot;,<sp/>&quot;field-id&quot;:<sp/>3}</highlight></codeline>
<codeline lineno="722"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="723"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="724"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;element-id&quot;:<sp/>2</highlight></codeline>
<codeline lineno="725"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>&quot;field-id&quot;:<sp/>1}</highlight></codeline>
<codeline lineno="726"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="727"><highlight class="stringliteral"><sp/><sp/>})&quot;;</highlight></codeline>
<codeline lineno="728"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>avro_schema<sp/>=<sp/>::avro::compileJsonSchemaFromString(avro_schema_json);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>avro_data;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>avro_datum(avro_schema.root());</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>avro_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>array<sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericArray&gt;();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>element(avro_schema.root()-&gt;leafAt(0)-&gt;leafAt(0));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>person_record<sp/>=<sp/>element.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>person_record.fieldAt(0).value&lt;std::string&gt;()<sp/>=</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Person&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(j);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>array.value().push_back(element);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>avro_data.push_back(avro_datum);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>expected_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="748"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;people&quot;:<sp/>[</highlight></codeline>
<codeline lineno="749"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person0_0&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;email&quot;:<sp/>null},</highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person0_1&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;email&quot;:<sp/>null}</highlight></codeline>
<codeline lineno="751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>]},</highlight></codeline>
<codeline lineno="752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;people&quot;:<sp/>[</highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person1_0&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;email&quot;:<sp/>null},</highlight></codeline>
<codeline lineno="754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;Person1_1&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;email&quot;:<sp/>null}</highlight></codeline>
<codeline lineno="755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>]}</highlight></codeline>
<codeline lineno="756"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="757"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyAppendDatumToBuilder(iceberg_schema,<sp/>avro_schema.root(),</highlight></codeline>
<codeline lineno="758"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avro_data,<sp/>expected_json));</highlight></codeline>
<codeline lineno="759"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="760"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="761" refid="structiceberg_1_1avro_1_1ExtractDatumParam" refkind="compound"><highlight class="stringliteral"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiceberg_1_1avro_1_1ExtractDatumParam" kindref="compound">ExtractDatumParam</ref><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Type&gt;<sp/>iceberg_type;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>std::string<sp/>arrow_json;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>std::function&lt;void(const<sp/>::avro::GenericDatum&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)&gt;<sp/>value_verifier;</highlight></codeline>
<codeline lineno="766"><highlight class="normal">};</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VerifyExtractDatumFromArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structiceberg_1_1avro_1_1ExtractDatumParam" kindref="compound">ExtractDatumParam</ref>&amp;<sp/>test_case)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1Schema" kindref="compound">Schema</ref><sp/>iceberg_schema({<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="comment">/*name=*/</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>test_case.iceberg_type)});</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,<sp/>test_case.arrow_json)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ValueOrDie();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>arrow_array-&gt;length();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>extracted_datum(avro_node);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>i,<sp/>&amp;extracted_datum),<sp/>IsOk())</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>extract<sp/>at<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>test_case.value_verifier(extracted_datum,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i));</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790" refid="classiceberg_1_1avro_1_1ExtractDatumFromArrayTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classiceberg_1_1avro_1_1ExtractDatumFromArrayTest" kindref="compound">ExtractDatumFromArrayTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::TestWithParam&lt;ExtractDatumParam&gt;<sp/>{};</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">TEST_P(<ref refid="classiceberg_1_1avro_1_1ExtractDatumFromArrayTest" kindref="compound">ExtractDatumFromArrayTest</ref>,<sp/><ref refid="classiceberg_1_1PrimitiveType" kindref="compound">PrimitiveType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyExtractDatumFromArray(GetParam()));</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;ExtractDatumParam&gt;<sp/>kExtractDatumTestCases<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Boolean&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1gafb5f5aec1d1d6218809ee512e2f87e83" kindref="member">boolean</ref>(),</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>true},<sp/>{&quot;a&quot;:<sp/>false},<sp/>{&quot;a&quot;:<sp/>true}])&quot;,</highlight></codeline>
<codeline lineno="801"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="802"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expected<sp/>=<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(),<sp/>expected);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Int&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>(),</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0},<sp/>{&quot;a&quot;:<sp/>100},<sp/>{&quot;a&quot;:<sp/>200}])&quot;,</highlight></codeline>
<codeline lineno="812"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="813"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int32_t&gt;(),<sp/>i<sp/>*<sp/>100);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Long&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>(),</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0},<sp/>{&quot;a&quot;:<sp/>1000000},<sp/>{&quot;a&quot;:<sp/>2000000}])&quot;,</highlight></codeline>
<codeline lineno="822"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="823"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int64_t&gt;(),<sp/>i<sp/>*<sp/>1000000LL);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Float&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1gab54ddf6ad9419b772fbde66891733212" kindref="member">float32</ref>(),</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0.0},<sp/>{&quot;a&quot;:<sp/>3.14},<sp/>{&quot;a&quot;:<sp/>6.28}])&quot;,</highlight></codeline>
<codeline lineno="832"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="833"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_FLOAT_EQ(record.fieldAt(0).value&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(),<sp/>i<sp/>*<sp/>3.14f);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Double&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga8457285a5fea3eda5b3f4289bce62ecb" kindref="member">float64</ref>(),</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0.0},<sp/>{&quot;a&quot;:<sp/>1.234567890},<sp/>{&quot;a&quot;:<sp/>2.469135780}])&quot;,</highlight></codeline>
<codeline lineno="842"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="843"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(record.fieldAt(0).value&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(),<sp/>i<sp/>*<sp/>1.234567890);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;String&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga877a22ff733d9ca08b85258b8decbcdb" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;test_string_0&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;test_string_1&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;test_string_2&quot;}])&quot;,</highlight></codeline>
<codeline lineno="853"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="854"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>expected<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test_string_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;std::string&gt;(),<sp/>expected);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Binary&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga33cd0c2e979eebcccc89cdbcd3f6af99" kindref="member">binary</ref>(),</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;abc&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;bcd&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;cde&quot;}])&quot;,</highlight></codeline>
<codeline lineno="864"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="865"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bytes<sp/>=<sp/>record.fieldAt(0).value&lt;std::vector&lt;uint8_t&gt;&gt;();</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(bytes.size(),<sp/>3);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(bytes[0],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(bytes[1],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(bytes[2],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal"><sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Fixed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>(4),</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;abcd&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;bcde&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;cdef&quot;}])&quot;,</highlight></codeline>
<codeline lineno="878"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="879"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref><sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericFixed&gt;();</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>.value().size(),<sp/>4);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>.value()[0]),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>.value()[1]),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>.value()[2]),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal"><sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>.value()[3]),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Decimal&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">decimal</ref>(10,<sp/>2),</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>&quot;0.00&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;10.01&quot;},<sp/>{&quot;a&quot;:<sp/>&quot;20.02&quot;}])&quot;,</highlight></codeline>
<codeline lineno="893"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="894"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref><sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericFixed&gt;();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>bytes<sp/>=<sp/><ref refid="group__type-factories_1gab0c125df895ca2e1f90a05c9b0704cf5" kindref="member">fixed</ref>.value();</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">decimal</ref><sp/>=</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::Decimal128::FromBigEndian(</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bytes.data()),<sp/>bytes.size())</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ValueOrDie();</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>expected_unscaled<sp/>=<sp/>i<sp/>*<sp/>1000<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">decimal</ref>.low_bits(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(expected_unscaled));</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="group__type-factories_1gaf9e64fe9d9556ef90130264f95b4d9f2" kindref="member">decimal</ref>.high_bits(),<sp/>0);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Date&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga377ecf647b08303fd9f87c31b1519dbf" kindref="member">date</ref>(),</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>18000},<sp/>{&quot;a&quot;:<sp/>18001},<sp/>{&quot;a&quot;:<sp/>18002}])&quot;,</highlight></codeline>
<codeline lineno="912"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="913"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int32_t&gt;(),<sp/>18000<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Time&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga7048c118c821d9aba4c08f3f23262b0f" kindref="member">time</ref>(),</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>45045123456},<sp/>{&quot;a&quot;:<sp/>45046123456},<sp/>{&quot;a&quot;:<sp/>45047123456}])&quot;,</highlight></codeline>
<codeline lineno="922"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="923"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int64_t&gt;(),</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>45045123456LL<sp/>+<sp/>i<sp/>*<sp/>1000000LL);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Timestamp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga98107734ef37f6f3b36b9fa3a6e30fe9" kindref="member">timestamp</ref>(),</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>0},<sp/>{&quot;a&quot;:<sp/>1000000},<sp/>{&quot;a&quot;:<sp/>2000000}])&quot;,</highlight></codeline>
<codeline lineno="933"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="934"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int64_t&gt;(),<sp/>i<sp/>*<sp/>1000000LL);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TimestampTz&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_type<sp/>=<sp/><ref refid="group__type-factories_1ga6533501016e29cf4e348da8a2a20635d" kindref="member">timestamp_tz</ref>(),</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>1672531200000000},<sp/>{&quot;a&quot;:<sp/>1672531201000000},<sp/>{&quot;a&quot;:<sp/>1672531202000000}])&quot;,</highlight></codeline>
<codeline lineno="944"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value_verifier<sp/>=</highlight></codeline>
<codeline lineno="945"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::avro::GenericDatum&amp;<sp/>datum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int64_t&gt;(),</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1672531200000000LL<sp/>+<sp/>i<sp/>*<sp/>1000000LL);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="951"><highlight class="normal">};</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal">INSTANTIATE_TEST_SUITE_P(AllPrimitiveTypes,<sp/>ExtractDatumFromArrayTest,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ValuesIn(kExtractDatumTestCases),</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::testing::TestParamInfo&lt;ExtractDatumParam&gt;&amp;<sp/>info)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info.param.name;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal">TEST(ExtractDatumFromArrayTest,<sp/>StructWithTwoFields)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=<sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="974"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>42,<sp/>&quot;name&quot;:<sp/>&quot;Alice&quot;},</highlight></codeline>
<codeline lineno="975"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>43,<sp/>&quot;name&quot;:<sp/>&quot;Bob&quot;},</highlight></codeline>
<codeline lineno="976"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>44,<sp/>&quot;name&quot;:<sp/>&quot;Charlie&quot;}</highlight></codeline>
<codeline lineno="977"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;)</highlight></codeline>
<codeline lineno="978"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ValueOrDie();</highlight></codeline>
<codeline lineno="979"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="980"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExpectedData<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>id;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>std::vector&lt;ExpectedData&gt;<sp/>expected<sp/>=<sp/>{{.id<sp/>=<sp/>42,<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Alice&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.id<sp/>=<sp/>43,<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bob&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.id<sp/>=<sp/>44,<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Charlie&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>verify_record<sp/>=<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ExpectedData&amp;<sp/>expected_data)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>extracted_datum(avro_node);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>index,<sp/>&amp;extracted_datum),<sp/>IsOk());</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>extracted_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int32_t&gt;(),<sp/>expected_data.id);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(1).value&lt;std::string&gt;(),<sp/>expected_data.name);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>expected.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>verify_record(i,<sp/>expected[i]);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal">TEST(ExtractDatumFromArrayTest,<sp/>NestedStruct)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;person&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1020"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Alice&quot;,<sp/>&quot;age&quot;:<sp/>25}},</highlight></codeline>
<codeline lineno="1021"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Bob&quot;,<sp/>&quot;age&quot;:<sp/>30}},</highlight></codeline>
<codeline lineno="1022"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>3,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Charlie&quot;,<sp/>&quot;age&quot;:<sp/>35}}</highlight></codeline>
<codeline lineno="1023"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="1024"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,<sp/>arrow_json).ValueOrDie();</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExpectedData<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>id;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>age;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>std::vector&lt;ExpectedData&gt;<sp/>expected<sp/>=<sp/>{{.id<sp/>=<sp/>1,<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Alice&quot;</highlight><highlight class="normal">,<sp/>.age<sp/>=<sp/>25},</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.id<sp/>=<sp/>2,<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bob&quot;</highlight><highlight class="normal">,<sp/>.age<sp/>=<sp/>30},</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.id<sp/>=<sp/>3,<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Charlie&quot;</highlight><highlight class="normal">,<sp/>.age<sp/>=<sp/>35}};</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>verify_record<sp/>=<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ExpectedData&amp;<sp/>expected_data)<sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>extracted_datum(avro_node);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>index,<sp/>&amp;extracted_datum),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>extracted_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int32_t&gt;(),<sp/>expected_data.id);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>person_record<sp/>=<sp/>record.fieldAt(1).value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(person_record.fieldAt(0).value&lt;std::string&gt;(),<sp/>expected_data.name);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(person_record.fieldAt(1).value&lt;int32_t&gt;(),<sp/>expected_data.age);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>expected.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>verify_record(i,<sp/>expected[i]);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal">TEST(ExtractDatumFromArrayTest,<sp/>ListOfIntegers)<sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;numbers&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()))),</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1067"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[10,<sp/>11,<sp/>12]},</highlight></codeline>
<codeline lineno="1068"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[20,<sp/>21]},</highlight></codeline>
<codeline lineno="1069"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[30,<sp/>31,<sp/>32,<sp/>33]}</highlight></codeline>
<codeline lineno="1070"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="1071"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,<sp/>arrow_json).ValueOrDie();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;int32_t&gt;&gt;<sp/>expected<sp/>=<sp/>{{10,<sp/>11,<sp/>12},<sp/>{20,<sp/>21},<sp/>{30,<sp/>31,<sp/>32,<sp/>33}};</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>verify_record<sp/>=<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int32_t&gt;&amp;<sp/>expected_numbers)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>extracted_datum(avro_node);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>index,<sp/>&amp;extracted_datum),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>extracted_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>array<sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericArray&gt;();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>elements<sp/>=<sp/>array.value();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(elements.size(),<sp/>expected_numbers.size());</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>expected_numbers.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(elements[i].value&lt;int32_t&gt;(),<sp/>expected_numbers[i]);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>expected.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>verify_record(i,<sp/>expected[i]);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal">TEST(ExtractDatumFromArrayTest,<sp/>MapStringToInt)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>Schema<sp/>iceberg_schema({</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;scores&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()))),</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[[&quot;alice&quot;,<sp/>95],<sp/>[&quot;bob&quot;,<sp/>87]]},</highlight></codeline>
<codeline lineno="1112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[[&quot;charlie&quot;,<sp/>92],<sp/>[&quot;diana&quot;,<sp/>98],<sp/>[&quot;eve&quot;,<sp/>89]]},</highlight></codeline>
<codeline lineno="1113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[[&quot;frank&quot;,<sp/>91]]}</highlight></codeline>
<codeline lineno="1114"><highlight class="stringliteral"><sp/><sp/>])&quot;;</highlight></codeline>
<codeline lineno="1115"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,<sp/>arrow_json).ValueOrDie();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">MapEntry<sp/>=<sp/>std::pair&lt;std::string,<sp/>int32_t&gt;;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;MapEntry&gt;&gt;<sp/>expected<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;alice&quot;</highlight><highlight class="normal">,<sp/>95},<sp/>{</highlight><highlight class="stringliteral">&quot;bob&quot;</highlight><highlight class="normal">,<sp/>87}},</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;charlie&quot;</highlight><highlight class="normal">,<sp/>92},<sp/>{</highlight><highlight class="stringliteral">&quot;diana&quot;</highlight><highlight class="normal">,<sp/>98},<sp/>{</highlight><highlight class="stringliteral">&quot;eve&quot;</highlight><highlight class="normal">,<sp/>89}},</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;frank&quot;</highlight><highlight class="normal">,<sp/>91}}};</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>verify_record<sp/>=<sp/>[&amp;](int64_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;MapEntry&gt;&amp;<sp/>expected_entries)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>extracted_datum(avro_node);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>index,<sp/>&amp;extracted_datum),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>extracted_datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="group__type-factories_1ga4d0b2254f39850e311ffed558e1bac7b" kindref="member">map</ref><sp/>=<sp/>record.fieldAt(0).value&lt;::avro::GenericMap&gt;();</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>entries<sp/>=<sp/><ref refid="group__type-factories_1ga4d0b2254f39850e311ffed558e1bac7b" kindref="member">map</ref>.value();</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(entries.size(),<sp/>expected_entries.size());</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>expected_entries.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(entries[i].first,<sp/>expected_entries[i].first);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(entries[i].second.value&lt;int32_t&gt;(),<sp/>expected_entries[i].second);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>expected.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>verify_record(i,<sp/>expected[i]);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal">TEST(ExtractDatumFromArrayTest,<sp/>ErrorHandling)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>Schema<sp/>iceberg_schema({<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>())});</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=<sp/>::arrow::json::ArrayFromJSONString(</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrow_struct_type,<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>1},<sp/>{&quot;a&quot;:<sp/>2},<sp/>{&quot;a&quot;:<sp/>3}])&quot;)</highlight></codeline>
<codeline lineno="1155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ValueOrDie();</highlight></codeline>
<codeline lineno="1156"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1157"><highlight class="stringliteral"><sp/><sp/>::avro::GenericDatum<sp/>datum(avro_node);</highlight></codeline>
<codeline lineno="1158"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1159"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>negative<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>EXPECT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>-1,<sp/>&amp;datum),</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasErrorMessage(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>extract<sp/>datum<sp/>from<sp/>array<sp/>at<sp/>index<sp/>-1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>index<sp/>beyond<sp/>array<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>EXPECT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>3,<sp/>&amp;datum),</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasErrorMessage(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>extract<sp/>datum<sp/>from<sp/>array<sp/>at<sp/>index<sp/>3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal">TEST(ExtractDatumFromArrayTest,<sp/>NullHandling)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>Schema<sp/>iceberg_schema({<ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>())});</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,<sp/>R</highlight><highlight class="stringliteral">&quot;([{&quot;a&quot;:<sp/>42},<sp/>{&quot;a&quot;:<sp/>null}])&quot;)</highlight></codeline>
<codeline lineno="1180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ValueOrDie();</highlight></codeline>
<codeline lineno="1181"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1182"><highlight class="stringliteral"><sp/><sp/>::avro::GenericDatum<sp/>datum(avro_node);</highlight></codeline>
<codeline lineno="1183"><highlight class="stringliteral"><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>0,<sp/>&amp;datum),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1184"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1185"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>EXPECT_EQ(record.fieldAt(0).unionBranch(),<sp/>1);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>EXPECT_EQ(record.fieldAt(0).type(),<sp/>::avro::AVRO_INT);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>EXPECT_EQ(record.fieldAt(0).value&lt;int32_t&gt;(),<sp/>42);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*arrow_array,<sp/>1,<sp/>&amp;datum),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record2<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="1192" refid="structiceberg_1_1avro_1_1RoundTripParam" refkind="compound"><highlight class="normal"><sp/><sp/>EXPECT_EQ(record2.fieldAt(0).unionBranch(),<sp/>0);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>EXPECT_EQ(record2.fieldAt(0).type(),<sp/>::avro::AVRO_NULL);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiceberg_1_1avro_1_1RoundTripParam" kindref="compound">RoundTripParam</ref><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Schema&gt;<sp/>iceberg_schema;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>std::string<sp/>arrow_json;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VerifyRoundTripConversion(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RoundTripParam&amp;<sp/>test_case)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>::avro::NodePtr<sp/>avro_node;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToAvroNodeVisitor{}.Visit(*test_case.iceberg_schema,<sp/>&amp;avro_node),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>ASSERT_THAT(ToArrowSchema(*test_case.iceberg_schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>::arrow::ImportSchema(&amp;arrow_c_schema).ValueOrDie();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_struct_type<sp/>=<sp/>std::make_shared&lt;::arrow::StructType&gt;(arrow_schema-&gt;fields());</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>original_array<sp/>=</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_struct_type,<sp/>test_case.arrow_json)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.ValueOrDie();</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>std::vector&lt;::avro::GenericDatum&gt;<sp/>extracted_data;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>original_array-&gt;length();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>datum(avro_node);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(ExtractDatumFromArray(*original_array,<sp/>i,<sp/>&amp;datum),<sp/>IsOk())</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>extract<sp/>datum<sp/>at<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>extracted_data.push_back(datum);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>projection_result<sp/>=</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Project(*test_case.iceberg_schema,<sp/>avro_node,<sp/></highlight><highlight class="comment">/*prune_source=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>ASSERT_THAT(projection_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>projection<sp/>=<sp/>std::move(projection_result.value());</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>::arrow::MakeBuilder(arrow_struct_type).ValueOrDie();</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>datum<sp/>:<sp/>extracted_data)<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(AppendDatumToBuilder(avro_node,<sp/>datum,<sp/>projection,</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*test_case.iceberg_schema,<sp/>builder.get()),</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsOk());</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rebuilt_array<sp/>=<sp/>builder-&gt;Finish().ValueOrDie();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(original_array-&gt;Equals(*rebuilt_array))</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Round-trip<sp/>consistency<sp/>failed!\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239" refid="classiceberg_1_1avro_1_1AvroRoundTripConversionTest" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Original<sp/>array:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>original_array-&gt;ToString()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rebuilt<sp/>array:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rebuilt_array-&gt;ToString();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classiceberg_1_1avro_1_1AvroRoundTripConversionTest" kindref="compound">AvroRoundTripConversionTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::TestWithParam&lt;RoundTripParam&gt;<sp/>{};</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal">TEST_P(AvroRoundTripConversionTest,<sp/>ConvertTypes)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyRoundTripConversion(GetParam()));</highlight></codeline>
<codeline lineno="1247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;RoundTripParam&gt;<sp/>kRoundTripTestCases<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SimpleStruct&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>100,<sp/>&quot;name&quot;:<sp/>&quot;Alice&quot;,<sp/>&quot;age&quot;:<sp/>25},</highlight></codeline>
<codeline lineno="1259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>101,<sp/>&quot;name&quot;:<sp/>&quot;Bob&quot;,<sp/>&quot;age&quot;:<sp/>null},</highlight></codeline>
<codeline lineno="1260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>102,<sp/>&quot;name&quot;:<sp/>&quot;Charlie&quot;,<sp/>&quot;age&quot;:<sp/>35}</highlight></codeline>
<codeline lineno="1261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PrimitiveTypes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;bool_field&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;int_field&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;long_field&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>()),</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;float_field&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gab54ddf6ad9419b772fbde66891733212" kindref="member">float32</ref>()),</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;double_field&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga8457285a5fea3eda5b3f4289bce62ecb" kindref="member">float64</ref>()),</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;string_field&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;bool_field&quot;:<sp/>true,<sp/>&quot;int_field&quot;:<sp/>42,<sp/>&quot;long_field&quot;:<sp/>1000000,<sp/>&quot;float_field&quot;:<sp/>3.14,<sp/>&quot;double_field&quot;:<sp/>2.718281828,<sp/>&quot;string_field&quot;:<sp/>&quot;hello&quot;},</highlight></codeline>
<codeline lineno="1275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;bool_field&quot;:<sp/>false,<sp/>&quot;int_field&quot;:<sp/>-42,<sp/>&quot;long_field&quot;:<sp/>-1000000,<sp/>&quot;float_field&quot;:<sp/>-3.14,<sp/>&quot;double_field&quot;:<sp/>-2.718281828,<sp/>&quot;string_field&quot;:<sp/>&quot;world&quot;}</highlight></codeline>
<codeline lineno="1276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NestedStruct&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;person&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Alice&quot;,<sp/>&quot;age&quot;:<sp/>30}},</highlight></codeline>
<codeline lineno="1291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Bob&quot;,<sp/>&quot;age&quot;:<sp/>25}}</highlight></codeline>
<codeline lineno="1292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ListOfIntegers&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;numbers&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()))),</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[1,<sp/>2,<sp/>3]},</highlight></codeline>
<codeline lineno="1304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[10,<sp/>20]},</highlight></codeline>
<codeline lineno="1305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;numbers&quot;:<sp/>[]}</highlight></codeline>
<codeline lineno="1306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MapStringToInt&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;scores&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()))),</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[[&quot;alice&quot;,<sp/>95],<sp/>[&quot;bob&quot;,<sp/>87]]},</highlight></codeline>
<codeline lineno="1319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[[&quot;charlie&quot;,<sp/>92]]},</highlight></codeline>
<codeline lineno="1320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;scores&quot;:<sp/>[]}</highlight></codeline>
<codeline lineno="1321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ComplexNested&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;tags&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()))),</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;metadata&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(7,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()))),</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;data&quot;:<sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;tags&quot;:<sp/>[&quot;tag1&quot;,<sp/>&quot;tag2&quot;],<sp/>&quot;metadata&quot;:<sp/>[[&quot;key1&quot;,<sp/>&quot;value1&quot;]]}},</highlight></codeline>
<codeline lineno="1343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;data&quot;:<sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;tags&quot;:<sp/>[],<sp/>&quot;metadata&quot;:<sp/>null}}</highlight></codeline>
<codeline lineno="1344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NullablePrimitives&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;optional_bool&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;optional_int&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;optional_long&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>()),</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;optional_string&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;required_id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;optional_bool&quot;:<sp/>true,<sp/>&quot;optional_int&quot;:<sp/>42,<sp/>&quot;optional_long&quot;:<sp/>1000000,<sp/>&quot;optional_string&quot;:<sp/>&quot;hello&quot;,<sp/>&quot;required_id&quot;:<sp/>1},</highlight></codeline>
<codeline lineno="1357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;optional_bool&quot;:<sp/>null,<sp/>&quot;optional_int&quot;:<sp/>null,<sp/>&quot;optional_long&quot;:<sp/>null,<sp/>&quot;optional_string&quot;:<sp/>null,<sp/>&quot;required_id&quot;:<sp/>2},</highlight></codeline>
<codeline lineno="1358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;optional_bool&quot;:<sp/>false,<sp/>&quot;optional_int&quot;:<sp/>null,<sp/>&quot;optional_long&quot;:<sp/>2000000,<sp/>&quot;optional_string&quot;:<sp/>null,<sp/>&quot;required_id&quot;:<sp/>3},</highlight></codeline>
<codeline lineno="1359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;optional_bool&quot;:<sp/>null,<sp/>&quot;optional_int&quot;:<sp/>123,<sp/>&quot;optional_long&quot;:<sp/>null,<sp/>&quot;optional_string&quot;:<sp/>&quot;world&quot;,<sp/>&quot;required_id&quot;:<sp/>4}</highlight></codeline>
<codeline lineno="1360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NullableNestedStruct&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;person&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;email&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;department&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Alice&quot;,<sp/>&quot;age&quot;:<sp/>30,<sp/>&quot;email&quot;:<sp/>&quot;alice@example.com&quot;},<sp/>&quot;department&quot;:<sp/>&quot;Engineering&quot;},</highlight></codeline>
<codeline lineno="1377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;person&quot;:<sp/>null,<sp/>&quot;department&quot;:<sp/>null},</highlight></codeline>
<codeline lineno="1378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>3,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Bob&quot;,<sp/>&quot;age&quot;:<sp/>null,<sp/>&quot;email&quot;:<sp/>null},<sp/>&quot;department&quot;:<sp/>&quot;Sales&quot;},</highlight></codeline>
<codeline lineno="1379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>4,<sp/>&quot;person&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;Charlie&quot;,<sp/>&quot;age&quot;:<sp/>25,<sp/>&quot;email&quot;:<sp/>null},<sp/>&quot;department&quot;:<sp/>null}</highlight></codeline>
<codeline lineno="1380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NullableListElements&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;numbers&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()))),</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;tags&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()))),</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;numbers&quot;:<sp/>[1,<sp/>null,<sp/>3],<sp/>&quot;tags&quot;:<sp/>[&quot;tag1&quot;,<sp/>null,<sp/>&quot;tag3&quot;]},</highlight></codeline>
<codeline lineno="1397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;numbers&quot;:<sp/>null,<sp/>&quot;tags&quot;:<sp/>[&quot;only_tag&quot;]},</highlight></codeline>
<codeline lineno="1398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>3,<sp/>&quot;numbers&quot;:<sp/>[null,<sp/>null],<sp/>&quot;tags&quot;:<sp/>[null,<sp/>null,<sp/>null]},</highlight></codeline>
<codeline lineno="1399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>4,<sp/>&quot;numbers&quot;:<sp/>[],<sp/>&quot;tags&quot;:<sp/>[]}</highlight></codeline>
<codeline lineno="1400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NullableMapValues&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;scores&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()))),</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;metadata&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;MapType&gt;(</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(7,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()))),</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;scores&quot;:<sp/>[[&quot;alice&quot;,<sp/>95],<sp/>[&quot;bob&quot;,<sp/>null]],<sp/>&quot;metadata&quot;:<sp/>[[&quot;key1&quot;,<sp/>&quot;value1&quot;],<sp/>[&quot;key2&quot;,<sp/>null]]},</highlight></codeline>
<codeline lineno="1419"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;scores&quot;:<sp/>null,<sp/>&quot;metadata&quot;:<sp/>[[&quot;key3&quot;,<sp/>null]]},</highlight></codeline>
<codeline lineno="1420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>3,<sp/>&quot;scores&quot;:<sp/>[[&quot;charlie&quot;,<sp/>null],<sp/>[&quot;diana&quot;,<sp/>98]],<sp/>&quot;metadata&quot;:<sp/>[]},</highlight></codeline>
<codeline lineno="1421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;:<sp/>4,<sp/>&quot;scores&quot;:<sp/>[],<sp/>&quot;metadata&quot;:<sp/>[[&quot;key4&quot;,<sp/>null],<sp/>[&quot;key5&quot;,<sp/>&quot;value5&quot;]]}</highlight></codeline>
<codeline lineno="1422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DeeplyNestedWithNulls&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;nested&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/></highlight><highlight class="stringliteral">&quot;values&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()))),</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7,<sp/></highlight><highlight class="stringliteral">&quot;tags&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;ListType&gt;(</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(8,<sp/></highlight><highlight class="stringliteral">&quot;element&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()))),</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1447"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;root&quot;:<sp/>{&quot;id&quot;:<sp/>1,<sp/>&quot;nested&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;test&quot;,<sp/>&quot;values&quot;:<sp/>[1,<sp/>null,<sp/>3]},<sp/>&quot;tags&quot;:<sp/>[&quot;a&quot;,<sp/>&quot;b&quot;]}},</highlight></codeline>
<codeline lineno="1448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;root&quot;:<sp/>{&quot;id&quot;:<sp/>2,<sp/>&quot;nested&quot;:<sp/>null,<sp/>&quot;tags&quot;:<sp/>null}},</highlight></codeline>
<codeline lineno="1449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;root&quot;:<sp/>{&quot;id&quot;:<sp/>3,<sp/>&quot;nested&quot;:<sp/>{&quot;name&quot;:<sp/>null,<sp/>&quot;values&quot;:<sp/>null},<sp/>&quot;tags&quot;:<sp/>[null,<sp/>&quot;c&quot;]}},</highlight></codeline>
<codeline lineno="1450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;root&quot;:<sp/>{&quot;id&quot;:<sp/>4,<sp/>&quot;nested&quot;:<sp/>{&quot;name&quot;:<sp/>&quot;empty&quot;,<sp/>&quot;values&quot;:<sp/>[]},<sp/>&quot;tags&quot;:<sp/>[]}}</highlight></codeline>
<codeline lineno="1451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AllNullsVariations&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iceberg_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;always_null&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;sometimes_null&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;nested_struct&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;inner_null&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(5,<sp/></highlight><highlight class="stringliteral">&quot;inner_required&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal">()),</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})),</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(6,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">int32</ref>()),</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.arrow_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([</highlight></codeline>
<codeline lineno="1467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;always_null&quot;:<sp/>null,<sp/>&quot;sometimes_null&quot;:<sp/>42,<sp/>&quot;nested_struct&quot;:<sp/>{&quot;inner_null&quot;:<sp/>&quot;value&quot;,<sp/>&quot;inner_required&quot;:<sp/>true},<sp/>&quot;id&quot;:<sp/>1},</highlight></codeline>
<codeline lineno="1468"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;always_null&quot;:<sp/>null,<sp/>&quot;sometimes_null&quot;:<sp/>null,<sp/>&quot;nested_struct&quot;:<sp/>null,<sp/>&quot;id&quot;:<sp/>2},</highlight></codeline>
<codeline lineno="1469"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;always_null&quot;:<sp/>null,<sp/>&quot;sometimes_null&quot;:<sp/>123,<sp/>&quot;nested_struct&quot;:<sp/>{&quot;inner_null&quot;:<sp/>null,<sp/>&quot;inner_required&quot;:<sp/>false},<sp/>&quot;id&quot;:<sp/>3},</highlight></codeline>
<codeline lineno="1470"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;always_null&quot;:<sp/>null,<sp/>&quot;sometimes_null&quot;:<sp/>null,<sp/>&quot;nested_struct&quot;:<sp/>{&quot;inner_null&quot;:<sp/>null,<sp/>&quot;inner_required&quot;:<sp/>true},<sp/>&quot;id&quot;:<sp/>4}</highlight></codeline>
<codeline lineno="1471"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])&quot;,</highlight></codeline>
<codeline lineno="1472"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="1473"><highlight class="stringliteral">};</highlight></codeline>
<codeline lineno="1474"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1475"><highlight class="stringliteral">INSTANTIATE_TEST_SUITE_P(AllTypes,<sp/>AvroRoundTripConversionTest,</highlight></codeline>
<codeline lineno="1476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::testing::ValuesIn(kRoundTripTestCases),</highlight></codeline>
<codeline lineno="1477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](const<sp/>::testing::TestParamInfo&lt;RoundTripParam&gt;&amp;<sp/>info)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info.param.name;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>iceberg::avro</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="iceberg/test/avro_data_test.cc"/>
  </compounddef>
</doxygen>
