<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1SchemaField" kind="class" language="C++" prot="public">
    <compoundname>iceberg::SchemaField</compoundname>
    <basecompoundref refid="classiceberg_1_1util_1_1Formattable" prot="public" virt="non-virtual">iceberg::util::Formattable</basecompoundref>
    <includes refid="schema__field_8h" local="no">schema_field.h</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classiceberg_1_1SchemaField_1a6b2bb9065eb2b5434c4ec7c59fa2777e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int32_t</type>
        <definition>constexpr int32_t iceberg::SchemaField::kInvalidFieldId</definition>
        <argsstring></argsstring>
        <name>kInvalidFieldId</name>
        <qualifiedname>iceberg::SchemaField::kInvalidFieldId</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="40" column="28" bodyfile="iceberg/schema_field.h" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiceberg_1_1SchemaField_1abc876942a15eddc55d9c74d4cb6accf1" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t iceberg::SchemaField::field_id_</definition>
        <argsstring></argsstring>
        <name>field_id_</name>
        <qualifiedname>iceberg::SchemaField::field_id_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="83" column="11" bodyfile="iceberg/schema_field.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1SchemaField_1a226d8bbdbbf816a7c961a340e2d331e6" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string iceberg::SchemaField::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>iceberg::SchemaField::name_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="84" column="15" bodyfile="iceberg/schema_field.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1SchemaField_1a9df7bb978efc03f8b4cd797d272b1434" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Type" kindref="compound">Type</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Type&gt; iceberg::SchemaField::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>iceberg::SchemaField::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="85" column="19" bodyfile="iceberg/schema_field.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1SchemaField_1a771c2e91d845e7da8b4bfd74fbe8b0a4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iceberg::SchemaField::optional_</definition>
        <argsstring></argsstring>
        <name>optional_</name>
        <qualifiedname>iceberg::SchemaField::optional_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="86" column="8" bodyfile="iceberg/schema_field.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1SchemaField_1a99978704fe2efeb7c796b6e3f6912575" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string iceberg::SchemaField::doc_</definition>
        <argsstring></argsstring>
        <name>doc_</name>
        <qualifiedname>iceberg::SchemaField::doc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="87" column="15" bodyfile="iceberg/schema_field.h" bodystart="87" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1a8a997425e11ae4ed248999d0d1fda1e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iceberg::SchemaField::SchemaField</definition>
        <argsstring>(int32_t field_id, std::string name, std::shared_ptr&lt; Type &gt; type, bool optional, std::string doc={})</argsstring>
        <name>SchemaField</name>
        <qualifiedname>iceberg::SchemaField::SchemaField</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>field_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Type" kindref="compound">Type</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>optional</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>doc</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Construct a field. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">field_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The field ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The field name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The field type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">optional</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether values of this field are required or nullable. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">doc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional documentation string for the field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="48" column="3" bodyfile="iceberg/schema_field.cc" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1a23db912890745382ec78ccb6a93bce84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t iceberg::SchemaField::field_id</definition>
        <argsstring>() const</argsstring>
        <name>field_id</name>
        <qualifiedname>iceberg::SchemaField::field_id</qualifiedname>
        <briefdescription>
<para>Get the field ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="59" column="12" bodyfile="iceberg/schema_field.cc" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1a733f14fa7ad1900137a97155329239e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view iceberg::SchemaField::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>iceberg::SchemaField::name</qualifiedname>
        <briefdescription>
<para>Get the field name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="62" column="21" bodyfile="iceberg/schema_field.cc" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1a9fbf59beb13cbb358fbce94d085ef53f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classiceberg_1_1Type" kindref="compound">Type</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; Type &gt; &amp; iceberg::SchemaField::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>iceberg::SchemaField::type</qualifiedname>
        <briefdescription>
<para>Get the field type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="65" column="26" bodyfile="iceberg/schema_field.cc" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1aaee3e5fcc9a0fc3173cdcf1c00552df1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iceberg::SchemaField::optional</definition>
        <argsstring>() const</argsstring>
        <name>optional</name>
        <qualifiedname>iceberg::SchemaField::optional</qualifiedname>
        <briefdescription>
<para>Get whether the field is optional. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="68" column="9" bodyfile="iceberg/schema_field.cc" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1ad992c1fcedc2d56244138f477efe21f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view iceberg::SchemaField::doc</definition>
        <argsstring>() const</argsstring>
        <name>doc</name>
        <qualifiedname>iceberg::SchemaField::doc</qualifiedname>
        <briefdescription>
<para>Get the field documentation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="71" column="20" bodyfile="iceberg/schema_field.cc" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1a2268e045b8212387bb2d5e1e75e8d0e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string iceberg::SchemaField::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <qualifiedname>iceberg::SchemaField::ToString</qualifiedname>
        <reimplements refid="classiceberg_1_1util_1_1Formattable_1a79618aca5b3bf63610d9c87ac5ae0386">ToString</reimplements>
        <briefdescription>
<para>Get a user-readable string representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="73" column="16" bodyfile="iceberg/schema_field.cc" bodystart="57" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref></type>
        <definition>SchemaField iceberg::SchemaField::MakeOptional</definition>
        <argsstring>(int32_t field_id, std::string name, std::shared_ptr&lt; Type &gt; type, std::string doc={})</argsstring>
        <name>MakeOptional</name>
        <qualifiedname>iceberg::SchemaField::MakeOptional</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>field_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Type" kindref="compound">Type</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>doc</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Construct an optional (nullable) field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="52" column="22" bodyfile="iceberg/schema_field.cc" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref></type>
        <definition>SchemaField iceberg::SchemaField::MakeRequired</definition>
        <argsstring>(int32_t field_id, std::string name, std::shared_ptr&lt; Type &gt; type, std::string doc={})</argsstring>
        <name>MakeRequired</name>
        <qualifiedname>iceberg::SchemaField::MakeRequired</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>field_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Type" kindref="compound">Type</ref> &gt;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>doc</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Construct a required (non-null) field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="55" column="22" bodyfile="iceberg/schema_field.cc" bodystart="42" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classiceberg_1_1SchemaField_1a02fc28490c65b5033a44315aa57c31c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const SchemaField &amp;lhs, const SchemaField &amp;rhs)</argsstring>
        <name>operator==</name>
        <qualifiedname>iceberg::SchemaField::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="75" column="15" bodyfile="iceberg/schema_field.h" bodystart="75" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classiceberg_1_1SchemaField_1adacc15914ef306f38248741c603ce5ae" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iceberg::SchemaField::Equals</definition>
        <argsstring>(const SchemaField &amp;other) const</argsstring>
        <name>Equals</name>
        <qualifiedname>iceberg::SchemaField::Equals</qualifiedname>
        <param>
          <type>const <ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compare two fields for equality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/schema_field.h" line="81" column="9" bodyfile="iceberg/schema_field.cc" bodystart="64" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A type combined with a name. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>iceberg::SchemaField</label>
        <link refid="classiceberg_1_1SchemaField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>iceberg::util::Formattable</label>
        <link refid="classiceberg_1_1util_1_1Formattable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>iceberg::SchemaField</label>
        <link refid="classiceberg_1_1SchemaField"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>iceberg::util::Formattable</label>
        <link refid="classiceberg_1_1util_1_1Formattable"/>
      </node>
    </collaborationgraph>
    <location file="iceberg/schema_field.h" line="38" column="1" bodyfile="iceberg/schema_field.h" bodystart="38" bodyend="88"/>
    <listofallmembers>
      <member refid="classiceberg_1_1SchemaField_1ad992c1fcedc2d56244138f477efe21f2" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>doc</name></member>
      <member refid="classiceberg_1_1SchemaField_1a99978704fe2efeb7c796b6e3f6912575" prot="private" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>doc_</name></member>
      <member refid="classiceberg_1_1SchemaField_1adacc15914ef306f38248741c603ce5ae" prot="private" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>Equals</name></member>
      <member refid="classiceberg_1_1SchemaField_1a23db912890745382ec78ccb6a93bce84" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>field_id</name></member>
      <member refid="classiceberg_1_1SchemaField_1abc876942a15eddc55d9c74d4cb6accf1" prot="private" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>field_id_</name></member>
      <member refid="classiceberg_1_1SchemaField_1a6b2bb9065eb2b5434c4ec7c59fa2777e" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>kInvalidFieldId</name></member>
      <member refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>MakeOptional</name></member>
      <member refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>MakeRequired</name></member>
      <member refid="classiceberg_1_1SchemaField_1a733f14fa7ad1900137a97155329239e5" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>name</name></member>
      <member refid="classiceberg_1_1SchemaField_1a226d8bbdbbf816a7c961a340e2d331e6" prot="private" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>name_</name></member>
      <member refid="classiceberg_1_1SchemaField_1a02fc28490c65b5033a44315aa57c31c1" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>operator==</name></member>
      <member refid="classiceberg_1_1SchemaField_1aaee3e5fcc9a0fc3173cdcf1c00552df1" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>optional</name></member>
      <member refid="classiceberg_1_1SchemaField_1a771c2e91d845e7da8b4bfd74fbe8b0a4" prot="private" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>optional_</name></member>
      <member refid="classiceberg_1_1SchemaField_1a8a997425e11ae4ed248999d0d1fda1e1" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>SchemaField</name></member>
      <member refid="classiceberg_1_1SchemaField_1a2268e045b8212387bb2d5e1e75e8d0e5" prot="public" virt="virtual"><scope>iceberg::SchemaField</scope><name>ToString</name></member>
      <member refid="classiceberg_1_1SchemaField_1a9fbf59beb13cbb358fbce94d085ef53f" prot="public" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>type</name></member>
      <member refid="classiceberg_1_1SchemaField_1a9df7bb978efc03f8b4cd797d272b1434" prot="private" virt="non-virtual"><scope>iceberg::SchemaField</scope><name>type_</name></member>
      <member refid="classiceberg_1_1util_1_1Formattable_1acfe29264450018bab0ceab0828cf46f9" prot="public" virt="virtual"><scope>iceberg::SchemaField</scope><name>~Formattable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
