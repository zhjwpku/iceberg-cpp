<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1TestConfig" kind="class" language="C++" prot="public">
    <compoundname>iceberg::TestConfig</compoundname>
    <basecompoundref refid="classiceberg_1_1ConfigBase" prot="public" virt="non-virtual">iceberg::ConfigBase&lt; TestConfig &gt;</basecompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classiceberg_1_1TestConfig_1ae39313ec7c7bacd10e27b8abfc0ef46f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="classiceberg_1_1ConfigBase" kindref="compound">ConfigBase</ref>&lt; <ref refid="classiceberg_1_1TestConfig" kindref="compound">TestConfig</ref> &gt;::Entry&lt; T &gt;</type>
        <definition>using iceberg::TestConfig::Entry =  const ConfigBase&lt;TestConfig&gt;::Entry&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Entry</name>
        <qualifiedname>iceberg::TestConfig::Entry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/config_test.cc" line="59" column="3" bodyfile="iceberg/test/config_test.cc" bodystart="59" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classiceberg_1_1TestConfig_1a91ba51a79d7528ee334ad69b80b0d74c" prot="public" static="yes" mutable="no">
        <type>const Entry&lt; std::string &gt;</type>
        <definition>const Entry&lt;std::string&gt; iceberg::TestConfig::kStringConfig</definition>
        <argsstring></argsstring>
        <name>kStringConfig</name>
        <qualifiedname>iceberg::TestConfig::kStringConfig</qualifiedname>
        <initializer>{&quot;string_config&quot;, &quot;default_value&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/config_test.cc" line="61" column="29" bodyfile="iceberg/test/config_test.cc" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TestConfig_1a10e122005399e149462dec8059fc00e1" prot="public" static="yes" mutable="no">
        <type>const Entry&lt; int &gt;</type>
        <definition>const Entry&lt;int&gt; iceberg::TestConfig::kIntConfig</definition>
        <argsstring></argsstring>
        <name>kIntConfig</name>
        <qualifiedname>iceberg::TestConfig::kIntConfig</qualifiedname>
        <initializer>{&quot;int_config&quot;, 25}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/config_test.cc" line="62" column="29" bodyfile="iceberg/test/config_test.cc" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TestConfig_1a1121c09aa3f23731e3caf8bff5731fa5" prot="public" static="yes" mutable="no">
        <type>const Entry&lt; bool &gt;</type>
        <definition>const Entry&lt;bool&gt; iceberg::TestConfig::kBoolConfig</definition>
        <argsstring></argsstring>
        <name>kBoolConfig</name>
        <qualifiedname>iceberg::TestConfig::kBoolConfig</qualifiedname>
        <initializer>{&quot;bool_config&quot;, false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/config_test.cc" line="63" column="29" bodyfile="iceberg/test/config_test.cc" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TestConfig_1af5f2de7fe4fb8bbc24f402cc3eb97894" prot="public" static="yes" mutable="no">
        <type>const Entry&lt; TestEnum &gt;</type>
        <definition>const Entry&lt;TestEnum&gt; iceberg::TestConfig::kEnumConfig</definition>
        <argsstring></argsstring>
        <name>kEnumConfig</name>
        <qualifiedname>iceberg::TestConfig::kEnumConfig</qualifiedname>
        <initializer>{&quot;enum_config&quot;, TestEnum::VALUE1,
                                                  EnumToString, StringToEnum}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/config_test.cc" line="64" column="29" bodyfile="iceberg/test/config_test.cc" bodystart="64" bodyend="65"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TestConfig_1a62aa8eb12a0912a8f77347f5c37302bf" prot="public" static="yes" mutable="no">
        <type>const Entry&lt; double &gt;</type>
        <definition>const Entry&lt;double&gt; iceberg::TestConfig::kDoubleConfig</definition>
        <argsstring></argsstring>
        <name>kDoubleConfig</name>
        <qualifiedname>iceberg::TestConfig::kDoubleConfig</qualifiedname>
        <initializer>{&quot;double_config&quot;, 3.14}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/config_test.cc" line="66" column="29" bodyfile="iceberg/test/config_test.cc" bodystart="66" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>iceberg::ConfigBase&lt; TestConfig &gt;</label>
        <link refid="classiceberg_1_1ConfigBase"/>
      </node>
      <node id="1">
        <label>iceberg::TestConfig</label>
        <link refid="classiceberg_1_1TestConfig"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>iceberg::ConfigBase&lt; TestConfig &gt;</label>
        <link refid="classiceberg_1_1ConfigBase"/>
        <childnode refid="3" relation="usage">
          <edgelabel>configs_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>iceberg::TestConfig</label>
        <link refid="classiceberg_1_1TestConfig"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::unordered_map&lt; std::string, std::string &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="iceberg/test/config_test.cc" line="56" column="1" bodyfile="iceberg/test/config_test.cc" bodystart="56" bodyend="67"/>
    <listofallmembers>
      <member refid="classiceberg_1_1ConfigBase_1a464281576df4a683611d8319e578257c" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>configs</name></member>
      <member refid="classiceberg_1_1ConfigBase_1a5988dbb52a6ce914c88ef10c66e5bba7" prot="protected" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>configs_</name></member>
      <member refid="classiceberg_1_1TestConfig_1ae39313ec7c7bacd10e27b8abfc0ef46f" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>Entry</name></member>
      <member refid="classiceberg_1_1ConfigBase_1a793c5c7e230dac7b87c16200f8263db6" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>Get</name></member>
      <member refid="classiceberg_1_1TestConfig_1a1121c09aa3f23731e3caf8bff5731fa5" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>kBoolConfig</name></member>
      <member refid="classiceberg_1_1TestConfig_1a62aa8eb12a0912a8f77347f5c37302bf" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>kDoubleConfig</name></member>
      <member refid="classiceberg_1_1TestConfig_1af5f2de7fe4fb8bbc24f402cc3eb97894" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>kEnumConfig</name></member>
      <member refid="classiceberg_1_1TestConfig_1a10e122005399e149462dec8059fc00e1" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>kIntConfig</name></member>
      <member refid="classiceberg_1_1TestConfig_1a91ba51a79d7528ee334ad69b80b0d74c" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>kStringConfig</name></member>
      <member refid="classiceberg_1_1ConfigBase_1a95b58a9275880fc2437210f42e8946f2" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>Reset</name></member>
      <member refid="classiceberg_1_1ConfigBase_1a3c626ca9dd5adf5a1f2e72d3f751059c" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>Set</name></member>
      <member refid="classiceberg_1_1ConfigBase_1a1fe814df79a9ed72e34fa9d7e6e8d443" prot="public" virt="non-virtual"><scope>iceberg::TestConfig</scope><name>Unset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
