<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1TableRequirement" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>iceberg::TableRequirement</compoundname>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertCurrentSchemaID" prot="public" virt="non-virtual">iceberg::table::AssertCurrentSchemaID</derivedcompoundref>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertDefaultSortOrderID" prot="public" virt="non-virtual">iceberg::table::AssertDefaultSortOrderID</derivedcompoundref>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertDefaultSpecID" prot="public" virt="non-virtual">iceberg::table::AssertDefaultSpecID</derivedcompoundref>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertDoesNotExist" prot="public" virt="non-virtual">iceberg::table::AssertDoesNotExist</derivedcompoundref>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertLastAssignedFieldId" prot="public" virt="non-virtual">iceberg::table::AssertLastAssignedFieldId</derivedcompoundref>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertLastAssignedPartitionId" prot="public" virt="non-virtual">iceberg::table::AssertLastAssignedPartitionId</derivedcompoundref>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertRefSnapshotID" prot="public" virt="non-virtual">iceberg::table::AssertRefSnapshotID</derivedcompoundref>
    <derivedcompoundref refid="classiceberg_1_1table_1_1AssertUUID" prot="public" virt="non-virtual">iceberg::table::AssertUUID</derivedcompoundref>
    <includes refid="table__requirement_8h" local="no">table_requirement.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1TableRequirement_1a91a754d5e846ec2607aec5bf09896270" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual iceberg::TableRequirement::~TableRequirement</definition>
        <argsstring>()=default</argsstring>
        <name>~TableRequirement</name>
        <qualifiedname>iceberg::TableRequirement::~TableRequirement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="45" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableRequirement_1ae122a03307e1dc67692d8e98b389fb15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>Status</type>
        <definition>virtual Status iceberg::TableRequirement::Validate</definition>
        <argsstring>(const TableMetadata *base) const =0</argsstring>
        <name>Validate</name>
        <qualifiedname>iceberg::TableRequirement::Validate</qualifiedname>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertDoesNotExist_1ad05eda57ccb7f7273834640779a73d40">Validate</reimplementedby>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertUUID_1a40a0b6fda5e482c8c23d7807dc19f0a5">Validate</reimplementedby>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertRefSnapshotID_1a55299e43bc5a41ca0af1dbcba9e2d090">Validate</reimplementedby>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertLastAssignedFieldId_1af7fa8cf94c3ae72cfa9e2d842fea42c2">Validate</reimplementedby>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertCurrentSchemaID_1aa7fd0eb9539d1e55ddc68c0f2b4ee3b8">Validate</reimplementedby>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertLastAssignedPartitionId_1ad53e8b2b1b2f3add9c79eb08d6744e2a">Validate</reimplementedby>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertDefaultSpecID_1a204aab5a48395e44877cacdb2f571bf7">Validate</reimplementedby>
        <reimplementedby refid="classiceberg_1_1table_1_1AssertDefaultSortOrderID_1a85024195b579589dae3240f493cfa6fb">Validate</reimplementedby>
        <param>
          <type>const <ref refid="structiceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Validate this requirement against table metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base table metadata to validate against (may be nullptr) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status indicating success or failure with error details </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="51" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for update requirement operations. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a requirement that must be validated before applying metadata updates to a table. Each concrete subclass represents a specific type of requirement check. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>iceberg::TableRequirement</label>
        <link refid="classiceberg_1_1TableRequirement"/>
      </node>
      <node id="2">
        <label>iceberg::table::AssertCurrentSchemaID</label>
        <link refid="classiceberg_1_1table_1_1AssertCurrentSchemaID"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>iceberg::table::AssertDefaultSortOrderID</label>
        <link refid="classiceberg_1_1table_1_1AssertDefaultSortOrderID"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>iceberg::table::AssertDefaultSpecID</label>
        <link refid="classiceberg_1_1table_1_1AssertDefaultSpecID"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>iceberg::table::AssertDoesNotExist</label>
        <link refid="classiceberg_1_1table_1_1AssertDoesNotExist"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>iceberg::table::AssertLastAssignedFieldId</label>
        <link refid="classiceberg_1_1table_1_1AssertLastAssignedFieldId"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>iceberg::table::AssertLastAssignedPartitionId</label>
        <link refid="classiceberg_1_1table_1_1AssertLastAssignedPartitionId"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>iceberg::table::AssertRefSnapshotID</label>
        <link refid="classiceberg_1_1table_1_1AssertRefSnapshotID"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>iceberg::table::AssertUUID</label>
        <link refid="classiceberg_1_1table_1_1AssertUUID"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="iceberg/table_requirement.h" line="43" column="1" bodyfile="iceberg/table_requirement.h" bodystart="43" bodyend="52"/>
    <listofallmembers>
      <member refid="classiceberg_1_1TableRequirement_1ae122a03307e1dc67692d8e98b389fb15" prot="public" virt="pure-virtual"><scope>iceberg::TableRequirement</scope><name>Validate</name></member>
      <member refid="classiceberg_1_1TableRequirement_1a91a754d5e846ec2607aec5bf09896270" prot="public" virt="virtual"><scope>iceberg::TableRequirement</scope><name>~TableRequirement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
