<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="metadata__serde__test_8cc" kind="file" language="C++">
    <compoundname>metadata_serde_test.cc</compoundname>
    <includes local="no">optional</includes>
    <includes local="no">string</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="partition__field_8h" local="yes">iceberg/partition_field.h</includes>
    <includes refid="partition__spec_8h" local="yes">iceberg/partition_spec.h</includes>
    <includes refid="schema_8h" local="yes">iceberg/schema.h</includes>
    <includes refid="schema__field_8h" local="yes">iceberg/schema_field.h</includes>
    <includes refid="snapshot_8h" local="yes">iceberg/snapshot.h</includes>
    <includes refid="sort__field_8h" local="yes">iceberg/sort_field.h</includes>
    <includes refid="sort__order_8h" local="yes">iceberg/sort_order.h</includes>
    <includes refid="statistics__file_8h" local="yes">iceberg/statistics_file.h</includes>
    <includes refid="table__metadata_8h" local="yes">iceberg/table_metadata.h</includes>
    <includes refid="matchers_8h" local="yes">iceberg/test/matchers.h</includes>
    <includes refid="test__common_8h" local="yes">iceberg/test/test_common.h</includes>
    <includes refid="transform_8h" local="yes">iceberg/transform.h</includes>
    <includes refid="type_8h" local="yes">iceberg/type.h</includes>
    <incdepgraph>
      <node id="46">
        <label>iceberg/expression/literal.h</label>
        <link refid="literal_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>iceberg/iceberg_export.h</label>
        <link refid="iceberg__export_8h_source"/>
      </node>
      <node id="5">
        <label>iceberg/partition_field.h</label>
        <link refid="partition__field_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>iceberg/partition_spec.h</label>
        <link refid="partition__spec_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>iceberg/result.h</label>
        <link refid="result_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iceberg/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>iceberg/schema_field.h</label>
        <link refid="schema__field_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>iceberg/snapshot.h</label>
        <link refid="snapshot_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>iceberg/sort_field.h</label>
        <link refid="sort__field_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>iceberg/sort_order.h</label>
        <link refid="sort__order_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>iceberg/statistics_file.h</label>
        <link refid="statistics__file_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>iceberg/table_metadata.h</label>
        <link refid="table__metadata_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>iceberg/test/matchers.h</label>
        <link refid="matchers_8h_source"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg/test/metadata_serde_test.cc</label>
        <link refid="metadata__serde__test_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>iceberg/test/test_common.h</label>
        <link refid="test__common_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iceberg/transform.h</label>
        <link refid="transform_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iceberg/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>iceberg/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
      </node>
      <node id="48">
        <label>iceberg/util/decimal.h</label>
        <link refid="decimal_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>iceberg/util/formattable.h</label>
        <link refid="formattable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>iceberg/util/int128.h</label>
        <link refid="int128_8h"/>
      </node>
      <node id="25">
        <label>iceberg/util/lazy.h</label>
        <link refid="lazy_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>iceberg/util/macros.h</label>
        <link refid="macros_8h_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>iceberg/util/string_util.h</label>
        <link refid="string__util_8h_source"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>iceberg/util/timepoint.h</label>
        <link refid="timepoint_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>iceberg/util/uuid.h</label>
        <link refid="uuid_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>array</label>
      </node>
      <node id="29">
        <label>cassert</label>
      </node>
      <node id="37">
        <label>chrono</label>
      </node>
      <node id="47">
        <label>compare</label>
      </node>
      <node id="26">
        <label>concepts</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="17">
        <label>expected</label>
      </node>
      <node id="18">
        <label>format</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="43">
        <label>gmock/gmock.h</label>
      </node>
      <node id="4">
        <label>gtest/gtest.h</label>
      </node>
      <node id="49">
        <label>iosfwd</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="13">
        <label>mutex</label>
      </node>
      <node id="2">
        <label>optional</label>
      </node>
      <node id="32">
        <label>ranges</label>
      </node>
      <node id="14">
        <label>span</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="8">
        <label>string_view</label>
      </node>
      <node id="50">
        <label>type_traits</label>
      </node>
      <node id="24">
        <label>unordered_map</label>
      </node>
      <node id="20">
        <label>unordered_set</label>
      </node>
      <node id="34">
        <label>utility</label>
      </node>
      <node id="35">
        <label>variant</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceiceberg">iceberg</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="partition__field_8h" kindref="compound">iceberg/partition_field.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="partition__spec_8h" kindref="compound">iceberg/partition_spec.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">iceberg/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema__field_8h" kindref="compound">iceberg/schema_field.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/snapshot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sort__field_8h" kindref="compound">iceberg/sort_field.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/sort_order.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statistics__file_8h" kindref="compound">iceberg/statistics_file.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__metadata_8h" kindref="compound">iceberg/table_metadata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/matchers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/test_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="transform_8h" kindref="compound">iceberg/transform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">iceberg/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">iceberg<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReadTableMetadataExpectError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file_name,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>expected_error_substr)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ReadTableMetadata(file_name);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>ASSERT_FALSE(result.has_value())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>parsing<sp/>to<sp/>fail<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>file_name;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>EXPECT_THAT(result,<sp/>HasErrorMessage(expected_error_substr));</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssertSchema(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableMetadata&amp;<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Schema&amp;<sp/>expected_schema)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>metadata.Schema();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(schema.has_value());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>EXPECT_EQ(*(schema.value().get()),<sp/>expected_schema);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssertSchemaById(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableMetadata&amp;<sp/>metadata,<sp/>int32_t<sp/>schema_id,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Schema&amp;<sp/>expected_schema)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>metadata.SchemaById(schema_id);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(schema.has_value());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>EXPECT_EQ(*(schema.value().get()),<sp/>expected_schema);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssertPartitionSpec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableMetadata&amp;<sp/>metadata,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PartitionSpec&amp;<sp/>expected_spec)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>partition_spec<sp/>=<sp/>metadata.PartitionSpec();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(partition_spec.has_value());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>EXPECT_EQ(*(partition_spec.value().get()),<sp/>expected_spec);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssertSortOrder(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableMetadata&amp;<sp/>metadata,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SortOrder&amp;<sp/>expected_sort_order)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sort_order<sp/>=<sp/>metadata.SortOrder();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(sort_order.has_value());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>EXPECT_EQ(*(sort_order.value().get()),<sp/>expected_sort_order);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssertSnapshot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableMetadata&amp;<sp/>metadata,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Snapshot&amp;<sp/>expected_snapshot)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>snapshot<sp/>=<sp/>metadata.Snapshot();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(snapshot.has_value());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>EXPECT_EQ(*snapshot.value(),<sp/>expected_snapshot);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssertSnapshotById(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableMetadata&amp;<sp/>metadata,<sp/>int64_t<sp/>snapshot_id,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Snapshot&amp;<sp/>expected_snapshot)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>snapshot<sp/>=<sp/>metadata.SnapshotById(snapshot_id);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(snapshot.has_value());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>EXPECT_EQ(*snapshot.value(),<sp/>expected_snapshot);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV1Valid)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TableMetadata&gt;<sp/>metadata;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(ReadTableMetadata(</highlight><highlight class="stringliteral">&quot;TableMetadataV1Valid.json&quot;</highlight><highlight class="normal">,<sp/>&amp;metadata));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SchemaField&gt;{<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>()),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>()),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>())},</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*schema_id=*/</highlight><highlight class="normal">std::nullopt);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_spec<sp/>=<sp/>std::make_shared&lt;PartitionSpec&gt;(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_schema,<sp/></highlight><highlight class="comment">/*spec_id=*/</highlight><highlight class="normal">0,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PartitionField&gt;{PartitionField(</highlight><highlight class="comment">/*source_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1000,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1Transform_1ac4af9a6b608050712db9b11906e6f198" kindref="member">Transform::Identity</ref>())});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>TableMetadata<sp/>expected{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.format_version<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;d20125c8-7284-442c-9aea-15fee620737c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.location<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test/location&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_sequence_number<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_updated_ms<sp/>=<sp/>TimePointMsFromUnixMs(1602638573874).value(),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_column_id<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.schemas<sp/>=<sp/>{expected_schema},</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_schema_id<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.partition_specs<sp/>=<sp/>{expected_spec},</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_spec_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_partition_id<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_snapshot_id<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sort_orders<sp/>=<sp/>{<ref refid="classiceberg_1_1SortOrder_1a5d0c769867b9244b1d48cd308659326f" kindref="member">SortOrder::Unsorted</ref>()},</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_sort_order_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.next_row_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>ASSERT_EQ(*metadata,<sp/>expected);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>AssertSchema(*metadata,<sp/>*expected_schema);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>AssertPartitionSpec(*metadata,<sp/>*expected_spec);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>ASSERT_FALSE(metadata-&gt;Snapshot().has_value());</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV2Valid)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TableMetadata&gt;<sp/>metadata;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(ReadTableMetadata(</highlight><highlight class="stringliteral">&quot;TableMetadataV2Valid.json&quot;</highlight><highlight class="normal">,<sp/>&amp;metadata));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_schema_1<sp/>=<sp/>std::make_shared&lt;Schema&gt;(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SchemaField&gt;{SchemaField(</highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>(),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*optional=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*schema_id=*/</highlight><highlight class="normal">0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_schema_2<sp/>=<sp/>std::make_shared&lt;Schema&gt;(</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SchemaField&gt;{<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>()),</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>()),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>())},</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*schema_id=*/</highlight><highlight class="normal">1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_spec<sp/>=<sp/>std::make_shared&lt;PartitionSpec&gt;(</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_schema_2,<sp/></highlight><highlight class="comment">/*spec_id=*/</highlight><highlight class="normal">0,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PartitionField&gt;{PartitionField(</highlight><highlight class="comment">/*source_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1000,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1Transform_1ac4af9a6b608050712db9b11906e6f198" kindref="member">Transform::Identity</ref>())});</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_sort_order<sp/>=<sp/>std::make_shared&lt;SortOrder&gt;(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*order_id=*/</highlight><highlight class="normal">3,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SortField&gt;{SortField(</highlight><highlight class="comment">/*source_id=*/</highlight><highlight class="normal">2,<sp/><ref refid="classiceberg_1_1Transform_1ac4af9a6b608050712db9b11906e6f198" kindref="member">Transform::Identity</ref>(),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection::kAscending,<sp/>NullOrder::kFirst),</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortField(</highlight><highlight class="comment">/*source_id=*/</highlight><highlight class="normal">3,<sp/><ref refid="classiceberg_1_1Transform_1ac8370cf16ba3c26216f314dbdac5259a" kindref="member">Transform::Bucket</ref>(4),</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection::kDescending,<sp/>NullOrder::kLast)});</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_snapshot_1<sp/>=<sp/>std::make_shared&lt;Snapshot&gt;(Snapshot{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>3051729675574597004,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sequence_number<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.timestamp_ms<sp/>=<sp/>TimePointMsFromUnixMs(1515100955770).value(),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.manifest_list<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://a/b/1.avro&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.summary<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;operation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_snapshot_2<sp/>=<sp/>std::make_shared&lt;Snapshot&gt;(Snapshot{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.parent_snapshot_id<sp/>=<sp/>3051729675574597004,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sequence_number<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.timestamp_ms<sp/>=<sp/>TimePointMsFromUnixMs(1555100955770).value(),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.manifest_list<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://a/b/2.avro&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.summary<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;operation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.schema_id<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>TableMetadata<sp/>expected{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.format_version<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;9c12d441-03fe-4693-9a96-a0705ddf69c1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.location<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test/location&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_sequence_number<sp/>=<sp/>34,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_updated_ms<sp/>=<sp/>TimePointMsFromUnixMs(1602638573590).value(),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_column_id<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.schemas<sp/>=<sp/>{expected_schema_1,<sp/>expected_schema_2},</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_schema_id<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.partition_specs<sp/>=<sp/>{expected_spec},</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_spec_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_partition_id<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshots<sp/>=<sp/>{expected_snapshot_1,<sp/>expected_snapshot_2},</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_log<sp/>=<sp/>{SnapshotLogEntry{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.timestamp_ms<sp/>=<sp/>TimePointMsFromUnixMs(1515100955770).value(),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>3051729675574597004},</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SnapshotLogEntry{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.timestamp_ms<sp/>=<sp/>TimePointMsFromUnixMs(1555100955770).value(),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>3055729675574597004}},</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sort_orders<sp/>=<sp/>{expected_sort_order},</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_sort_order_id<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.refs<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;SnapshotRef&gt;(</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SnapshotRef{.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.retention<sp/>=<sp/>SnapshotRef::Branch{}})}},</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.next_row_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>ASSERT_EQ(*metadata,<sp/>expected);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>AssertSchema(*metadata,<sp/>*expected_schema_2);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>AssertSchemaById(*metadata,<sp/>0,<sp/>*expected_schema_1);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>AssertSchemaById(*metadata,<sp/>1,<sp/>*expected_schema_2);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>AssertPartitionSpec(*metadata,<sp/>*expected_spec);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>AssertSortOrder(*metadata,<sp/>*expected_sort_order);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>AssertSnapshot(*metadata,<sp/>*expected_snapshot_2);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>AssertSnapshotById(*metadata,<sp/>3051729675574597004,<sp/>*expected_snapshot_1);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>AssertSnapshotById(*metadata,<sp/>3055729675574597004,<sp/>*expected_snapshot_2);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV2ValidMinimal)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TableMetadata&gt;<sp/>metadata;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReadTableMetadata(</highlight><highlight class="stringliteral">&quot;TableMetadataV2ValidMinimal.json&quot;</highlight><highlight class="normal">,<sp/>&amp;metadata));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SchemaField&gt;{<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>()),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;comment&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>())},</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*schema_id=*/</highlight><highlight class="normal">0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_spec<sp/>=<sp/>std::make_shared&lt;PartitionSpec&gt;(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_schema,<sp/></highlight><highlight class="comment">/*spec_id=*/</highlight><highlight class="normal">0,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PartitionField&gt;{PartitionField(</highlight><highlight class="comment">/*source_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1000,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1Transform_1ac4af9a6b608050712db9b11906e6f198" kindref="member">Transform::Identity</ref>())});</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_sort_order<sp/>=<sp/>std::make_shared&lt;SortOrder&gt;(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*order_id=*/</highlight><highlight class="normal">3,<sp/>std::vector&lt;SortField&gt;{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortField(</highlight><highlight class="comment">/*source_id=*/</highlight><highlight class="normal">2,<sp/><ref refid="classiceberg_1_1Transform_1ac4af9a6b608050712db9b11906e6f198" kindref="member">Transform::Identity</ref>(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection::kAscending,<sp/>NullOrder::kFirst),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortField(</highlight><highlight class="comment">/*source_id=*/</highlight><highlight class="normal">3,<sp/><ref refid="classiceberg_1_1Transform_1ac8370cf16ba3c26216f314dbdac5259a" kindref="member">Transform::Bucket</ref>(4),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SortDirection::kDescending,<sp/>NullOrder::kLast),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>TableMetadata<sp/>expected{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.format_version<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;9c12d441-03fe-4693-9a96-a0705ddf69c1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.location<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test/location&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_sequence_number<sp/>=<sp/>34,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_updated_ms<sp/>=<sp/>TimePointMsFromUnixMs(1602638573590).value(),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_column_id<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.schemas<sp/>=<sp/>{expected_schema},</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_schema_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.partition_specs<sp/>=<sp/>{expected_spec},</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_spec_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_partition_id<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_snapshot_id<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sort_orders<sp/>=<sp/>{expected_sort_order},</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_sort_order_id<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.next_row_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>ASSERT_EQ(*metadata,<sp/>expected);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>AssertSchema(*metadata,<sp/>*expected_schema);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>AssertPartitionSpec(*metadata,<sp/>*expected_spec);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>AssertSortOrder(*metadata,<sp/>*expected_sort_order);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>ASSERT_FALSE(metadata-&gt;Snapshot().has_value());</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeStatisticsFiles)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TableMetadata&gt;<sp/>metadata;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReadTableMetadata(</highlight><highlight class="stringliteral">&quot;TableMetadataStatisticsFiles.json&quot;</highlight><highlight class="normal">,<sp/>&amp;metadata));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SchemaField&gt;{SchemaField(</highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>(),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*optional=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*schema_id=*/</highlight><highlight class="normal">0);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_spec<sp/>=<sp/>std::make_shared&lt;PartitionSpec&gt;(expected_schema,<sp/></highlight><highlight class="comment">/*spec_id=*/</highlight><highlight class="normal">0,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PartitionField&gt;{});</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_snapshot<sp/>=<sp/>std::make_shared&lt;Snapshot&gt;(Snapshot{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sequence_number<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.timestamp_ms<sp/>=<sp/>TimePointMsFromUnixMs(1555100955770).value(),</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.manifest_list<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://a/b/2.avro&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.summary<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;operation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.schema_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_stats_file<sp/>=<sp/>std::make_shared&lt;StatisticsFile&gt;(StatisticsFile{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://a/b/stats.puffin&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.file_size_in_bytes<sp/>=<sp/>413,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.file_footer_size_in_bytes<sp/>=<sp/>42,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.blob_metadata<sp/>=</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlobMetadata{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ndv&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.source_snapshot_sequence_number<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fields<sp/>=<sp/>{1},</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.properties<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>TableMetadata<sp/>expected{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.format_version<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;9c12d441-03fe-4693-9a96-a0705ddf69c1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.location<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test/location&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_sequence_number<sp/>=<sp/>34,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_updated_ms<sp/>=<sp/>TimePointMsFromUnixMs(1602638573590).value(),</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_column_id<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.schemas<sp/>=<sp/>{expected_schema},</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_schema_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.partition_specs<sp/>=<sp/>{expected_spec},</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_spec_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_partition_id<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.properties<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshots<sp/>=<sp/>{expected_snapshot},</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_log<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.metadata_log<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sort_orders<sp/>=<sp/>{<ref refid="classiceberg_1_1SortOrder_1a5d0c769867b9244b1d48cd308659326f" kindref="member">SortOrder::Unsorted</ref>()},</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_sort_order_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.refs<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;SnapshotRef&gt;(</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SnapshotRef{.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.retention<sp/>=<sp/>SnapshotRef::Branch{}})}},</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.statistics<sp/>=<sp/>{expected_stats_file},</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.partition_statistics<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.next_row_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>ASSERT_EQ(*metadata,<sp/>expected);</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializePartitionStatisticsFiles)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TableMetadata&gt;<sp/>metadata;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReadTableMetadata(</highlight><highlight class="stringliteral">&quot;TableMetadataPartitionStatisticsFiles.json&quot;</highlight><highlight class="normal">,<sp/>&amp;metadata));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>TableMetadata<sp/>expected{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.format_version<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.table_uuid<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;9c12d441-03fe-4693-9a96-a0705ddf69c1&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.location<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test/location&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_sequence_number<sp/>=<sp/>34,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_updated_ms<sp/>=<sp/>TimePointMsFromUnixMs(1602638573590).value(),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_column_id<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.schemas<sp/>=<sp/>{std::make_shared&lt;Schema&gt;(</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SchemaField&gt;{SchemaField(</highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>(),</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*optional=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">)},</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*schema_id=*/</highlight><highlight class="normal">0)},</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_schema_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.partition_specs<sp/>=<sp/>{<ref refid="classiceberg_1_1PartitionSpec_1a2955a97e29cf0637fa5275b031b198dc" kindref="member">PartitionSpec::Unpartitioned</ref>()},</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_spec_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.last_partition_id<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.properties<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.current_snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshots<sp/>=<sp/>{std::make_shared&lt;Snapshot&gt;(Snapshot{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sequence_number<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.timestamp_ms<sp/>=<sp/>TimePointMsFromUnixMs(1555100955770).value(),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.manifest_list<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://a/b/2.avro&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.summary<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;operation&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;append&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.schema_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>})},</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_log<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.metadata_log<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.sort_orders<sp/>=<sp/>{<ref refid="classiceberg_1_1SortOrder_1a5d0c769867b9244b1d48cd308659326f" kindref="member">SortOrder::Unsorted</ref>()},</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.default_sort_order_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.refs<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;SnapshotRef&gt;(</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SnapshotRef{.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.retention<sp/>=<sp/>SnapshotRef::Branch{}})}},</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.statistics<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.partition_statistics<sp/>=<sp/>{std::make_shared&lt;PartitionStatisticsFile&gt;(</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PartitionStatisticsFile{.snapshot_id<sp/>=<sp/>3055729675574597004,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;s3://a/b/partition-stats.parquet&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.file_size_in_bytes<sp/>=<sp/>43})},</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.next_row_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>ASSERT_EQ(*metadata,<sp/>expected);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeUnsupportedVersion)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>ReadTableMetadataExpectError(</highlight><highlight class="stringliteral">&quot;TableMetadataUnsupportedVersion.json&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>read<sp/>unsupported<sp/>version&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV1MissingSchemaType)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>ReadTableMetadataExpectError(</highlight><highlight class="stringliteral">&quot;TableMetadataV1MissingSchemaType.json&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Missing<sp/>&apos;type&apos;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV2CurrentSchemaNotFound)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>ReadTableMetadataExpectError(</highlight><highlight class="stringliteral">&quot;TableMetadataV2CurrentSchemaNotFound.json&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>schema<sp/>with<sp/>current-schema-id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV2MissingLastPartitionId)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>ReadTableMetadataExpectError(</highlight><highlight class="stringliteral">&quot;TableMetadataV2MissingLastPartitionId.json&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;last-partition-id<sp/>must<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV2MissingPartitionSpecs)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>ReadTableMetadataExpectError(</highlight><highlight class="stringliteral">&quot;TableMetadataV2MissingPartitionSpecs.json&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;partition-specs<sp/>must<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV2MissingSchemas)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>ReadTableMetadataExpectError(</highlight><highlight class="stringliteral">&quot;TableMetadataV2MissingSchemas.json&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;schemas<sp/>must<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">TEST(MetadataSerdeTest,<sp/>DeserializeV2MissingSortOrder)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>ReadTableMetadataExpectError(</highlight><highlight class="stringliteral">&quot;TableMetadataV2MissingSortOrder.json&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sort-orders<sp/>must<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>iceberg</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="iceberg/test/metadata_serde_test.cc"/>
  </compounddef>
</doxygen>
