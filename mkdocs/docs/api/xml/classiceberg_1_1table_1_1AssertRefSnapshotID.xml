<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1table_1_1AssertRefSnapshotID" kind="class" language="C++" prot="public">
    <compoundname>iceberg::table::AssertRefSnapshotID</compoundname>
    <basecompoundref refid="classiceberg_1_1TableRequirement" prot="public" virt="non-virtual">iceberg::TableRequirement</basecompoundref>
    <includes refid="table__requirement_8h" local="no">table_requirement.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiceberg_1_1table_1_1AssertRefSnapshotID_1a4abd329b858269123ef5edbe92f0b6e3" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string iceberg::table::AssertRefSnapshotID::ref_name_</definition>
        <argsstring></argsstring>
        <name>ref_name_</name>
        <qualifiedname>iceberg::table::AssertRefSnapshotID::ref_name_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="100" column="15" bodyfile="iceberg/table_requirement.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1table_1_1AssertRefSnapshotID_1a9e9c7ba3b910253344383290a2a85d7a" prot="private" static="no" mutable="no">
        <type>std::optional&lt; int64_t &gt;</type>
        <definition>std::optional&lt;int64_t&gt; iceberg::table::AssertRefSnapshotID::snapshot_id_</definition>
        <argsstring></argsstring>
        <name>snapshot_id_</name>
        <qualifiedname>iceberg::table::AssertRefSnapshotID::snapshot_id_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="101" column="17" bodyfile="iceberg/table_requirement.h" bodystart="101" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1table_1_1AssertRefSnapshotID_1a78f4b8648740b5784933340596deb076" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iceberg::table::AssertRefSnapshotID::AssertRefSnapshotID</definition>
        <argsstring>(std::string ref_name, std::optional&lt; int64_t &gt; snapshot_id)</argsstring>
        <name>AssertRefSnapshotID</name>
        <qualifiedname>iceberg::table::AssertRefSnapshotID::AssertRefSnapshotID</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>ref_name</declname>
        </param>
        <param>
          <type>std::optional&lt; int64_t &gt;</type>
          <declname>snapshot_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="90" column="3" bodyfile="iceberg/table_requirement.h" bodystart="90" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1table_1_1AssertRefSnapshotID_1ad15d1aa106fd0e347b1e6974350180c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; iceberg::table::AssertRefSnapshotID::ref_name</definition>
        <argsstring>() const</argsstring>
        <name>ref_name</name>
        <qualifiedname>iceberg::table::AssertRefSnapshotID::ref_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="93" column="21" bodyfile="iceberg/table_requirement.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1table_1_1AssertRefSnapshotID_1a26eefe631e3d774dc95413a0644977d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::optional&lt; int64_t &gt; &amp;</type>
        <definition>const std::optional&lt; int64_t &gt; &amp; iceberg::table::AssertRefSnapshotID::snapshot_id</definition>
        <argsstring>() const</argsstring>
        <name>snapshot_id</name>
        <qualifiedname>iceberg::table::AssertRefSnapshotID::snapshot_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="95" column="23" bodyfile="iceberg/table_requirement.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1table_1_1AssertRefSnapshotID_1a55299e43bc5a41ca0af1dbcba9e2d090" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Status</type>
        <definition>Status iceberg::table::AssertRefSnapshotID::Validate</definition>
        <argsstring>(const TableMetadata *base) const override</argsstring>
        <name>Validate</name>
        <qualifiedname>iceberg::table::AssertRefSnapshotID::Validate</qualifiedname>
        <reimplements refid="classiceberg_1_1TableRequirement_1ae122a03307e1dc67692d8e98b389fb15">Validate</reimplements>
        <param>
          <type>const <ref refid="structiceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Validate this requirement against table metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base table metadata to validate against (may be nullptr) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status indicating success or failure with error details </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="97" column="10" bodyfile="iceberg/table_requirement.cc" bodystart="47" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Requirement that a reference (branch or tag) points to a specific snapshot. </para>
    </briefdescription>
    <detaileddescription>
<para>This requirement validates that a named reference (branch or tag) either:<itemizedlist>
<listitem><para>Points to the expected snapshot ID</para>
</listitem><listitem><para>Does not exist (if snapshot_id is nullopt) </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>iceberg::TableRequirement</label>
        <link refid="classiceberg_1_1TableRequirement"/>
      </node>
      <node id="1">
        <label>iceberg::table::AssertRefSnapshotID</label>
        <link refid="classiceberg_1_1table_1_1AssertRefSnapshotID"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>iceberg::TableRequirement</label>
        <link refid="classiceberg_1_1TableRequirement"/>
      </node>
      <node id="1">
        <label>iceberg::table::AssertRefSnapshotID</label>
        <link refid="classiceberg_1_1table_1_1AssertRefSnapshotID"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="iceberg/table_requirement.h" line="88" column="1" bodyfile="iceberg/table_requirement.h" bodystart="88" bodyend="102"/>
    <listofallmembers>
      <member refid="classiceberg_1_1table_1_1AssertRefSnapshotID_1a78f4b8648740b5784933340596deb076" prot="public" virt="non-virtual"><scope>iceberg::table::AssertRefSnapshotID</scope><name>AssertRefSnapshotID</name></member>
      <member refid="classiceberg_1_1table_1_1AssertRefSnapshotID_1ad15d1aa106fd0e347b1e6974350180c5" prot="public" virt="non-virtual"><scope>iceberg::table::AssertRefSnapshotID</scope><name>ref_name</name></member>
      <member refid="classiceberg_1_1table_1_1AssertRefSnapshotID_1a4abd329b858269123ef5edbe92f0b6e3" prot="private" virt="non-virtual"><scope>iceberg::table::AssertRefSnapshotID</scope><name>ref_name_</name></member>
      <member refid="classiceberg_1_1table_1_1AssertRefSnapshotID_1a26eefe631e3d774dc95413a0644977d8" prot="public" virt="non-virtual"><scope>iceberg::table::AssertRefSnapshotID</scope><name>snapshot_id</name></member>
      <member refid="classiceberg_1_1table_1_1AssertRefSnapshotID_1a9e9c7ba3b910253344383290a2a85d7a" prot="private" virt="non-virtual"><scope>iceberg::table::AssertRefSnapshotID</scope><name>snapshot_id_</name></member>
      <member refid="classiceberg_1_1table_1_1AssertRefSnapshotID_1a55299e43bc5a41ca0af1dbcba9e2d090" prot="public" virt="virtual"><scope>iceberg::table::AssertRefSnapshotID</scope><name>Validate</name></member>
      <member refid="classiceberg_1_1TableRequirement_1a91a754d5e846ec2607aec5bf09896270" prot="public" virt="virtual"><scope>iceberg::table::AssertRefSnapshotID</scope><name>~TableRequirement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
