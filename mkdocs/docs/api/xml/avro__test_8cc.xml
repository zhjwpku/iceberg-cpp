<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="avro__test_8cc" kind="file" language="C++">
    <compoundname>avro_test.cc</compoundname>
    <includes local="no">arrow/array/array_base.h</includes>
    <includes local="no">arrow/c/bridge.h</includes>
    <includes local="no">arrow/filesystem/localfs.h</includes>
    <includes local="no">arrow/io/file.h</includes>
    <includes local="no">arrow/json/from_string.h</includes>
    <includes local="no">avro/Compiler.hh</includes>
    <includes local="no">avro/DataFile.hh</includes>
    <includes local="no">avro/Generic.hh</includes>
    <includes local="no">avro/GenericDatum.hh</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="arrow__fs__file__io__internal_8h" local="yes">iceberg/arrow/arrow_fs_file_io_internal.h</includes>
    <includes refid="avro__register_8h" local="yes">iceberg/avro/avro_register.h</includes>
    <includes refid="avro__writer_8h" local="yes">iceberg/avro/avro_writer.h</includes>
    <includes refid="file__reader_8h" local="yes">iceberg/file_reader.h</includes>
    <includes refid="schema_8h" local="yes">iceberg/schema.h</includes>
    <includes refid="schema__internal_8h" local="yes">iceberg/schema_internal.h</includes>
    <includes refid="matchers_8h" local="yes">iceberg/test/matchers.h</includes>
    <includes refid="temp__file__test__base_8h" local="yes">iceberg/test/temp_file_test_base.h</includes>
    <includes refid="type_8h" local="yes">iceberg/type.h</includes>
    <incdepgraph>
      <node id="12">
        <label>iceberg/arrow/arrow_fs_file_io_internal.h</label>
        <link refid="arrow__fs__file__io__internal_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>iceberg/arrow_c_data.h</label>
        <link refid="arrow__c__data_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>iceberg/avro/avro_register.h</label>
        <link refid="avro__register_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>iceberg/avro/avro_writer.h</label>
        <link refid="avro__writer_8h_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>iceberg/expression/literal.h</label>
        <link refid="literal_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>iceberg/file_format.h</label>
        <link refid="file__format_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iceberg/file_io.h</label>
        <link refid="file__io_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>iceberg/file_reader.h</label>
        <link refid="file__reader_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>iceberg/file_writer.h</label>
        <link refid="file__writer_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>iceberg/iceberg_bundle_export.h</label>
        <link refid="iceberg__bundle__export_8h_source"/>
      </node>
      <node id="19">
        <label>iceberg/iceberg_export.h</label>
        <link refid="iceberg__export_8h_source"/>
      </node>
      <node id="35">
        <label>iceberg/metrics.h</label>
        <link refid="metrics_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>iceberg/result.h</label>
        <link refid="result_8h_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>iceberg/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>iceberg/schema_field.h</label>
        <link refid="schema__field_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>iceberg/schema_internal.h</label>
        <link refid="schema__internal_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg/test/avro_test.cc</label>
        <link refid="avro__test_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>iceberg/test/matchers.h</label>
        <link refid="matchers_8h_source"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>iceberg/test/temp_file_test_base.h</label>
        <link refid="temp__file__test__base_8h_source"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>iceberg/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iceberg/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
      </node>
      <node id="52">
        <label>iceberg/util/decimal.h</label>
        <link refid="decimal_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>iceberg/util/formattable.h</label>
        <link refid="formattable_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>iceberg/util/int128.h</label>
        <link refid="int128_8h"/>
      </node>
      <node id="47">
        <label>iceberg/util/lazy.h</label>
        <link refid="lazy_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>iceberg/util/macros.h</label>
        <link refid="macros_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>iceberg/util/string_util.h</label>
        <link refid="string__util_8h_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>iceberg/util/uuid.h</label>
        <link refid="uuid_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>algorithm</label>
      </node>
      <node id="42">
        <label>array</label>
      </node>
      <node id="2">
        <label>arrow/array/array_base.h</label>
      </node>
      <node id="3">
        <label>arrow/c/bridge.h</label>
      </node>
      <node id="14">
        <label>arrow/filesystem/filesystem.h</label>
      </node>
      <node id="4">
        <label>arrow/filesystem/localfs.h</label>
      </node>
      <node id="5">
        <label>arrow/io/file.h</label>
      </node>
      <node id="6">
        <label>arrow/json/from_string.h</label>
      </node>
      <node id="7">
        <label>avro/Compiler.hh</label>
      </node>
      <node id="8">
        <label>avro/DataFile.hh</label>
      </node>
      <node id="9">
        <label>avro/Generic.hh</label>
      </node>
      <node id="10">
        <label>avro/GenericDatum.hh</label>
      </node>
      <node id="51">
        <label>cassert</label>
      </node>
      <node id="38">
        <label>compare</label>
      </node>
      <node id="48">
        <label>concepts</label>
      </node>
      <node id="29">
        <label>cstdint</label>
      </node>
      <node id="21">
        <label>expected</label>
      </node>
      <node id="65">
        <label>filesystem</label>
      </node>
      <node id="22">
        <label>format</label>
      </node>
      <node id="66">
        <label>fstream</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="63">
        <label>gmock/gmock.h</label>
      </node>
      <node id="11">
        <label>gtest/gtest.h</label>
      </node>
      <node id="53">
        <label>iosfwd</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="49">
        <label>mutex</label>
      </node>
      <node id="61">
        <label>nanoarrow/nanoarrow.h</label>
      </node>
      <node id="16">
        <label>optional</label>
      </node>
      <node id="67">
        <label>random</label>
      </node>
      <node id="34">
        <label>ranges</label>
      </node>
      <node id="43">
        <label>span</label>
      </node>
      <node id="17">
        <label>string</label>
      </node>
      <node id="18">
        <label>string_view</label>
      </node>
      <node id="54">
        <label>type_traits</label>
      </node>
      <node id="36">
        <label>unordered_map</label>
      </node>
      <node id="59">
        <label>unordered_set</label>
      </node>
      <node id="31">
        <label>utility</label>
      </node>
      <node id="39">
        <label>variant</label>
      </node>
      <node id="40">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classiceberg_1_1avro_1_1AvroReaderTest" prot="public">iceberg::avro::AvroReaderTest</innerclass>
    <innernamespace refid="namespaceiceberg">iceberg</innernamespace>
    <innernamespace refid="namespaceiceberg_1_1avro">iceberg::avro</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/array/array_base.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/c/bridge.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/filesystem/localfs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/io/file.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/json/from_string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/Compiler.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/DataFile.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/Generic.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avro/GenericDatum.hh&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/arrow/arrow_fs_file_io_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="avro__register_8h" kindref="compound">iceberg/avro/avro_register.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/avro/avro_writer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="file__reader_8h" kindref="compound">iceberg/file_reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">iceberg/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/schema_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/matchers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/temp_file_test_base.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">iceberg/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">iceberg::avro<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classiceberg_1_1avro_1_1AvroReaderTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classiceberg_1_1avro_1_1AvroReaderTest" kindref="compound">AvroReaderTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classiceberg_1_1TempFileTestBase" kindref="compound">TempFileTestBase</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUpTestSuite()<sp/>{<sp/>RegisterAll();<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUp()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>TempFileTestBase::SetUp();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>local_fs_<sp/>=<sp/>std::make_shared&lt;::arrow::fs::LocalFileSystem&gt;();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>file_io_<sp/>=<sp/>std::make_shared&lt;iceberg::arrow::ArrowFileSystemFileIO&gt;(local_fs_);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_avro_file_<sp/>=<sp/><ref refid="classiceberg_1_1TempFileTestBase_1a79c5ec372d23b44b3b25f90faadafcdf" kindref="member">CreateNewTempFilePathWithSuffix</ref>(</highlight><highlight class="stringliteral">&quot;.avro&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateSimpleAvroFile()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>avro_schema_json<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;({</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;type&quot;:<sp/>&quot;record&quot;,</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;TestRecord&quot;,</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;fields&quot;:<sp/>[</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;id&quot;,<sp/>&quot;type&quot;:<sp/>&quot;int&quot;,<sp/>&quot;field-id&quot;:<sp/>1},</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;:<sp/>&quot;name&quot;,<sp/>&quot;type&quot;:<sp/>[&quot;null&quot;,<sp/>&quot;string&quot;],<sp/>&quot;field-id&quot;:<sp/>2}</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>})&quot;;</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>avro_schema<sp/>=<sp/>::avro::compileJsonSchemaFromString(avro_schema_json);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::tuple&lt;int32_t,<sp/>std::string&gt;&gt;<sp/>test_data<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1,<sp/></highlight><highlight class="stringliteral">&quot;Alice&quot;</highlight><highlight class="normal">},<sp/>{2,<sp/></highlight><highlight class="stringliteral">&quot;Bob&quot;</highlight><highlight class="normal">},<sp/>{3,<sp/></highlight><highlight class="stringliteral">&quot;Charlie&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>::avro::DataFileWriter&lt;::avro::GenericDatum&gt;<sp/>writer(temp_avro_file_.c_str(),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avro_schema);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>name]<sp/>:<sp/>test_data)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::avro::GenericDatum<sp/>datum(avro_schema.root());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>record<sp/>=<sp/>datum.value&lt;::avro::GenericRecord&gt;();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record.fieldAt(0).value&lt;int32_t&gt;()<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record.fieldAt(1).selectBranch(1);<sp/><sp/></highlight><highlight class="comment">//<sp/>non-null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record.fieldAt(1).value&lt;std::string&gt;()<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writer.write(datum);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>writer.close();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VerifyNextBatch(<ref refid="classiceberg_1_1Reader" kindref="compound">Reader</ref>&amp;<sp/>reader,<sp/>std::string_view<sp/>expected_json)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Boilerplate<sp/>to<sp/>get<sp/>Arrow<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema_result<sp/>=<sp/>reader.Schema();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(schema_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_c_schema<sp/>=<sp/>std::move(schema_result.value());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>import_schema_result<sp/>=<sp/>::arrow::ImportType(&amp;arrow_c_schema);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>import_schema_result.ValueOrDie();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Boilerplate<sp/>to<sp/>get<sp/>Arrow<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>reader.Next();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(data,<sp/>IsOk());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(data.value().has_value());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_c_array<sp/>=<sp/>data.value().value();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data_result<sp/>=<sp/>::arrow::ImportArray(&amp;arrow_c_array,<sp/>arrow_schema);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_array<sp/>=<sp/>data_result.ValueOrDie();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>expected_array<sp/>=</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::arrow::json::ArrayFromJSONString(arrow_schema,<sp/>expected_json).ValueOrDie();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(arrow_array-&gt;Equals(*expected_array));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VerifyExhausted(<ref refid="classiceberg_1_1Reader" kindref="compound">Reader</ref>&amp;<sp/>reader)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>reader.Next();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(data,<sp/>IsOk());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(data.value().has_value());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WriteAndVerify(std::shared_ptr&lt;Schema&gt;<sp/>schema,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>expected_string)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structArrowSchema" kindref="compound">ArrowSchema</ref><sp/>arrow_c_schema;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(ToArrowSchema(*schema,<sp/>&amp;arrow_c_schema),<sp/>IsOk());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema_result<sp/>=<sp/>::arrow::ImportType(&amp;arrow_c_schema);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(arrow_schema_result.ok());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_schema<sp/>=<sp/>arrow_schema_result.ValueOrDie();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>array_result<sp/>=<sp/>::arrow::json::ArrayFromJSONString(arrow_schema,<sp/>expected_string);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(array_result.ok());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>array<sp/>=<sp/>array_result.ValueOrDie();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structArrowArray" kindref="compound">ArrowArray</ref><sp/>arrow_array;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>export_result<sp/>=<sp/>::arrow::ExportArray(*array,<sp/>&amp;arrow_array);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(export_result.ok());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>writer_result<sp/>=<sp/><ref refid="structiceberg_1_1WriterFactoryRegistry_1afeb69e5f68d62d46d47428cd9730a546" kindref="member">WriterFactoryRegistry::Open</ref>(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileFormatType::kAvro,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.path<sp/>=<sp/>temp_avro_file_,<sp/>.schema<sp/>=<sp/>schema,<sp/>.io<sp/>=<sp/>file_io_});</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(writer_result.has_value());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>writer<sp/>=<sp/>std::move(writer_result.value());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(writer-&gt;Write(&amp;arrow_array),<sp/>IsOk());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(writer-&gt;Close(),<sp/>IsOk());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file_info_result<sp/>=<sp/>local_fs_-&gt;GetFileInfo(temp_avro_file_);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(file_info_result.ok());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(file_info_result-&gt;size(),<sp/>writer-&gt;length().value());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader_result<sp/>=<sp/><ref refid="structiceberg_1_1ReaderFactoryRegistry_1a04318c64c78edaedda61a63652c5f4b3" kindref="member">ReaderFactoryRegistry::Open</ref>(FileFormatType::kAvro,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.path<sp/>=<sp/>temp_avro_file_,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.length<sp/>=<sp/>file_info_result-&gt;size(),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.io<sp/>=<sp/>file_io_,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.projection<sp/>=<sp/>schema});</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_THAT(reader_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader<sp/>=<sp/>std::move(reader_result.value());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyNextBatch(*reader,<sp/>expected_string));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyExhausted(*reader));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;::arrow::fs::LocalFileSystem&gt;<sp/>local_fs_;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;FileIO&gt;<sp/>file_io_;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>std::string<sp/>temp_avro_file_;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">TEST_F(<ref refid="classiceberg_1_1avro_1_1AvroReaderTest" kindref="compound">AvroReaderTest</ref>,<sp/>ReadTwoFields)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>CreateSimpleAvroFile();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;IntType&gt;()),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;StringType&gt;())});</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader_result<sp/>=<sp/><ref refid="structiceberg_1_1ReaderFactoryRegistry_1a04318c64c78edaedda61a63652c5f4b3" kindref="member">ReaderFactoryRegistry::Open</ref>(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FileFormatType::kAvro,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{.path<sp/>=<sp/>temp_avro_file_,<sp/>.io<sp/>=<sp/>file_io_,<sp/>.projection<sp/>=<sp/>schema});</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>ASSERT_THAT(reader_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader<sp/>=<sp/>std::move(reader_result.value());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VerifyNextBatch(*reader,<sp/>R</highlight><highlight class="stringliteral">&quot;([[1,<sp/>&quot;Alice&quot;],<sp/>[2,<sp/>&quot;Bob&quot;],<sp/>[3,<sp/>&quot;Charlie&quot;]])&quot;));</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyExhausted(*reader));</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral">TEST_F(AvroReaderTest,<sp/>ReadReorderedFieldsWithNulls)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/>CreateSimpleAvroFile();</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(2,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;StringType&gt;()),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;IntType&gt;()),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;score&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;DoubleType&gt;())});</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader_result<sp/>=<sp/><ref refid="structiceberg_1_1ReaderFactoryRegistry_1a04318c64c78edaedda61a63652c5f4b3" kindref="member">ReaderFactoryRegistry::Open</ref>(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FileFormatType::kAvro,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{.path<sp/>=<sp/>temp_avro_file_,<sp/>.io<sp/>=<sp/>file_io_,<sp/>.projection<sp/>=<sp/>schema});</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>ASSERT_THAT(reader_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader<sp/>=<sp/>std::move(reader_result.value());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyNextBatch(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*reader,<sp/>R</highlight><highlight class="stringliteral">&quot;([[&quot;Alice&quot;,<sp/>1,<sp/>null],<sp/>[&quot;Bob&quot;,<sp/>2,<sp/>null],<sp/>[&quot;Charlie&quot;,<sp/>3,<sp/>null]])&quot;));</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyExhausted(*reader));</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral">TEST_F(AvroReaderTest,<sp/>ReadWithBatchSize)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/>CreateSimpleAvroFile();</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;IntType&gt;())});</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader_result<sp/>=<sp/><ref refid="structiceberg_1_1ReaderFactoryRegistry_1a04318c64c78edaedda61a63652c5f4b3" kindref="member">ReaderFactoryRegistry::Open</ref>(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FileFormatType::kAvro,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{.path<sp/>=<sp/>temp_avro_file_,<sp/>.batch_size<sp/>=<sp/>2,<sp/>.io<sp/>=<sp/>file_io_,<sp/>.projection<sp/>=<sp/>schema});</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>ASSERT_THAT(reader_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reader<sp/>=<sp/>std::move(reader_result.value());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyNextBatch(*reader,<sp/>R</highlight><highlight class="stringliteral">&quot;([[1],<sp/>[2]])&quot;));</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyNextBatch(*reader,<sp/>R</highlight><highlight class="stringliteral">&quot;([[3]])&quot;));</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(VerifyExhausted(*reader));</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral">TEST_F(AvroReaderTest,<sp/>AvroWriterBasicType)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>std::make_shared&lt;iceberg::Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;StringType&gt;())});</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>std::string<sp/>expected_string<sp/>=<sp/>R</highlight><highlight class="stringliteral">&quot;([[&quot;Hello&quot;],<sp/>[&quot;世界&quot;],<sp/>[&quot;nanoarrow&quot;]])&quot;;</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/>WriteAndVerify(schema,<sp/>expected_string);</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral">TEST_F(AvroReaderTest,<sp/>AvroWriterNestedType)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>std::make_shared&lt;iceberg::Schema&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;IntType&gt;()),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;iceberg::StructType&gt;(std::vector&lt;SchemaField&gt;{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(3,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;StringType&gt;()),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(4,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;IntType&gt;())}))});</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>std::string<sp/>expected_string<sp/>=</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight><highlight class="stringliteral">&quot;([[1,<sp/>[&quot;Alice&quot;,<sp/>25]],<sp/>[2,<sp/>[&quot;Bob&quot;,<sp/>30]],<sp/>[3,<sp/>[&quot;Ivy&quot;,<sp/>35]]])&quot;;</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/>WriteAndVerify(schema,<sp/>expected_string);</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>iceberg::avro</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="iceberg/test/avro_test.cc"/>
  </compounddef>
</doxygen>
