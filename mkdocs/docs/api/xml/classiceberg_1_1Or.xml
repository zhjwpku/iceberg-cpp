<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1Or" kind="class" language="C++" prot="public">
    <compoundname>iceberg::Or</compoundname>
    <basecompoundref refid="classiceberg_1_1Expression" prot="public" virt="non-virtual">iceberg::Expression</basecompoundref>
    <includes refid="expression_8h" local="no">expression.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiceberg_1_1Or_1aa5d2bc2ed892970d826f6cae6443f4dc" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Expression&gt; iceberg::Or::left_</definition>
        <argsstring></argsstring>
        <name>left_</name>
        <qualifiedname>iceberg::Or::left_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="193" column="19" bodyfile="iceberg/expression/expression.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1Or_1a1e3be4db867ae5a25bd7365cd9f29636" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Expression&gt; iceberg::Or::right_</definition>
        <argsstring></argsstring>
        <name>right_</name>
        <qualifiedname>iceberg::Or::right_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="194" column="19" bodyfile="iceberg/expression/expression.h" bodystart="194" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1Or_1ae7916481332a8c1503ac721f6a8d5055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iceberg::Or::Or</definition>
        <argsstring>(std::shared_ptr&lt; Expression &gt; left, std::shared_ptr&lt; Expression &gt; right)</argsstring>
        <name>Or</name>
        <qualifiedname>iceberg::Or::Or</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Constructs an <ref refid="classiceberg_1_1Or" kindref="compound">Or</ref> expression from two sub-expressions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left operand of the OR expression </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right operand of the OR expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="172" column="3" bodyfile="iceberg/expression/expression.cc" bodystart="72" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1Or_1aea4974db35531900b500664be4999110" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; Expression &gt; &amp; iceberg::Or::left</definition>
        <argsstring>() const</argsstring>
        <name>left</name>
        <qualifiedname>iceberg::Or::left</qualifiedname>
        <briefdescription>
<para>Returns the left operand of the OR expression. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The left operand of the OR expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="177" column="25" bodyfile="iceberg/expression/expression.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1Or_1afcbad43bce2966407a3a3783ddcb92c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; Expression &gt; &amp; iceberg::Or::right</definition>
        <argsstring>() const</argsstring>
        <name>right</name>
        <qualifiedname>iceberg::Or::right</qualifiedname>
        <briefdescription>
<para>Returns the right operand of the OR expression. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The right operand of the OR expression </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="182" column="25" bodyfile="iceberg/expression/expression.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1Or_1afe9e736e8ba2e8b5748941f2b349fc6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classiceberg_1_1Expression_1a433076bdc34ce0b6d359313c6c7b8a9c" kindref="member">Operation</ref></type>
        <definition>Operation iceberg::Or::op</definition>
        <argsstring>() const override</argsstring>
        <name>op</name>
        <qualifiedname>iceberg::Or::op</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a5a16ee5d023305b50e4a2216b4047eff">op</reimplements>
        <briefdescription>
<para>Returns the operation for an expression node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="184" column="13" bodyfile="iceberg/expression/expression.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1Or_1aec794d22f9863e170a65d9a1b89c9655" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string iceberg::Or::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <qualifiedname>iceberg::Or::ToString</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a2e9c204f698d069ebc0fefb9e5269ab6">ToString</reimplements>
        <briefdescription>
<para>Get a user-readable string representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="186" column="15" bodyfile="iceberg/expression/expression.cc" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1Or_1ab102b67d93ba34588fa0f0b77ea9243f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Result&lt; std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt; &gt;</type>
        <definition>Result&lt; std::shared_ptr&lt; Expression &gt; &gt; iceberg::Or::Negate</definition>
        <argsstring>() const override</argsstring>
        <name>Negate</name>
        <qualifiedname>iceberg::Or::Negate</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a7ce9433b8cc063b06ac6371d6d56815c">Negate</reimplements>
        <briefdescription>
<para>Returns the negation of this expression, equivalent to not(this). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="188" column="10" bodyfile="iceberg/expression/expression.cc" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1Or_1acbd078a10cd61ba2d76788b42966b197" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool iceberg::Or::Equals</definition>
        <argsstring>(const Expression &amp;other) const override</argsstring>
        <name>Equals</name>
        <qualifiedname>iceberg::Or::Equals</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a5f62190ba4e74757afb0fba05acb1e6a">Equals</reimplements>
        <param>
          <type>const <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns whether this expression will accept the same values as another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>another expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the expressions are equivalent </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="190" column="8" bodyfile="iceberg/expression/expression.cc" bodystart="86" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> that represents a logical OR operation between two expressions. </para>
    </briefdescription>
    <detaileddescription>
<para>This expression evaluates to true if at least one of its child expressions evaluates to true. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>iceberg::Expression</label>
        <link refid="classiceberg_1_1Expression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg::Or</label>
        <link refid="classiceberg_1_1Or"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>iceberg::util::Formattable</label>
        <link refid="classiceberg_1_1util_1_1Formattable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>iceberg::Expression</label>
        <link refid="classiceberg_1_1Expression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg::Or</label>
        <link refid="classiceberg_1_1Or"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>iceberg::util::Formattable</label>
        <link refid="classiceberg_1_1util_1_1Formattable"/>
      </node>
    </collaborationgraph>
    <location file="iceberg/expression/expression.h" line="166" column="1" bodyfile="iceberg/expression/expression.h" bodystart="166" bodyend="195"/>
    <listofallmembers>
      <member refid="classiceberg_1_1Or_1acbd078a10cd61ba2d76788b42966b197" prot="public" virt="virtual"><scope>iceberg::Or</scope><name>Equals</name></member>
      <member refid="classiceberg_1_1Or_1aea4974db35531900b500664be4999110" prot="public" virt="non-virtual"><scope>iceberg::Or</scope><name>left</name></member>
      <member refid="classiceberg_1_1Or_1aa5d2bc2ed892970d826f6cae6443f4dc" prot="private" virt="non-virtual"><scope>iceberg::Or</scope><name>left_</name></member>
      <member refid="classiceberg_1_1Or_1ab102b67d93ba34588fa0f0b77ea9243f" prot="public" virt="virtual"><scope>iceberg::Or</scope><name>Negate</name></member>
      <member refid="classiceberg_1_1Or_1afe9e736e8ba2e8b5748941f2b349fc6d" prot="public" virt="virtual"><scope>iceberg::Or</scope><name>op</name></member>
      <member refid="classiceberg_1_1Expression_1a433076bdc34ce0b6d359313c6c7b8a9c" prot="public" virt="non-virtual"><scope>iceberg::Or</scope><name>Operation</name></member>
      <member refid="classiceberg_1_1Or_1ae7916481332a8c1503ac721f6a8d5055" prot="public" virt="non-virtual"><scope>iceberg::Or</scope><name>Or</name></member>
      <member refid="classiceberg_1_1Or_1afcbad43bce2966407a3a3783ddcb92c5" prot="public" virt="non-virtual"><scope>iceberg::Or</scope><name>right</name></member>
      <member refid="classiceberg_1_1Or_1a1e3be4db867ae5a25bd7365cd9f29636" prot="private" virt="non-virtual"><scope>iceberg::Or</scope><name>right_</name></member>
      <member refid="classiceberg_1_1Or_1aec794d22f9863e170a65d9a1b89c9655" prot="public" virt="virtual"><scope>iceberg::Or</scope><name>ToString</name></member>
      <member refid="classiceberg_1_1Expression_1a7529a7fa43b6a6ff1cd09eac4359f1ca" prot="public" virt="virtual"><scope>iceberg::Or</scope><name>~Expression</name></member>
      <member refid="classiceberg_1_1util_1_1Formattable_1acfe29264450018bab0ceab0828cf46f9" prot="public" virt="virtual"><scope>iceberg::Or</scope><name>~Formattable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
