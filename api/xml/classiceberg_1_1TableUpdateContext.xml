<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1TableUpdateContext" kind="class" language="C++" prot="public">
    <compoundname>iceberg::TableUpdateContext</compoundname>
    <includes refid="table__requirements_8h" local="no">table_requirements.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiceberg_1_1TableUpdateContext_1adfe7ef6dc085cc64508f1ea6c1eb68b4" prot="private" static="no" mutable="no">
        <type>const <ref refid="structiceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref> *</type>
        <definition>const TableMetadata* iceberg::TableUpdateContext::base_</definition>
        <argsstring></argsstring>
        <name>base_</name>
        <qualifiedname>iceberg::TableUpdateContext::base_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="72" column="23" bodyfile="iceberg/table_requirements.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TableUpdateContext_1a252a06bb9d07bd0018722191c3a3b220" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool iceberg::TableUpdateContext::is_replace_</definition>
        <argsstring></argsstring>
        <name>is_replace_</name>
        <qualifiedname>iceberg::TableUpdateContext::is_replace_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="73" column="14" bodyfile="iceberg/table_requirements.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TableUpdateContext_1a2ada633219d4ede767526eeb0899a3b5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classiceberg_1_1TableRequirement" kindref="compound">TableRequirement</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;TableRequirement&gt; &gt; iceberg::TableUpdateContext::requirements_</definition>
        <argsstring></argsstring>
        <name>requirements_</name>
        <qualifiedname>iceberg::TableUpdateContext::requirements_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="75" column="15" bodyfile="iceberg/table_requirements.h" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1a4e5fc09d6eb180ae69b59fc560fa22a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iceberg::TableUpdateContext::TableUpdateContext</definition>
        <argsstring>(const TableMetadata *base, bool is_replace)</argsstring>
        <name>TableUpdateContext</name>
        <qualifiedname>iceberg::TableUpdateContext::TableUpdateContext</qualifiedname>
        <param>
          <type>const <ref refid="structiceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_replace</declname>
        </param>
        <briefdescription>
<para>Construct a context for requirement generation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base table metadata (maybe nullptr for table creation) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_replace</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this is a replace operation (more permissive) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="49" column="3" bodyfile="iceberg/table_requirements.h" bodystart="49" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1afe12076b9704bd28dc14d1c4c7983481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iceberg::TableUpdateContext::TableUpdateContext</definition>
        <argsstring>(const TableUpdateContext &amp;)=delete</argsstring>
        <name>TableUpdateContext</name>
        <qualifiedname>iceberg::TableUpdateContext::TableUpdateContext</qualifiedname>
        <param>
          <type>const <ref refid="classiceberg_1_1TableUpdateContext" kindref="compound">TableUpdateContext</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="53" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1ad2497205f83a3634a49ea46d86cc1242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableUpdateContext" kindref="compound">TableUpdateContext</ref> &amp;</type>
        <definition>TableUpdateContext &amp; iceberg::TableUpdateContext::operator=</definition>
        <argsstring>(const TableUpdateContext &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>iceberg::TableUpdateContext::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classiceberg_1_1TableUpdateContext" kindref="compound">TableUpdateContext</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="54" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1a38064dea13bcb5a0407a8a0321b6cfae" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>iceberg::TableUpdateContext::TableUpdateContext</definition>
        <argsstring>(TableUpdateContext &amp;&amp;) noexcept=default</argsstring>
        <name>TableUpdateContext</name>
        <qualifiedname>iceberg::TableUpdateContext::TableUpdateContext</qualifiedname>
        <param>
          <type><ref refid="classiceberg_1_1TableUpdateContext" kindref="compound">TableUpdateContext</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="57" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1ac7262ec670474b9f76c80697b1152254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void iceberg::TableUpdateContext::AddRequirement</definition>
        <argsstring>(std::unique_ptr&lt; TableRequirement &gt; requirement)</argsstring>
        <name>AddRequirement</name>
        <qualifiedname>iceberg::TableUpdateContext::AddRequirement</qualifiedname>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classiceberg_1_1TableRequirement" kindref="compound">TableRequirement</ref> &gt;</type>
          <declname>requirement</declname>
        </param>
        <briefdescription>
<para>Add a requirement to the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="60" column="8" bodyfile="iceberg/table_requirements.cc" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1ac9ce6af878c98278aa07a5f717787819" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structiceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref> *</type>
        <definition>const TableMetadata * iceberg::TableUpdateContext::base</definition>
        <argsstring>() const</argsstring>
        <name>base</name>
        <qualifiedname>iceberg::TableUpdateContext::base</qualifiedname>
        <briefdescription>
<para>Get the base table metadata. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="63" column="23" bodyfile="iceberg/table_requirements.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1a827a358a71924bca13c591e7f15e4aaf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool iceberg::TableUpdateContext::is_replace</definition>
        <argsstring>() const</argsstring>
        <name>is_replace</name>
        <qualifiedname>iceberg::TableUpdateContext::is_replace</qualifiedname>
        <briefdescription>
<para>Check if this is a replace operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="66" column="8" bodyfile="iceberg/table_requirements.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableUpdateContext_1acd97d5656c2eed82d153e8140debe14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Result&lt; std::vector&lt; std::unique_ptr&lt; <ref refid="classiceberg_1_1TableRequirement" kindref="compound">TableRequirement</ref> &gt; &gt; &gt;</type>
        <definition>Result&lt; std::vector&lt; std::unique_ptr&lt; TableRequirement &gt; &gt; &gt; iceberg::TableUpdateContext::Build</definition>
        <argsstring>()</argsstring>
        <name>Build</name>
        <qualifiedname>iceberg::TableUpdateContext::Build</qualifiedname>
        <briefdescription>
<para>Build and return the list of requirements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirements.h" line="69" column="10" bodyfile="iceberg/table_requirements.cc" bodystart="32" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Context for generating table requirements. </para>
    </briefdescription>
    <detaileddescription>
<para>This context is passed to each <ref refid="classiceberg_1_1TableUpdate" kindref="compound">TableUpdate</ref>&apos;s GenerateRequirements method and maintains state about what requirements have already been added to avoid duplicates. </para>
    </detaileddescription>
    <location file="iceberg/table_requirements.h" line="43" column="1" bodyfile="iceberg/table_requirements.h" bodystart="43" bodyend="76"/>
    <listofallmembers>
      <member refid="classiceberg_1_1TableUpdateContext_1ac7262ec670474b9f76c80697b1152254" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>AddRequirement</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1ac9ce6af878c98278aa07a5f717787819" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>base</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1adfe7ef6dc085cc64508f1ea6c1eb68b4" prot="private" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>base_</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1acd97d5656c2eed82d153e8140debe14a" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>Build</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1a827a358a71924bca13c591e7f15e4aaf" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>is_replace</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1a252a06bb9d07bd0018722191c3a3b220" prot="private" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>is_replace_</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1ad2497205f83a3634a49ea46d86cc1242" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>operator=</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1a2ada633219d4ede767526eeb0899a3b5" prot="private" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>requirements_</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1a4e5fc09d6eb180ae69b59fc560fa22a9" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>TableUpdateContext</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1afe12076b9704bd28dc14d1c4c7983481" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>TableUpdateContext</name></member>
      <member refid="classiceberg_1_1TableUpdateContext_1a38064dea13bcb5a0407a8a0321b6cfae" prot="public" virt="non-virtual"><scope>iceberg::TableUpdateContext</scope><name>TableUpdateContext</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
