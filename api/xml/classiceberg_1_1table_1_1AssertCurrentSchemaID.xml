<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1table_1_1AssertCurrentSchemaID" kind="class" language="C++" prot="public">
    <compoundname>iceberg::table::AssertCurrentSchemaID</compoundname>
    <basecompoundref refid="classiceberg_1_1TableRequirement" prot="public" virt="non-virtual">iceberg::TableRequirement</basecompoundref>
    <includes refid="table__requirement_8h" local="no">table_requirement.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiceberg_1_1table_1_1AssertCurrentSchemaID_1a32974a24815e6a01508612aeea6a6909" prot="private" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t iceberg::table::AssertCurrentSchemaID::schema_id_</definition>
        <argsstring></argsstring>
        <name>schema_id_</name>
        <qualifiedname>iceberg::table::AssertCurrentSchemaID::schema_id_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="134" column="11" bodyfile="iceberg/table_requirement.h" bodystart="134" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1table_1_1AssertCurrentSchemaID_1a440539f69cc48e0ec1bc561d7f81a72b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iceberg::table::AssertCurrentSchemaID::AssertCurrentSchemaID</definition>
        <argsstring>(int32_t schema_id)</argsstring>
        <name>AssertCurrentSchemaID</name>
        <qualifiedname>iceberg::table::AssertCurrentSchemaID::AssertCurrentSchemaID</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>schema_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="127" column="12" bodyfile="iceberg/table_requirement.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1table_1_1AssertCurrentSchemaID_1a9092970d22e043684de328116b949403" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t iceberg::table::AssertCurrentSchemaID::schema_id</definition>
        <argsstring>() const</argsstring>
        <name>schema_id</name>
        <qualifiedname>iceberg::table::AssertCurrentSchemaID::schema_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="129" column="11" bodyfile="iceberg/table_requirement.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1table_1_1AssertCurrentSchemaID_1aa7fd0eb9539d1e55ddc68c0f2b4ee3b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Status</type>
        <definition>Status iceberg::table::AssertCurrentSchemaID::Validate</definition>
        <argsstring>(const TableMetadata *base) const override</argsstring>
        <name>Validate</name>
        <qualifiedname>iceberg::table::AssertCurrentSchemaID::Validate</qualifiedname>
        <reimplements refid="classiceberg_1_1TableRequirement_1ae122a03307e1dc67692d8e98b389fb15">Validate</reimplements>
        <param>
          <type>const <ref refid="structiceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Validate this requirement against table metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base table metadata to validate against (may be nullptr) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status indicating success or failure with error details </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_requirement.h" line="131" column="10" bodyfile="iceberg/table_requirement.cc" bodystart="56" bodyend="58"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Requirement that the current schema ID matches. </para>
    </briefdescription>
    <detaileddescription>
<para>This ensures the active schema hasn&apos;t changed since the metadata was read. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>iceberg::TableRequirement</label>
        <link refid="classiceberg_1_1TableRequirement"/>
      </node>
      <node id="1">
        <label>iceberg::table::AssertCurrentSchemaID</label>
        <link refid="classiceberg_1_1table_1_1AssertCurrentSchemaID"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>iceberg::TableRequirement</label>
        <link refid="classiceberg_1_1TableRequirement"/>
      </node>
      <node id="1">
        <label>iceberg::table::AssertCurrentSchemaID</label>
        <link refid="classiceberg_1_1table_1_1AssertCurrentSchemaID"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="iceberg/table_requirement.h" line="125" column="1" bodyfile="iceberg/table_requirement.h" bodystart="125" bodyend="135"/>
    <listofallmembers>
      <member refid="classiceberg_1_1table_1_1AssertCurrentSchemaID_1a440539f69cc48e0ec1bc561d7f81a72b" prot="public" virt="non-virtual"><scope>iceberg::table::AssertCurrentSchemaID</scope><name>AssertCurrentSchemaID</name></member>
      <member refid="classiceberg_1_1table_1_1AssertCurrentSchemaID_1a9092970d22e043684de328116b949403" prot="public" virt="non-virtual"><scope>iceberg::table::AssertCurrentSchemaID</scope><name>schema_id</name></member>
      <member refid="classiceberg_1_1table_1_1AssertCurrentSchemaID_1a32974a24815e6a01508612aeea6a6909" prot="private" virt="non-virtual"><scope>iceberg::table::AssertCurrentSchemaID</scope><name>schema_id_</name></member>
      <member refid="classiceberg_1_1table_1_1AssertCurrentSchemaID_1aa7fd0eb9539d1e55ddc68c0f2b4ee3b8" prot="public" virt="virtual"><scope>iceberg::table::AssertCurrentSchemaID</scope><name>Validate</name></member>
      <member refid="classiceberg_1_1TableRequirement_1a91a754d5e846ec2607aec5bf09896270" prot="public" virt="virtual"><scope>iceberg::table::AssertCurrentSchemaID</scope><name>~TableRequirement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
