<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="schema__field__test_8cc" kind="file" language="C++">
    <compoundname>schema_field_test.cc</compoundname>
    <includes refid="schema__field_8h" local="yes">iceberg/schema_field.h</includes>
    <includes local="no">format</includes>
    <includes local="no">memory</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="type_8h" local="yes">iceberg/type.h</includes>
    <includes refid="formatter_8h" local="yes">iceberg/util/formatter.h</includes>
    <incdepgraph>
      <node id="7">
        <label>iceberg/iceberg_export.h</label>
        <link refid="iceberg__export_8h_source"/>
      </node>
      <node id="18">
        <label>iceberg/result.h</label>
        <link refid="result_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iceberg/schema_field.h</label>
        <link refid="schema__field_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg/test/schema_field_test.cc</label>
        <link refid="schema__field__test_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>iceberg/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iceberg/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
      </node>
      <node id="9">
        <label>iceberg/util/formattable.h</label>
        <link refid="formattable_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>iceberg/util/formatter.h</label>
        <link refid="formatter_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>iceberg/util/lazy.h</label>
        <link refid="lazy_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>iceberg/util/macros.h</label>
        <link refid="macros_8h_source"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>array</label>
      </node>
      <node id="25">
        <label>cassert</label>
      </node>
      <node id="21">
        <label>concepts</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="19">
        <label>expected</label>
      </node>
      <node id="10">
        <label>format</label>
      </node>
      <node id="22">
        <label>functional</label>
      </node>
      <node id="11">
        <label>gtest/gtest.h</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="23">
        <label>mutex</label>
      </node>
      <node id="14">
        <label>optional</label>
      </node>
      <node id="15">
        <label>span</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="6">
        <label>string_view</label>
      </node>
      <node id="16">
        <label>unordered_map</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="schema__field__test_8cc_1adb8fe90548704d5fd66b18f5ed64d62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(SchemaFieldTest, Basics)</argsstring>
        <name>TEST</name>
        <param>
          <type>SchemaFieldTest</type>
        </param>
        <param>
          <type>Basics</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/schema_field_test.cc" line="30" column="1" bodyfile="iceberg/test/schema_field_test.cc" bodystart="30" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="schema__field__test_8cc_1ab70b57b3f15434e55aa884962d491b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(SchemaFieldTest, Equality)</argsstring>
        <name>TEST</name>
        <param>
          <type>SchemaFieldTest</type>
        </param>
        <param>
          <type>Equality</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/schema_field_test.cc" line="62" column="1" bodyfile="iceberg/test/schema_field_test.cc" bodystart="62" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="schema__field__test_8cc_1ad7c31c36b254f2d2c400d8ba590a86fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(SchemaFieldTest, WithDoc)</argsstring>
        <name>TEST</name>
        <param>
          <type>SchemaFieldTest</type>
        </param>
        <param>
          <type>WithDoc</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/test/schema_field_test.cc" line="83" column="1" bodyfile="iceberg/test/schema_field_test.cc" bodystart="83" bodyend="106"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema__field_8h" kindref="compound">iceberg/schema_field.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;format&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_8h" kindref="compound">iceberg/type.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="formatter_8h" kindref="compound">iceberg/util/formatter.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IWYU<sp/>pragma:<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">TEST(SchemaFieldTest,<sp/>Basics)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field(1,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1,<sp/>field.field_id());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>field.name());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(iceberg::TypeId::kInt,<sp/>field.type()-&gt;type_id());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(field.optional());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>(1):<sp/>int<sp/>(required)&quot;</highlight><highlight class="normal">,<sp/>field.ToString());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>(1):<sp/>int<sp/>(required)&quot;</highlight><highlight class="normal">,<sp/>std::format(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>field));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field<sp/>=<sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">iceberg::SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;iceberg::FixedType&gt;(10));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a23db912890745382ec78ccb6a93bce84" kindref="member">field_id</ref>());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a733f14fa7ad1900137a97155329239e5" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="classiceberg_1_1FixedType" kindref="compound">iceberg::FixedType</ref>(10),<sp/>*field.<ref refid="classiceberg_1_1SchemaField_1a9fbf59beb13cbb358fbce94d085ef53f" kindref="member">type</ref>());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(field.<ref refid="classiceberg_1_1SchemaField_1aaee3e5fcc9a0fc3173cdcf1c00552df1" kindref="member">optional</ref>());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>bar<sp/>(2):<sp/>fixed(10)<sp/>(optional)&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a2268e045b8212387bb2d5e1e75e8d0e5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>bar<sp/>(2):<sp/>fixed(10)<sp/>(optional)&quot;</highlight><highlight class="normal">,<sp/>std::format(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>field));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field<sp/>=<sp/><ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">iceberg::SchemaField::MakeRequired</ref>(</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;iceberg::FixedType&gt;(10));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a23db912890745382ec78ccb6a93bce84" kindref="member">field_id</ref>());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>bar&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a733f14fa7ad1900137a97155329239e5" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="classiceberg_1_1FixedType" kindref="compound">iceberg::FixedType</ref>(10),<sp/>*field.<ref refid="classiceberg_1_1SchemaField_1a9fbf59beb13cbb358fbce94d085ef53f" kindref="member">type</ref>());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(field.<ref refid="classiceberg_1_1SchemaField_1aaee3e5fcc9a0fc3173cdcf1c00552df1" kindref="member">optional</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>bar<sp/>(2):<sp/>fixed(10)<sp/>(required)&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a2268e045b8212387bb2d5e1e75e8d0e5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>bar<sp/>(2):<sp/>fixed(10)<sp/>(required)&quot;</highlight><highlight class="normal">,<sp/>std::format(</highlight><highlight class="stringliteral">&quot;{}&quot;</highlight><highlight class="normal">,<sp/>field));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">TEST(SchemaFieldTest,<sp/>Equality)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field1(1,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field2(2,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field3(1,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field4(1,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>std::make_shared&lt;iceberg::LongType&gt;(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field5(1,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field6(1,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>ASSERT_EQ(field1,<sp/>field1);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>ASSERT_NE(field1,<sp/>field2);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>ASSERT_NE(field2,<sp/>field1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ASSERT_NE(field1,<sp/>field3);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>ASSERT_NE(field3,<sp/>field2);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>ASSERT_NE(field1,<sp/>field4);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>ASSERT_NE(field4,<sp/>field1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>ASSERT_NE(field1,<sp/>field5);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>ASSERT_NE(field5,<sp/>field1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>ASSERT_EQ(field1,<sp/>field6);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>ASSERT_EQ(field6,<sp/>field1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">TEST(SchemaFieldTest,<sp/>WithDoc)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field(</highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">1,<sp/></highlight><highlight class="comment">/*name=*/</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>(),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*optional=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*doc=*/</highlight><highlight class="stringliteral">&quot;Field<sp/>documentation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(1,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a23db912890745382ec78ccb6a93bce84" kindref="member">field_id</ref>());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a733f14fa7ad1900137a97155329239e5" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(iceberg::TypeId::kInt,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a9fbf59beb13cbb358fbce94d085ef53f" kindref="member">type</ref>()-&gt;type_id());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(field.<ref refid="classiceberg_1_1SchemaField_1aaee3e5fcc9a0fc3173cdcf1c00552df1" kindref="member">optional</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;Field<sp/>documentation&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1ad992c1fcedc2d56244138f477efe21f2" kindref="member">doc</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;foo<sp/>(1):<sp/>int<sp/>(required)<sp/>-<sp/>Field<sp/>documentation&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a2268e045b8212387bb2d5e1e75e8d0e5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classiceberg_1_1SchemaField" kindref="compound">iceberg::SchemaField</ref><sp/>field<sp/>=<sp/><ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">iceberg::SchemaField::MakeOptional</ref>(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*field_id=*/</highlight><highlight class="normal">2,<sp/></highlight><highlight class="comment">/*name=*/</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*type=*/</highlight><highlight class="normal">std::make_shared&lt;iceberg::FixedType&gt;(10),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*doc=*/</highlight><highlight class="stringliteral">&quot;Field<sp/>with<sp/>10<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(2,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a23db912890745382ec78ccb6a93bce84" kindref="member">field_id</ref>());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a733f14fa7ad1900137a97155329239e5" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(<ref refid="classiceberg_1_1FixedType" kindref="compound">iceberg::FixedType</ref>(10),<sp/>*field.<ref refid="classiceberg_1_1SchemaField_1a9fbf59beb13cbb358fbce94d085ef53f" kindref="member">type</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(field.<ref refid="classiceberg_1_1SchemaField_1aaee3e5fcc9a0fc3173cdcf1c00552df1" kindref="member">optional</ref>());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;Field<sp/>with<sp/>10<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1ad992c1fcedc2d56244138f477efe21f2" kindref="member">doc</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(</highlight><highlight class="stringliteral">&quot;bar<sp/>(2):<sp/>fixed(10)<sp/>(optional)<sp/>-<sp/>Field<sp/>with<sp/>10<sp/>bytes&quot;</highlight><highlight class="normal">,<sp/>field.<ref refid="classiceberg_1_1SchemaField_1a2268e045b8212387bb2d5e1e75e8d0e5" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="iceberg/test/schema_field_test.cc"/>
  </compounddef>
</doxygen>
