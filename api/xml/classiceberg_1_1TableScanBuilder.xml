<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1TableScanBuilder" kind="class" language="C++" prot="public">
    <compoundname>iceberg::TableScanBuilder</compoundname>
    <includes refid="table__scan_8h" local="no">table_scan.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiceberg_1_1TableScanBuilder_1a7022e1ce10694eaa66ec82b811ea1102" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1FileIO" kindref="compound">FileIO</ref> &gt;</type>
        <definition>std::shared_ptr&lt;FileIO&gt; iceberg::TableScanBuilder::file_io_</definition>
        <argsstring></argsstring>
        <name>file_io_</name>
        <qualifiedname>iceberg::TableScanBuilder::file_io_</qualifiedname>
        <briefdescription>
<para>the file I/O instance for reading manifests and data files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="144" column="19" bodyfile="iceberg/table_scan.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TableScanBuilder_1a10638ed8d23c2a5d1a66d9d58e3b000a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; iceberg::TableScanBuilder::column_names_</definition>
        <argsstring></argsstring>
        <name>column_names_</name>
        <qualifiedname>iceberg::TableScanBuilder::column_names_</qualifiedname>
        <briefdescription>
<para>column names to project in the scan. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="146" column="15" bodyfile="iceberg/table_scan.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TableScanBuilder_1a3aaf315bab9c96a4340a2afaf005bc4d" prot="private" static="no" mutable="no">
        <type>std::optional&lt; int64_t &gt;</type>
        <definition>std::optional&lt;int64_t&gt; iceberg::TableScanBuilder::snapshot_id_</definition>
        <argsstring></argsstring>
        <name>snapshot_id_</name>
        <qualifiedname>iceberg::TableScanBuilder::snapshot_id_</qualifiedname>
        <briefdescription>
<para>snapshot ID to scan, if specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="148" column="17" bodyfile="iceberg/table_scan.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiceberg_1_1TableScanBuilder_1abb6b306b05bd63020d635e769ae651e2" prot="private" static="no" mutable="no">
        <type><ref refid="structiceberg_1_1TableScanContext" kindref="compound">TableScanContext</ref></type>
        <definition>TableScanContext iceberg::TableScanBuilder::context_</definition>
        <argsstring></argsstring>
        <name>context_</name>
        <qualifiedname>iceberg::TableScanBuilder::context_</qualifiedname>
        <briefdescription>
<para>Context for the scan, including snapshot, schema, and filter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="150" column="20" bodyfile="iceberg/table_scan.h" bodystart="150" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1a2bb62cca7a200a42e07ba3b366a5f83f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>iceberg::TableScanBuilder::TableScanBuilder</definition>
        <argsstring>(std::shared_ptr&lt; TableMetadata &gt; table_metadata, std::shared_ptr&lt; FileIO &gt; file_io)</argsstring>
        <name>TableScanBuilder</name>
        <qualifiedname>iceberg::TableScanBuilder::TableScanBuilder</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structiceberg_1_1TableMetadata" kindref="compound">TableMetadata</ref> &gt;</type>
          <declname>table_metadata</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1FileIO" kindref="compound">FileIO</ref> &gt;</type>
          <declname>file_io</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> for the given table. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table_metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>The metadata of the table to scan. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_io</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classiceberg_1_1FileIO" kindref="compound">FileIO</ref> instance for reading manifests and data files. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="99" column="12" bodyfile="iceberg/table_scan.cc" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1aac3393e655f9102a395308a538c0287b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> &amp;</type>
        <definition>TableScanBuilder &amp; iceberg::TableScanBuilder::WithSnapshotId</definition>
        <argsstring>(int64_t snapshot_id)</argsstring>
        <name>WithSnapshotId</name>
        <qualifiedname>iceberg::TableScanBuilder::WithSnapshotId</qualifiedname>
        <param>
          <type>int64_t</type>
          <declname>snapshot_id</declname>
        </param>
        <briefdescription>
<para>Sets the snapshot ID to scan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snapshot_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the snapshot. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classiceberg_1_1Reference" kindref="compound">Reference</ref> to the builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="105" column="20" bodyfile="iceberg/table_scan.cc" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1adef4d354db4e0cd93c87c5ac0ea2d708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> &amp;</type>
        <definition>TableScanBuilder &amp; iceberg::TableScanBuilder::WithColumnNames</definition>
        <argsstring>(std::vector&lt; std::string &gt; column_names)</argsstring>
        <name>WithColumnNames</name>
        <qualifiedname>iceberg::TableScanBuilder::WithColumnNames</qualifiedname>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>column_names</declname>
        </param>
        <briefdescription>
<para>Selects columns to include in the scan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column_names</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of column names. If empty, all columns will be selected. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classiceberg_1_1Reference" kindref="compound">Reference</ref> to the builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="110" column="20" bodyfile="iceberg/table_scan.cc" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1a7d708c35207b7c9ffe946f57999a86bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> &amp;</type>
        <definition>TableScanBuilder &amp; iceberg::TableScanBuilder::WithProjectedSchema</definition>
        <argsstring>(std::shared_ptr&lt; Schema &gt; schema)</argsstring>
        <name>WithProjectedSchema</name>
        <qualifiedname>iceberg::TableScanBuilder::WithProjectedSchema</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Schema" kindref="compound">Schema</ref> &gt;</type>
          <declname>schema</declname>
        </param>
        <briefdescription>
<para>Sets the schema to use for the scan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The schema to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classiceberg_1_1Reference" kindref="compound">Reference</ref> to the builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="115" column="20" bodyfile="iceberg/table_scan.cc" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1a30099143b1e43220c7ae8538157849e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> &amp;</type>
        <definition>TableScanBuilder &amp; iceberg::TableScanBuilder::WithFilter</definition>
        <argsstring>(std::shared_ptr&lt; Expression &gt; filter)</argsstring>
        <name>WithFilter</name>
        <qualifiedname>iceberg::TableScanBuilder::WithFilter</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Applies a filter expression to the scan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Filter expression to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classiceberg_1_1Reference" kindref="compound">Reference</ref> to the builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="120" column="20" bodyfile="iceberg/table_scan.cc" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1a906d4a1702b205c49ef8056b526977d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> &amp;</type>
        <definition>TableScanBuilder &amp; iceberg::TableScanBuilder::WithCaseSensitive</definition>
        <argsstring>(bool case_sensitive)</argsstring>
        <name>WithCaseSensitive</name>
        <qualifiedname>iceberg::TableScanBuilder::WithCaseSensitive</qualifiedname>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
        </param>
        <briefdescription>
<para>Sets whether the scan should be case-sensitive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the scan is case-sensitive. /return <ref refid="classiceberg_1_1Reference" kindref="compound">Reference</ref> to the builder. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="125" column="20" bodyfile="iceberg/table_scan.cc" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1ab7f9911f19960dc9a9518f1d0744c0d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> &amp;</type>
        <definition>TableScanBuilder &amp; iceberg::TableScanBuilder::WithOption</definition>
        <argsstring>(std::string property, std::string value)</argsstring>
        <name>WithOption</name>
        <qualifiedname>iceberg::TableScanBuilder::WithOption</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets an option for the scan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the option. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classiceberg_1_1Reference" kindref="compound">Reference</ref> to the builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="131" column="20" bodyfile="iceberg/table_scan.cc" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1a788e5544cdee8ea65f0432a9567499b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classiceberg_1_1TableScanBuilder" kindref="compound">TableScanBuilder</ref> &amp;</type>
        <definition>TableScanBuilder &amp; iceberg::TableScanBuilder::WithLimit</definition>
        <argsstring>(std::optional&lt; int64_t &gt; limit)</argsstring>
        <name>WithLimit</name>
        <qualifiedname>iceberg::TableScanBuilder::WithLimit</qualifiedname>
        <param>
          <type>std::optional&lt; int64_t &gt;</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Sets an optional limit on the number of rows to scan. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional limit on the number of rows. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classiceberg_1_1Reference" kindref="compound">Reference</ref> to the builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="136" column="20" bodyfile="iceberg/table_scan.cc" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1TableScanBuilder_1a5c49dd5e6c2a18c20aa0e2f33d769454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Result&lt; std::unique_ptr&lt; <ref refid="classiceberg_1_1TableScan" kindref="compound">TableScan</ref> &gt; &gt;</type>
        <definition>Result&lt; std::unique_ptr&lt; TableScan &gt; &gt; iceberg::TableScanBuilder::Build</definition>
        <argsstring>()</argsstring>
        <name>Build</name>
        <qualifiedname>iceberg::TableScanBuilder::Build</qualifiedname>
        <briefdescription>
<para>Builds and returns a <ref refid="classiceberg_1_1TableScan" kindref="compound">TableScan</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A Result containing the <ref refid="classiceberg_1_1TableScan" kindref="compound">TableScan</ref> or an error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/table_scan.h" line="140" column="10" bodyfile="iceberg/table_scan.cc" bodystart="207" bodyend="246"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Builder class for creating <ref refid="classiceberg_1_1TableScan" kindref="compound">TableScan</ref> instances. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="iceberg/table_scan.h" line="94" column="1" bodyfile="iceberg/table_scan.h" bodystart="94" bodyend="151"/>
    <listofallmembers>
      <member refid="classiceberg_1_1TableScanBuilder_1a5c49dd5e6c2a18c20aa0e2f33d769454" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>Build</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a10638ed8d23c2a5d1a66d9d58e3b000a" prot="private" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>column_names_</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1abb6b306b05bd63020d635e769ae651e2" prot="private" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>context_</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a7022e1ce10694eaa66ec82b811ea1102" prot="private" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>file_io_</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a3aaf315bab9c96a4340a2afaf005bc4d" prot="private" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>snapshot_id_</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a2bb62cca7a200a42e07ba3b366a5f83f" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>TableScanBuilder</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a906d4a1702b205c49ef8056b526977d9" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>WithCaseSensitive</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1adef4d354db4e0cd93c87c5ac0ea2d708" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>WithColumnNames</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a30099143b1e43220c7ae8538157849e4" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>WithFilter</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a788e5544cdee8ea65f0432a9567499b9" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>WithLimit</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1ab7f9911f19960dc9a9518f1d0744c0d0" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>WithOption</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1a7d708c35207b7c9ffe946f57999a86bb" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>WithProjectedSchema</name></member>
      <member refid="classiceberg_1_1TableScanBuilder_1aac3393e655f9102a395308a538c0287b" prot="public" virt="non-virtual"><scope>iceberg::TableScanBuilder</scope><name>WithSnapshotId</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
