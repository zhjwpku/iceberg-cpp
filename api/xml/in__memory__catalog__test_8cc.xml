<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="in__memory__catalog__test_8cc" kind="file" language="C++">
    <compoundname>in_memory_catalog_test.cc</compoundname>
    <includes refid="in__memory__catalog_8h" local="yes">iceberg/catalog/memory/in_memory_catalog.h</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">arrow/filesystem/localfs.h</includes>
    <includes local="no">gmock/gmock.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="arrow__fs__file__io__internal_8h" local="yes">iceberg/arrow/arrow_fs_file_io_internal.h</includes>
    <includes refid="schema_8h" local="yes">iceberg/schema.h</includes>
    <includes refid="table_8h" local="yes">iceberg/table.h</includes>
    <includes refid="table__metadata_8h" local="yes">iceberg/table_metadata.h</includes>
    <includes refid="matchers_8h" local="yes">iceberg/test/matchers.h</includes>
    <includes refid="mock__catalog_8h" local="yes">iceberg/test/mock_catalog.h</includes>
    <includes refid="test__common_8h" local="yes">iceberg/test/test_common.h</includes>
    <incdepgraph>
      <node id="21">
        <label>iceberg/arrow/arrow_fs_file_io_internal.h</label>
        <link refid="arrow__fs__file__io__internal_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iceberg/catalog.h</label>
        <link refid="catalog_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iceberg/catalog/memory/in_memory_catalog.h</label>
        <link refid="in__memory__catalog_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>iceberg/file_io.h</label>
        <link refid="file__io_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>iceberg/iceberg_bundle_export.h</label>
        <link refid="iceberg__bundle__export_8h_source"/>
      </node>
      <node id="14">
        <label>iceberg/iceberg_export.h</label>
        <link refid="iceberg__export_8h_source"/>
      </node>
      <node id="11">
        <label>iceberg/result.h</label>
        <link refid="result_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>iceberg/schema.h</label>
        <link refid="schema_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>iceberg/schema_field.h</label>
        <link refid="schema__field_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>iceberg/snapshot.h</label>
        <link refid="snapshot_8h_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>iceberg/table.h</label>
        <link refid="table_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>iceberg/table_identifier.h</label>
        <link refid="table__identifier_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>iceberg/table_metadata.h</label>
        <link refid="table__metadata_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg/test/in_memory_catalog_test.cc</label>
        <link refid="in__memory__catalog__test_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>iceberg/test/matchers.h</label>
        <link refid="matchers_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>iceberg/test/mock_catalog.h</label>
        <link refid="mock__catalog_8h_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>iceberg/test/test_common.h</label>
        <link refid="test__common_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>iceberg/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>iceberg/type_fwd.h</label>
        <link refid="type__fwd_8h"/>
      </node>
      <node id="29">
        <label>iceberg/util/formattable.h</label>
        <link refid="formattable_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>iceberg/util/lazy.h</label>
        <link refid="lazy_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>iceberg/util/macros.h</label>
        <link refid="macros_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>iceberg/util/string_util.h</label>
        <link refid="string__util_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iceberg/util/timepoint.h</label>
        <link refid="timepoint_8h_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>algorithm</label>
      </node>
      <node id="31">
        <label>array</label>
      </node>
      <node id="22">
        <label>arrow/filesystem/filesystem.h</label>
      </node>
      <node id="18">
        <label>arrow/filesystem/localfs.h</label>
      </node>
      <node id="37">
        <label>cassert</label>
      </node>
      <node id="46">
        <label>chrono</label>
      </node>
      <node id="34">
        <label>concepts</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>expected</label>
      </node>
      <node id="17">
        <label>filesystem</label>
      </node>
      <node id="13">
        <label>format</label>
      </node>
      <node id="35">
        <label>functional</label>
      </node>
      <node id="19">
        <label>gmock/gmock.h</label>
      </node>
      <node id="20">
        <label>gtest/gtest.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="3">
        <label>mutex</label>
      </node>
      <node id="24">
        <label>optional</label>
      </node>
      <node id="40">
        <label>ranges</label>
      </node>
      <node id="32">
        <label>span</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="7">
        <label>string_view</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="9">
        <label>unordered_set</label>
      </node>
      <node id="43">
        <label>utility</label>
      </node>
      <node id="44">
        <label>variant</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classiceberg_1_1InMemoryCatalogTest" prot="public">iceberg::InMemoryCatalogTest</innerclass>
    <innernamespace refid="namespaceiceberg">iceberg</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>to<sp/>the<sp/>Apache<sp/>Software<sp/>Foundation<sp/>(ASF)<sp/>under<sp/>one</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>or<sp/>more<sp/>contributor<sp/>license<sp/>agreements.<sp/><sp/>See<sp/>the<sp/>NOTICE<sp/>file</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional<sp/>information</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>regarding<sp/>copyright<sp/>ownership.<sp/><sp/>The<sp/>ASF<sp/>licenses<sp/>this<sp/>file</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>you<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>&quot;License&quot;);<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>License.<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>software<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/catalog/memory/in_memory_catalog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arrow/filesystem/localfs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gmock/gmock.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/arrow/arrow_fs_file_io_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="schema_8h" kindref="compound">iceberg/schema.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/table.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="table__metadata_8h" kindref="compound">iceberg/table_metadata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/matchers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/mock_catalog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iceberg/test/test_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">iceberg<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classiceberg_1_1InMemoryCatalogTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classiceberg_1_1InMemoryCatalogTest" kindref="compound">InMemoryCatalogTest</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUp()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>file_io_<sp/>=<sp/>std::make_shared&lt;iceberg::arrow::ArrowFileSystemFileIO&gt;(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;::arrow::fs::LocalFileSystem&gt;());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>properties<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;prop1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val1&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>catalog_<sp/>=<sp/>std::make_shared&lt;InMemoryCatalog&gt;(</highlight><highlight class="stringliteral">&quot;test_catalog&quot;</highlight><highlight class="normal">,<sp/>file_io_,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/tmp/warehouse/&quot;</highlight><highlight class="normal">,<sp/>properties);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TearDown()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>the<sp/>temporary<sp/>files<sp/>created<sp/>for<sp/>the<sp/>table<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>path<sp/>:<sp/>created_temp_paths_)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::error_code<sp/>ec;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::filesystem::is_directory(path,<sp/>ec))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::filesystem::remove_all(path,<sp/>ec);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::filesystem::remove(path,<sp/>ec);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>std::string<sp/>GenerateTestTableLocation(std::string<sp/>table_name)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::path<sp/>temp_dir<sp/>=<sp/>std::filesystem::temp_directory_path();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>info<sp/>=<sp/>::testing::UnitTest::GetInstance()-&gt;current_test_info();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>table_location<sp/>=<sp/>std::format(</highlight><highlight class="stringliteral">&quot;{}/iceberg_test_{}_{}/{}/&quot;</highlight><highlight class="normal">,<sp/>temp_dir.string(),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;test_suite_name(),<sp/>info-&gt;name(),<sp/>table_name);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>a<sp/>unique<sp/>directory<sp/>for<sp/>the<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::error_code<sp/>ec;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::filesystem::create_directories(table_location,<sp/>ec);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ec)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::format(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>temporary<sp/>directory:<sp/>{},<sp/>error<sp/>message:<sp/>{}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_location,<sp/>ec.message()));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>created_temp_paths_.push_back(table_location);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table_location;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;FileIO&gt;<sp/>file_io_;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;InMemoryCatalog&gt;<sp/>catalog_;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>store<sp/>temporary<sp/>paths<sp/>created<sp/>during<sp/>the<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>created_temp_paths_;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">TEST_F(<ref refid="classiceberg_1_1InMemoryCatalogTest" kindref="compound">InMemoryCatalogTest</ref>,<sp/>CatalogName)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>EXPECT_EQ(catalog_-&gt;name(),<sp/></highlight><highlight class="stringliteral">&quot;test_catalog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tablesRs<sp/>=<sp/>catalog_-&gt;ListTables(<ref refid="structiceberg_1_1Namespace" kindref="compound">Namespace</ref>{{}});</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>EXPECT_THAT(tablesRs,<sp/>IsOk());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(tablesRs-&gt;empty());</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">TEST_F(InMemoryCatalogTest,<sp/>ListTables)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tablesRs<sp/>=<sp/>catalog_-&gt;ListTables(Namespace{{}});</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>EXPECT_THAT(tablesRs,<sp/>IsOk());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>ASSERT_TRUE(tablesRs-&gt;empty());</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">TEST_F(InMemoryCatalogTest,<sp/>TableExists)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>TableIdentifier<sp/>tableIdent{.ns<sp/>=<sp/>{},<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;t1&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>catalog_-&gt;TableExists(tableIdent);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>EXPECT_THAT(result,<sp/>HasValue(::testing::Eq(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">TEST_F(InMemoryCatalogTest,<sp/>RegisterTable)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>TableIdentifier<sp/>tableIdent{.ns<sp/>=<sp/>{},<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;t1&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TableMetadata&gt;<sp/>metadata;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>ASSERT_NO_FATAL_FAILURE(ReadTableMetadata(</highlight><highlight class="stringliteral">&quot;TableMetadataV2Valid.json&quot;</highlight><highlight class="normal">,<sp/>&amp;metadata));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>table_location<sp/>=<sp/>GenerateTestTableLocation(tableIdent.name);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>metadata_location<sp/>=<sp/>std::format(</highlight><highlight class="stringliteral">&quot;{}v1.metadata.json&quot;</highlight><highlight class="normal">,<sp/>table_location);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="structiceberg_1_1TableMetadataUtil_1a0fc746f383f30260753e3e5834fcf42a" kindref="member">TableMetadataUtil::Write</ref>(*file_io_,<sp/>metadata_location,<sp/>*metadata);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>EXPECT_THAT(status,<sp/>IsOk());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>table<sp/>=<sp/>catalog_-&gt;RegisterTable(tableIdent,<sp/>metadata_location);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>EXPECT_THAT(table,<sp/>IsOk());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>ASSERT_EQ(table.value()-&gt;name().name,<sp/></highlight><highlight class="stringliteral">&quot;t1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>ASSERT_EQ(table.value()-&gt;location(),<sp/></highlight><highlight class="stringliteral">&quot;s3://bucket/test/location&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">TEST_F(InMemoryCatalogTest,<sp/>RefreshTable)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>TableIdentifier<sp/>table_ident{.ns<sp/>=<sp/>{},<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;t1&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/>std::make_shared&lt;Schema&gt;(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SchemaField&gt;{<ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(1,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">int64</ref>())},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*schema_id=*/</highlight><highlight class="normal">1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;FileIO&gt;<sp/>io;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>catalog<sp/>=<sp/>std::make_shared&lt;MockCatalog&gt;();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mock<sp/>1st<sp/>call<sp/>to<sp/>LoadTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>EXPECT_CALL(*catalog,<sp/>LoadTable(::testing::_))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.WillOnce(::testing::Return(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_unique&lt;Table&gt;(table_ident,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;TableMetadata&gt;(TableMetadata{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.schemas<sp/>=<sp/>{schema},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.current_schema_id<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.current_snapshot_id<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshots<sp/>=<sp/>{std::make_shared&lt;Snapshot&gt;(Snapshot{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sequence_number<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})}}),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;s3://location/1.json&quot;</highlight><highlight class="normal">,<sp/>io,<sp/>catalog)));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>load_table_result<sp/>=<sp/>catalog-&gt;LoadTable(table_ident);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>ASSERT_THAT(load_table_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loaded_table<sp/>=<sp/>std::move(load_table_result.value());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>ASSERT_EQ(loaded_table-&gt;current_snapshot().value()-&gt;snapshot_id,<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mock<sp/>2nd<sp/>call<sp/>to<sp/>LoadTable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>EXPECT_CALL(*catalog,<sp/>LoadTable(::testing::_))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.WillOnce(::testing::Return(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_unique&lt;Table&gt;(table_ident,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;TableMetadata&gt;(TableMetadata{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.schemas<sp/>=<sp/>{schema},</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.current_schema_id<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.current_snapshot_id<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshots<sp/>=<sp/>{std::make_shared&lt;Snapshot&gt;(Snapshot{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sequence_number<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;Snapshot&gt;(Snapshot{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.snapshot_id<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sequence_number<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})}}),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;s3://location/2.json&quot;</highlight><highlight class="normal">,<sp/>io,<sp/>catalog)));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>refreshed_result<sp/>=<sp/>loaded_table-&gt;Refresh();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>ASSERT_THAT(refreshed_result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>table<sp/>is<sp/>refreshed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>ASSERT_EQ(loaded_table-&gt;current_snapshot().value()-&gt;snapshot_id,<sp/>2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">TEST_F(InMemoryCatalogTest,<sp/>DropTable)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>TableIdentifier<sp/>tableIdent{.ns<sp/>=<sp/>{},<sp/>.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;t1&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>catalog_-&gt;DropTable(tableIdent,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>EXPECT_THAT(result,<sp/>IsOk());</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">TEST_F(InMemoryCatalogTest,<sp/>Namespace)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>Namespace<sp/>ns{.levels<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;n1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;n2&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::string,<sp/>std::string&gt;<sp/>properties<sp/>=<sp/>{{</highlight><highlight class="stringliteral">&quot;prop1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val1&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;prop2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val2&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>EXPECT_THAT(catalog_-&gt;CreateNamespace(ns,<sp/>properties),<sp/>IsOk());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>EXPECT_THAT(catalog_-&gt;CreateNamespace(ns,<sp/>properties),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsError(ErrorKind::kAlreadyExists));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>EXPECT_THAT(catalog_-&gt;NamespaceExists(ns),<sp/>HasValue(::testing::Eq(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>EXPECT_THAT(catalog_-&gt;NamespaceExists(Namespace{.levels<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;n1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;n3&quot;</highlight><highlight class="normal">}}),</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasValue(::testing::Eq(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>childNs<sp/>=<sp/>catalog_-&gt;ListNamespaces(Namespace{.levels<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;n1&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>EXPECT_THAT(childNs,<sp/>IsOk());</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>ASSERT_EQ(childNs-&gt;size(),<sp/>1U);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>ASSERT_EQ(childNs-&gt;at(0).levels.size(),<sp/>2U);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>ASSERT_EQ(childNs-&gt;at(0).levels.at(1),<sp/></highlight><highlight class="stringliteral">&quot;n2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>propsRs<sp/>=<sp/>catalog_-&gt;GetNamespaceProperties(ns);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>EXPECT_THAT(propsRs,<sp/>IsOk());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>ASSERT_EQ(propsRs-&gt;size(),<sp/>2U);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>ASSERT_EQ(propsRs.value().at(</highlight><highlight class="stringliteral">&quot;prop1&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;val1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>ASSERT_EQ(propsRs.value().at(</highlight><highlight class="stringliteral">&quot;prop2&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;val2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>EXPECT_THAT(catalog_-&gt;UpdateNamespaceProperties(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns,<sp/>{{</highlight><highlight class="stringliteral">&quot;prop2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val2-updated&quot;</highlight><highlight class="normal">},<sp/>{</highlight><highlight class="stringliteral">&quot;prop3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;val3&quot;</highlight><highlight class="normal">}},<sp/>{</highlight><highlight class="stringliteral">&quot;prop1&quot;</highlight><highlight class="normal">}),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsOk());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>propsRs<sp/>=<sp/>catalog_-&gt;GetNamespaceProperties(ns);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>EXPECT_THAT(propsRs,<sp/>IsOk());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>ASSERT_EQ(propsRs-&gt;size(),<sp/>2U);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>ASSERT_EQ(propsRs.value().at(</highlight><highlight class="stringliteral">&quot;prop2&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;val2-updated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>ASSERT_EQ(propsRs.value().at(</highlight><highlight class="stringliteral">&quot;prop3&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;val3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>iceberg</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="iceberg/test/in_memory_catalog_test.cc"/>
  </compounddef>
</doxygen>
