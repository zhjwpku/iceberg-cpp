<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structstd_1_1formatter_3_01std_1_1span_3_01T_00_01Extent_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>std::formatter&lt; std::span&lt; T, Extent &gt; &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::formatter&lt; std::string_view &gt;</basecompoundref>
    <includes refid="formatter__internal_8h" local="no">formatter_internal.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>Extent</declname>
        <defname>Extent</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structstd_1_1formatter_3_01std_1_1span_3_01T_00_01Extent_01_4_01_4_1ae6907564e0503014976bef356bd913f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FormatContext</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto std::formatter&lt; std::span&lt; T, Extent &gt; &gt;::format</definition>
        <argsstring>(const std::span&lt; T, Extent &gt; &amp;span, FormatContext &amp;ctx) const</argsstring>
        <name>format</name>
        <qualifiedname>std::formatter&lt; std::span&lt; T, Extent &gt; &gt;::format</qualifiedname>
        <param>
          <type>const std::span&lt; T, Extent &gt; &amp;</type>
          <declname>span</declname>
        </param>
        <param>
          <type>FormatContext &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/util/formatter_internal.h" line="128" column="8" bodyfile="iceberg/util/formatter_internal.h" bodystart="128" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>std::formatter specialization for std::span </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>std::formatter&lt; std::span&lt; T, Extent &gt; &gt;</label>
        <link refid="structstd_1_1formatter_3_01std_1_1span_3_01T_00_01Extent_01_4_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::formatter&lt; std::string_view &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>std::formatter&lt; std::span&lt; T, Extent &gt; &gt;</label>
        <link refid="structstd_1_1formatter_3_01std_1_1span_3_01T_00_01Extent_01_4_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::formatter&lt; std::string_view &gt;</label>
      </node>
    </collaborationgraph>
    <location file="iceberg/util/formatter_internal.h" line="126" column="1" bodyfile="iceberg/util/formatter_internal.h" bodystart="126" bodyend="134"/>
    <listofallmembers>
      <member refid="structstd_1_1formatter_3_01std_1_1span_3_01T_00_01Extent_01_4_01_4_1ae6907564e0503014976bef356bd913f5" prot="public" virt="non-virtual"><scope>std::formatter&lt; std::span&lt; T, Extent &gt; &gt;</scope><name>format</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
