<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classiceberg_1_1True" kind="class" language="C++" prot="public">
    <compoundname>iceberg::True</compoundname>
    <basecompoundref refid="classiceberg_1_1Expression" prot="public" virt="non-virtual">iceberg::Expression</basecompoundref>
    <includes refid="expression_8h" local="no">expression.h</includes>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classiceberg_1_1True_1a613f11f21789dbb5bccfa79d7e55abea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="classiceberg_1_1True" kindref="compound">True</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt; True &gt; &amp; iceberg::True::Instance</definition>
        <argsstring>()</argsstring>
        <name>Instance</name>
        <qualifiedname>iceberg::True::Instance</qualifiedname>
        <briefdescription>
<para>Returns the singleton instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="91" column="32" bodyfile="iceberg/expression/expression.cc" bodystart="32" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classiceberg_1_1True_1aa40701eb9c6cc8b57130643a1000ad14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classiceberg_1_1Expression_1a433076bdc34ce0b6d359313c6c7b8a9c" kindref="member">Operation</ref></type>
        <definition>Operation iceberg::True::op</definition>
        <argsstring>() const override</argsstring>
        <name>op</name>
        <qualifiedname>iceberg::True::op</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a5a16ee5d023305b50e4a2216b4047eff">op</reimplements>
        <briefdescription>
<para>Returns the operation for an expression node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="93" column="13" bodyfile="iceberg/expression/expression.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1True_1ab2e3e9e09c33a7f8d614b069b1c0ef84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string iceberg::True::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <qualifiedname>iceberg::True::ToString</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a2e9c204f698d069ebc0fefb9e5269ab6">ToString</reimplements>
        <briefdescription>
<para>Get a user-readable string representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="95" column="15" bodyfile="iceberg/expression/expression.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1True_1a5849e24284fb2c87b234379e371a13ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Result&lt; std::shared_ptr&lt; <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &gt; &gt;</type>
        <definition>Result&lt; std::shared_ptr&lt; Expression &gt; &gt; iceberg::True::Negate</definition>
        <argsstring>() const override</argsstring>
        <name>Negate</name>
        <qualifiedname>iceberg::True::Negate</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a7ce9433b8cc063b06ac6371d6d56815c">Negate</reimplements>
        <briefdescription>
<para>Returns the negation of this expression, equivalent to not(this). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="97" column="10" bodyfile="iceberg/expression/expression.cc" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classiceberg_1_1True_1a53e99598cb32cb1d709838ba1a154a26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool iceberg::True::Equals</definition>
        <argsstring>(const Expression &amp;other) const override</argsstring>
        <name>Equals</name>
        <qualifiedname>iceberg::True::Equals</qualifiedname>
        <reimplements refid="classiceberg_1_1Expression_1a5f62190ba4e74757afb0fba05acb1e6a">Equals</reimplements>
        <param>
          <type>const <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns whether this expression will accept the same values as another. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>another expression </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the expressions are equivalent </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="99" column="8" bodyfile="iceberg/expression/expression.h" bodystart="99" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classiceberg_1_1True_1a8149322b2075b81bad9c3f53ccd44cfc" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr iceberg::True::True</definition>
        <argsstring>()=default</argsstring>
        <name>True</name>
        <qualifiedname>iceberg::True::True</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/expression/expression.h" line="104" column="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An <ref refid="classiceberg_1_1Expression" kindref="compound">Expression</ref> that is always true. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a boolean predicate that always evaluates to true. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>iceberg::Expression</label>
        <link refid="classiceberg_1_1Expression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg::True</label>
        <link refid="classiceberg_1_1True"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>iceberg::util::Formattable</label>
        <link refid="classiceberg_1_1util_1_1Formattable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>iceberg::Expression</label>
        <link refid="classiceberg_1_1Expression"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg::True</label>
        <link refid="classiceberg_1_1True"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>iceberg::util::Formattable</label>
        <link refid="classiceberg_1_1util_1_1Formattable"/>
      </node>
    </collaborationgraph>
    <location file="iceberg/expression/expression.h" line="88" column="1" bodyfile="iceberg/expression/expression.h" bodystart="88" bodyend="105"/>
    <listofallmembers>
      <member refid="classiceberg_1_1True_1a53e99598cb32cb1d709838ba1a154a26" prot="public" virt="virtual"><scope>iceberg::True</scope><name>Equals</name></member>
      <member refid="classiceberg_1_1True_1a613f11f21789dbb5bccfa79d7e55abea" prot="public" virt="non-virtual"><scope>iceberg::True</scope><name>Instance</name></member>
      <member refid="classiceberg_1_1True_1a5849e24284fb2c87b234379e371a13ce" prot="public" virt="virtual"><scope>iceberg::True</scope><name>Negate</name></member>
      <member refid="classiceberg_1_1True_1aa40701eb9c6cc8b57130643a1000ad14" prot="public" virt="virtual"><scope>iceberg::True</scope><name>op</name></member>
      <member refid="classiceberg_1_1Expression_1a433076bdc34ce0b6d359313c6c7b8a9c" prot="public" virt="non-virtual"><scope>iceberg::True</scope><name>Operation</name></member>
      <member refid="classiceberg_1_1True_1ab2e3e9e09c33a7f8d614b069b1c0ef84" prot="public" virt="virtual"><scope>iceberg::True</scope><name>ToString</name></member>
      <member refid="classiceberg_1_1True_1a8149322b2075b81bad9c3f53ccd44cfc" prot="private" virt="non-virtual"><scope>iceberg::True</scope><name>True</name></member>
      <member refid="classiceberg_1_1Expression_1a7529a7fa43b6a6ff1cd09eac4359f1ca" prot="public" virt="virtual"><scope>iceberg::True</scope><name>~Expression</name></member>
      <member refid="classiceberg_1_1util_1_1Formattable_1acfe29264450018bab0ceab0828cf46f9" prot="public" virt="virtual"><scope>iceberg::True</scope><name>~Formattable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
