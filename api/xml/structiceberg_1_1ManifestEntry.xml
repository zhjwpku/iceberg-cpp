<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structiceberg_1_1ManifestEntry" kind="struct" language="C++" prot="public">
    <compoundname>iceberg::ManifestEntry</compoundname>
    <includes refid="manifest__entry_8h" local="no">manifest_entry.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1adcaea3bfa81ceb698fadd1f04b4b7b81" prot="public" static="no" mutable="no">
        <type>ManifestStatus</type>
        <definition>ManifestStatus iceberg::ManifestEntry::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <qualifiedname>iceberg::ManifestEntry::status</qualifiedname>
        <initializer>= ManifestStatus::kAdded</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Field id: 0 Used to track additions and deletions. Deletes are informational only and not used in scans. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="280" column="18" bodyfile="iceberg/manifest_entry.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1a111546aa262e2f12866313c3d7f13a8c" prot="public" static="no" mutable="no">
        <type>std::optional&lt; int64_t &gt;</type>
        <definition>std::optional&lt;int64_t&gt; iceberg::ManifestEntry::snapshot_id</definition>
        <argsstring></argsstring>
        <name>snapshot_id</name>
        <qualifiedname>iceberg::ManifestEntry::snapshot_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Field id: 1 <ref refid="structiceberg_1_1Snapshot" kindref="compound">Snapshot</ref> id where the file was added, or deleted if status is 2. Inherited when null. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="284" column="17" bodyfile="iceberg/manifest_entry.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1a357b286d5d9a3fa93dcb2cab58c1ddf5" prot="public" static="no" mutable="no">
        <type>std::optional&lt; int64_t &gt;</type>
        <definition>std::optional&lt;int64_t&gt; iceberg::ManifestEntry::sequence_number</definition>
        <argsstring></argsstring>
        <name>sequence_number</name>
        <qualifiedname>iceberg::ManifestEntry::sequence_number</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Field id: 3 Data sequence number of the file. Inherited when null and status is 1 (added). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="287" column="17" bodyfile="iceberg/manifest_entry.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1a25e3368468e2b43b7751729cdb4e2e4a" prot="public" static="no" mutable="no">
        <type>std::optional&lt; int64_t &gt;</type>
        <definition>std::optional&lt;int64_t&gt; iceberg::ManifestEntry::file_sequence_number</definition>
        <argsstring></argsstring>
        <name>file_sequence_number</name>
        <qualifiedname>iceberg::ManifestEntry::file_sequence_number</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Field id: 4 File sequence number indicating when the file was added. Inherited when null and status is 1 (added). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="291" column="17" bodyfile="iceberg/manifest_entry.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1a9b5f9b8341261f1d10379d7eee814135" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="structiceberg_1_1DataFile" kindref="compound">DataFile</ref> &gt;</type>
        <definition>std::shared_ptr&lt;DataFile&gt; iceberg::ManifestEntry::data_file</definition>
        <argsstring></argsstring>
        <name>data_file</name>
        <qualifiedname>iceberg::ManifestEntry::data_file</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Field id: 2 File path, partition tuple, metrics, ... </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="294" column="19" bodyfile="iceberg/manifest_entry.h" bodystart="294" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1afe873220bfad538c28a2ce7270ed7a41" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref></type>
        <definition>const SchemaField iceberg::ManifestEntry::kStatus</definition>
        <argsstring></argsstring>
        <name>kStatus</name>
        <qualifiedname>iceberg::ManifestEntry::kStatus</qualifiedname>
        <initializer>=
      <ref refid="classiceberg_1_1SchemaField_1a33775dfa40a452378646a4dfb7419800" kindref="member">SchemaField::MakeRequired</ref>(0, &quot;status&quot;, <ref refid="group__type-factories_1ga91f0688c58d168d755610a2b5a1a222e" kindref="member">iceberg::int32</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="296" column="35" bodyfile="iceberg/manifest_entry.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1aae0d024965ab890f9913c223d9906c58" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref></type>
        <definition>const SchemaField iceberg::ManifestEntry::kSnapshotId</definition>
        <argsstring></argsstring>
        <name>kSnapshotId</name>
        <qualifiedname>iceberg::ManifestEntry::kSnapshotId</qualifiedname>
        <initializer>=
      <ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(1, &quot;snapshot_id&quot;, <ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="298" column="35" bodyfile="iceberg/manifest_entry.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1a15ce86fa4f56aff75d9b52fb2863fd8a" prot="public" static="yes" mutable="no">
        <type>const int32_t</type>
        <definition>const int32_t iceberg::ManifestEntry::kDataFileFieldId</definition>
        <argsstring></argsstring>
        <name>kDataFileFieldId</name>
        <qualifiedname>iceberg::ManifestEntry::kDataFileFieldId</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="300" column="31" bodyfile="iceberg/manifest_entry.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1a09017895fe035d8c751ede61e4975dce" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string iceberg::ManifestEntry::kDataFileField</definition>
        <argsstring></argsstring>
        <name>kDataFileField</name>
        <qualifiedname>iceberg::ManifestEntry::kDataFileField</qualifiedname>
        <initializer>= &quot;data_file&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="301" column="35" bodyfile="iceberg/manifest_entry.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1a10d10f423e8c15d284146a654591d079" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref></type>
        <definition>const SchemaField iceberg::ManifestEntry::kSequenceNumber</definition>
        <argsstring></argsstring>
        <name>kSequenceNumber</name>
        <qualifiedname>iceberg::ManifestEntry::kSequenceNumber</qualifiedname>
        <initializer>=
      <ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(3, &quot;sequence_number&quot;, <ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="302" column="35" bodyfile="iceberg/manifest_entry.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structiceberg_1_1ManifestEntry_1ad01eabb1b8b67ac537bf25f262fc1e2e" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classiceberg_1_1SchemaField" kindref="compound">SchemaField</ref></type>
        <definition>const SchemaField iceberg::ManifestEntry::kFileSequenceNumber</definition>
        <argsstring></argsstring>
        <name>kFileSequenceNumber</name>
        <qualifiedname>iceberg::ManifestEntry::kFileSequenceNumber</qualifiedname>
        <initializer>=
      <ref refid="classiceberg_1_1SchemaField_1aeeb98db825450095da8f57dfbb422a77" kindref="member">SchemaField::MakeOptional</ref>(4, &quot;file_sequence_number&quot;, <ref refid="group__type-factories_1gafca6afb41a025fd4a7eed7809d4b653f" kindref="member">iceberg::int64</ref>())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="304" column="35" bodyfile="iceberg/manifest_entry.h" bodystart="304" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structiceberg_1_1ManifestEntry_1ae47c2f4d51be24710247e1b664547be2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iceberg::ManifestEntry::operator==</definition>
        <argsstring>(const ManifestEntry &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>iceberg::ManifestEntry::operator==</qualifiedname>
        <param>
          <type>const <ref refid="structiceberg_1_1ManifestEntry" kindref="compound">ManifestEntry</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="307" column="8" bodyfile="iceberg/manifest_entry.cc" bodystart="31" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structiceberg_1_1ManifestEntry_1a04902747835e97844c0be254fefc5b1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1StructType" kindref="compound">StructType</ref> &gt;</type>
        <definition>std::shared_ptr&lt; StructType &gt; iceberg::ManifestEntry::TypeFromPartitionType</definition>
        <argsstring>(std::shared_ptr&lt; StructType &gt; partition_type)</argsstring>
        <name>TypeFromPartitionType</name>
        <qualifiedname>iceberg::ManifestEntry::TypeFromPartitionType</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1StructType" kindref="compound">StructType</ref> &gt;</type>
          <declname>partition_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="309" column="26" bodyfile="iceberg/manifest_entry.cc" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structiceberg_1_1ManifestEntry_1aa4ddf37e475c532177a21f09f14ba157" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1StructType" kindref="compound">StructType</ref> &gt;</type>
        <definition>std::shared_ptr&lt; StructType &gt; iceberg::ManifestEntry::TypeFromDataFileType</definition>
        <argsstring>(std::shared_ptr&lt; StructType &gt; datafile_type)</argsstring>
        <name>TypeFromDataFileType</name>
        <qualifiedname>iceberg::ManifestEntry::TypeFromDataFileType</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classiceberg_1_1StructType" kindref="compound">StructType</ref> &gt;</type>
          <declname>datafile_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iceberg/manifest_entry.h" line="311" column="26" bodyfile="iceberg/manifest_entry.cc" bodystart="72" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A manifest is an immutable Avro file that lists data files or delete files, along with each file&apos;s partition data tuple, metrics, and tracking information. </para>
    </briefdescription>
    <detaileddescription>
<para>The schema of a manifest file </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>iceberg::DataFile</label>
        <link refid="structiceberg_1_1DataFile"/>
        <childnode refid="4" relation="usage">
          <edgelabel>file_path</edgelabel>
          <edgelabel>kPartitionField</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>partition</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>column_sizes</edgelabel>
          <edgelabel>nan_value_counts</edgelabel>
          <edgelabel>null_value_counts</edgelabel>
          <edgelabel>value_counts</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>lower_bounds</edgelabel>
          <edgelabel>upper_bounds</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>key_metadata</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>split_offsets</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>equality_ids</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>kColumnSizes</edgelabel>
          <edgelabel>kContent</edgelabel>
          <edgelabel>kContentOffset</edgelabel>
          <edgelabel>kContentSize</edgelabel>
          <edgelabel>kEqualityIds</edgelabel>
          <edgelabel>kFileFormat</edgelabel>
          <edgelabel>kFilePath</edgelabel>
          <edgelabel>kFileSize</edgelabel>
          <edgelabel>kFirstRowId</edgelabel>
          <edgelabel>kKeyMetadata</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>iceberg::Literal</label>
        <link refid="classiceberg_1_1Literal"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>iceberg::ManifestEntry</label>
        <link refid="structiceberg_1_1ManifestEntry"/>
        <childnode refid="2" relation="usage">
          <edgelabel>data_file</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>kFileSequenceNumber</edgelabel>
          <edgelabel>kSequenceNumber</edgelabel>
          <edgelabel>kSnapshotId</edgelabel>
          <edgelabel>kStatus</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>kDataFileField</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>iceberg::SchemaField</label>
        <link refid="classiceberg_1_1SchemaField"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>iceberg::util::Formattable</label>
        <link refid="classiceberg_1_1util_1_1Formattable"/>
      </node>
      <node id="9">
        <label>std::map&lt; int32_t, int64_t &gt;</label>
      </node>
      <node id="10">
        <label>std::map&lt; int32_t, std::vector&lt; uint8_t &gt; &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::shared_ptr&lt; iceberg::DataFile &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; iceberg::Literal &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::vector&lt; int32_t &gt;</label>
      </node>
      <node id="12">
        <label>std::vector&lt; int64_t &gt;</label>
      </node>
      <node id="11">
        <label>std::vector&lt; uint8_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="iceberg/manifest_entry.h" line="276" column="1" bodyfile="iceberg/manifest_entry.h" bodystart="276" bodyend="313"/>
    <listofallmembers>
      <member refid="structiceberg_1_1ManifestEntry_1a9b5f9b8341261f1d10379d7eee814135" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>data_file</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1a25e3368468e2b43b7751729cdb4e2e4a" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>file_sequence_number</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1a09017895fe035d8c751ede61e4975dce" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>kDataFileField</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1a15ce86fa4f56aff75d9b52fb2863fd8a" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>kDataFileFieldId</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1ad01eabb1b8b67ac537bf25f262fc1e2e" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>kFileSequenceNumber</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1a10d10f423e8c15d284146a654591d079" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>kSequenceNumber</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1aae0d024965ab890f9913c223d9906c58" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>kSnapshotId</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1afe873220bfad538c28a2ce7270ed7a41" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>kStatus</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1ae47c2f4d51be24710247e1b664547be2" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>operator==</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1a357b286d5d9a3fa93dcb2cab58c1ddf5" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>sequence_number</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1a111546aa262e2f12866313c3d7f13a8c" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>snapshot_id</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1adcaea3bfa81ceb698fadd1f04b4b7b81" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>status</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1aa4ddf37e475c532177a21f09f14ba157" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>TypeFromDataFileType</name></member>
      <member refid="structiceberg_1_1ManifestEntry_1a04902747835e97844c0be254fefc5b1b" prot="public" virt="non-virtual"><scope>iceberg::ManifestEntry</scope><name>TypeFromPartitionType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
